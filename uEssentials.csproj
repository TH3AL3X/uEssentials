<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>
    <OutputType>Library</OutputType>
    <RootNamespace>Essentials</RootNamespace>
    <TargetFramework>netstandard2.1</TargetFramework>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <OutputPath>bin\</OutputPath>
    <DefineConstants>TRACE;DEBUG;DEV</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <Optimize>false</Optimize>
  </PropertyGroup>
  <PropertyGroup>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <StartupObject />
    <BaseOutputPath>C:\Users\funes\Desktop\uEssentials-master\publish</BaseOutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <OutputPath>bin\x64\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;DEV</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <OutputPath>bin\x64\Release\</OutputPath>
  </PropertyGroup>
  <ItemGroup>
    <Reference Update="System">
      <Private>False</Private>
    </Reference>
    <Reference Update="System.Core">
      <Private>False</Private>
    </Reference>
    <Reference Update="System.Xml.Linq">
      <Private>False</Private>
    </Reference>
    <Reference Update="System.Xml">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="default\lang_en.json" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="default\lang_pt-br.json" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="default\lang_es.json" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="default\lang_ru.json" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="default\docs\pt-BR\Docs for config.json" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="System.Data.DataSetExtensions" Version="4.5.0" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Newtonsoft.Json" Version="7.0.1" />
    <PackageReference Include="RocketModFix.Rocket.API" Version="4.17.0" />
    <PackageReference Include="RocketModFix.Rocket.Core" Version="4.17.0" />
    <PackageReference Include="RocketModFix.Rocket.Unturned" Version="4.17.0" />
    <PackageReference Include="RocketModFix.UnityEngine.Redist" Version="2021.3.29.1" />
    <PackageReference Include="RocketModFix.Unturned.Redist" Version="3.24.1" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="Properties\AssemblyInfo - copia.cs" />
    <Compile Remove="src\Commands\CommandInventory.cs" />
    <Compile Remove="src\Components\Player\FlyPlayer.cs" />
    <Compile Remove="src\Components\Player\TpaPlayer.cs" />
    <Compile Remove="src\Updater\GithubUpdater.cs" />
    <Compile Remove="src\Updater\IUpdater.cs" />
    <Compile Remove="src\Updater\UpdateResult.cs" />
  </ItemGroup>
  <UsingTask TaskName="ReplaceDevPluginVersion" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <Phase ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs"><![CDATA[
              var random = new Random();
              var matchPattern = "PLUGIN_VERSION = \"999\\.\\d+\\.\\d+\\.\\d+\";";
              var replacementVersion = Phase == "before"
                ? string.Format("999.{0}.{1}.{2}", random.Next(100), random.Next(100), random.Next(100))
                : "999.0.0.0";
              var replacement = string.Format("PLUGIN_VERSION = \"{0}\";", replacementVersion);

              File.WriteAllText(
                "src/Core/EssCore.cs",
                Regex.Replace(File.ReadAllText("src/Core/EssCore.cs"), matchPattern, replacement));
            ]]></Code>
    </Task>
  </UsingTask>
  <Target Name="BeforeBuild">
    <ReplaceDevPluginVersion Phase="before" />
  </Target>
  <Target Name="AfterBuild">
    <ReplaceDevPluginVersion Phase="after" />
  </Target>
</Project>