<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.UIElementsModule</name>
    </assembly>
    <member name="T:UnityEngine.UIElements.AbstractProgressBar">
      <summary>
        <para>
 Abstract base class for the ProgressBar.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.AbstractProgressBar.backgroundUssClassName">
      <summary>
        <para>
 USS Class Name used to style the background of the ProgressBar.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.AbstractProgressBar.containerUssClassName">
      <summary>
        <para>
 USS Class Name used to style the container of the ProgressBar.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.AbstractProgressBar.highValue">
      <summary>
        <para>
 Sets the maximum value of the ProgressBar.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.AbstractProgressBar.lowValue">
      <summary>
        <para>
 Sets the minimum value of the ProgressBar.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.AbstractProgressBar.progressUssClassName">
      <summary>
        <para>
 USS Class Name used to style the progress bar of the ProgressBar.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.AbstractProgressBar.title">
      <summary>
        <para>
 Sets the title of the ProgressBar that displays in the center of the control.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.AbstractProgressBar.titleContainerUssClassName">
      <summary>
        <para>
 USS Class Name used to style the container of the title of the ProgressBar.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.AbstractProgressBar.titleUssClassName">
      <summary>
        <para>
 USS Class Name used to style the title of the ProgressBar.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.AbstractProgressBar.ussClassName">
      <summary>
        <para>
 USS Class Name used to style the ProgressBar.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.AbstractProgressBar.value">
      <summary>
        <para>
 Sets the progress value. If the value has changed, dispatches an ChangeEvent_1 of type float.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.AbstractProgressBar.SetValueWithoutNotify(System.Single)">
      <summary>
        <para>
 Sets the progress value.
 </para>
      </summary>
      <param name="newValue"></param>
    </member>
    <member name="T:UnityEngine.UIElements.Align">
      <summary>
        <para>
 Defines the alignment behavior along an axis.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Align.Auto">
      <summary>
        <para>
 Let Flex decide.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Align.Center">
      <summary>
        <para>
 Items are centered on the axis.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Align.FlexEnd">
      <summary>
        <para>
 End margin of the item is placed at the end of the axis.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Align.FlexStart">
      <summary>
        <para>
 Start margin of the item is placed at the start of the axis.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Align.Stretch">
      <summary>
        <para>
 Default. stretch to fill the axis while respecting min/max values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.AlternatingRowBackground">
      <summary>
        <para>
 Options to display alternating background colors for ListView rows.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.AlternatingRowBackground.All">
      <summary>
        <para>
 Alternate background colors for all rows, regardless of whether they have content. The background color continues to alternate for empty lines.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.AlternatingRowBackground.ContentOnly">
      <summary>
        <para>
 Alternate background colors only for rows that have content. The background color does not alternate for empty lines.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.AlternatingRowBackground.None">
      <summary>
        <para>
 Do not alternate background colors for rows.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Angle">
      <summary>
        <para>
 Represents an angle value.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Angle.unit">
      <summary>
        <para>
 The unit of the value property.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Angle.value">
      <summary>
        <para>
 The angle value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Angle.#ctor(System.Single)">
      <summary>
        <para>
 Creates an Angle from a float and an optionnal AngleUnit.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Angle.#ctor(System.Single,UnityEngine.UIElements.AngleUnit)">
      <summary>
        <para>
 Creates an Angle from a float and an optionnal AngleUnit.
 </para>
      </summary>
      <param name="value"></param>
      <param name="unit"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Angle.Degrees(System.Single)">
      <summary>
        <para>
 Creates a percentage Angle from a float.
 </para>
      </summary>
      <param name="value"></param>
      <returns>
        <para>The created angle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Angle.ToDegrees">
      <summary>
        <para>
 Returns the value of the angle, expressed in degrees.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.AngleUnit">
      <summary>
        <para>
 Unit of measurement used to express the value of an Angle.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.AngleUnit.Degree">
      <summary>
        <para>
 Interprets an angle as degrees.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.AngleUnit.Gradian">
      <summary>
        <para>
 Interprets the measurement of an angle in gradians. One full circle is 400 gradians
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.AngleUnit.Radian">
      <summary>
        <para>
 Interprets the measurement of an angle in radians. One full circle is 2Pi radians which approximates to 6.2832 radians
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.AngleUnit.Turn">
      <summary>
        <para>
 Interprets the measurement of an angle, expressed as a number of turns. One full circle is one turn.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.AttachToPanelEvent">
      <summary>
        <para>
 Event sent after an element is added to an element that is a descendent of a panel.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Background">
      <summary>
        <para>
 Describes a VisualElement background.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Background.renderTexture">
      <summary>
        <para>
 The RenderTexture to display as a background.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Background.sprite">
      <summary>
        <para>
 The sprite to display as a background.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Background.texture">
      <summary>
        <para>
 The texture to display as a background.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Background.vectorImage">
      <summary>
        <para>
 The VectorImage to display as a background.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Background.#ctor(UnityEngine.Texture2D)">
      <summary>
        <para>
 Creates from a Texture2D.
 </para>
      </summary>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Background.FromRenderTexture(UnityEngine.RenderTexture)">
      <summary>
        <para>
 Creates a background from a RenderTexture.
 </para>
      </summary>
      <param name="rt">The render texture to use as a background.</param>
      <returns>
        <para>A new background object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Background.FromSprite(UnityEngine.Sprite)">
      <summary>
        <para>
 Creates a background from a Sprite.
 </para>
      </summary>
      <param name="s">The sprite to use as a background.</param>
      <returns>
        <para>A new background object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Background.FromTexture2D(UnityEngine.Texture2D)">
      <summary>
        <para>
 Creates a background from a Texture2D.
 </para>
      </summary>
      <param name="t">The texture to use as a background.</param>
      <returns>
        <para>A new background object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Background.FromVectorImage(UnityEngine.UIElements.VectorImage)">
      <summary>
        <para>
 Creates a background from a VectorImage.
 </para>
      </summary>
      <param name="vi">The vector image to use as a background.</param>
      <returns>
        <para>A new background object.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.BaseBoolField">
      <summary>
        <para>
 A BaseBoolField is a clickable element that represents a boolean value.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseBoolField.text">
      <summary>
        <para>
 Optional text that appears after the BaseBoolField.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.BaseBoolField.#ctor(System.String)">
      <summary>
        <para>
 Creates a BaseBoolField with a Label and a default manipulator.
 </para>
      </summary>
      <param name="label">The Label text.</param>
    </member>
    <member name="M:UnityEngine.UIElements.BaseBoolField.InitLabel">
      <summary>
        <para>
 Initializes the Label element whenever the BaseBoolField.text property changes.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.BaseBoolField.SetValueWithoutNotify(System.Boolean)">
      <summary>
        <para>
 Sets the value of the BaseBoolField, but does not notify the rest of the hierarchy of the change.
 </para>
      </summary>
      <param name="newValue"></param>
    </member>
    <member name="M:UnityEngine.UIElements.BaseBoolField.ToggleValue">
      <summary>
        <para>
 Inverts the BaseBoolField.value property.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.BaseField`1">
      <summary>
        <para>
 Abstract base class for controls.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseField_1.alignedFieldUssClassName">
      <summary>
        <para>
 USS class name of elements that are aligned in a inspector element
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseField_1.inputUssClassName">
      <summary>
        <para>
 USS class name of input elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseField_1.label">
      <summary>
        <para>
 The string representing the label that will appear beside the field.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseField_1.labelDraggerVariantUssClassName">
      <summary>
        <para>
 USS class name of labels in elements of this type, when there is a dragger attached on them.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseField_1.labelElement">
      <summary>
        <para>
 This is the Label object that appears beside the input for the field.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseField_1.labelUssClassName">
      <summary>
        <para>
 USS class name of labels in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseField_1.mixedValueLabel">
      <summary>
        <para>
 Read-only label used to give the appearance of editing multiple different values.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseField_1.mixedValueLabelUssClassName">
      <summary>
        <para>
 USS class name of elements that show mixed values
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseField_1.noLabelVariantUssClassName">
      <summary>
        <para>
 USS class name of elements of this type, when there is no label.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseField_1.rawValue">
      <summary>
        <para>
 The value of the element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseField_1.showMixedValue">
      <summary>
        <para>
 When set to true, gives the field the appearance of editing multiple different values.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseField_1.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseField_1.value">
      <summary>
        <para>
 The value associated with the field.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.BaseField_1.SetValueWithoutNotify(TValueType)">
      <summary>
        <para>
 Allow to set a value without being notified of the change, if any.
 </para>
      </summary>
      <param name="newValue">New value to be set.</param>
    </member>
    <member name="M:UnityEngine.UIElements.BaseField_1.UpdateMixedValueContent">
      <summary>
        <para>
 Update the field's visual content depending on showMixedValue.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.BaseField`1.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the BaseField.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.BaseField_1.UxmlTraits.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.BaseFieldTraits`2">
      <summary>
        <para>
 Traits for the BaseField.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.BaseFieldTraits_2.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initializes the trait of BaseField.
 </para>
      </summary>
      <param name="ve">The VisualElement to initialize.</param>
      <param name="bag">Bag of attributes.</param>
      <param name="cc">The creation context associated with these traits.</param>
    </member>
    <member name="T:UnityEngine.UIElements.BaseSlider`1">
      <summary>
        <para>
 This is a base class for the Slider fields.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseSlider_1.direction">
      <summary>
        <para>
 This is the actual property to contain the direction of the slider.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseSlider_1.dragContainerUssClassName">
      <summary>
        <para>
 USS class name of container elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseSlider_1.draggerBorderUssClassName">
      <summary>
        <para>
 USS class name of the dragger border element in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseSlider_1.draggerUssClassName">
      <summary>
        <para>
 USS class name of dragger elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseSlider_1.highValue">
      <summary>
        <para>
 This is the maximum value that the slider encodes.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseSlider_1.horizontalVariantUssClassName">
      <summary>
        <para>
 USS class name of elements of this type, when they are displayed horizontally.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseSlider_1.inputUssClassName">
      <summary>
        <para>
 USS class name of input elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseSlider_1.inverted">
      <summary>
        <para>
 This indicates whether or not this slider is inverted.
 For an inverted horizontal slider, high value is located to the left, low value is located to the right
 For an inverted vertical slider, high value is located to the bottom, low value is located to the top.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseSlider_1.labelUssClassName">
      <summary>
        <para>
 USS class name of labels in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseSlider_1.lowValue">
      <summary>
        <para>
 This is the minimum value that the slider encodes.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseSlider_1.pageSize">
      <summary>
        <para>
 This is a generic page size used to change the value when clicking in the slider.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseSlider_1.range">
      <summary>
        <para>
 This is the range from the minimum value to the maximum value of the slider.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseSlider_1.showInputField">
      <summary>
        <para>
 The visibility of the optional field inside the slider control.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseSlider_1.textFieldClassName">
      <summary>
        <para>
 USS class name of the text field element in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseSlider_1.trackerUssClassName">
      <summary>
        <para>
 USS class name of tracker elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseSlider_1.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseSlider_1.value">
      <summary>
        <para>
 The actual value of the slider.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseSlider_1.verticalVariantUssClassName">
      <summary>
        <para>
 USS class name of elements of this type, when they are displayed vertically.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.BaseSlider_1.AdjustDragElement(System.Single)">
      <summary>
        <para>
 Method used to adjust the dragelement. Mainly used in a scroller.
 </para>
      </summary>
      <param name="factor">The factor used to adjust the drag element, where a value &amp;gt; 1 will make it invisible.</param>
    </member>
    <member name="T:UnityEngine.UIElements.BaseVerticalCollectionView">
      <summary>
        <para>
 Base class for controls that display virtualized vertical content inside a scroll view.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.bindItem">
      <summary>
        <para>
 Obsolete. Use ListView.bindItem or TreeView.bindItem instead.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseVerticalCollectionView.borderUssClassName">
      <summary>
        <para>
 The USS class name for BaseVerticalCollectionView elements with a border.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.contentContainer">
      <summary>
        <para>
 Returns the content container for the BaseVerticalCollectionView. Because the BaseVerticalCollectionView
 control automatically manages its content, this always returns null.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.destroyItem">
      <summary>
        <para>
 Obsolete. Use ListView.destroyItem or TreeView.destroyItem instead.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseVerticalCollectionView.dragHoverBarUssClassName">
      <summary>
        <para>
 The USS class name of the drag hover bar.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.fixedItemHeight">
      <summary>
        <para>
 The height of a single item in the list, in pixels.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.horizontalScrollingEnabled">
      <summary>
        <para>
 This property controls whether the collection view shows a horizontal scroll bar when its content
 does not fit in the visible area.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseVerticalCollectionView.itemAlternativeBackgroundUssClassName">
      <summary>
        <para>
 The USS class name for odd rows in the BaseVerticalCollectionView.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseVerticalCollectionView.itemDragHoverUssClassName">
      <summary>
        <para>
 The USS class name applied to an item element on drag hover.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.itemHeight">
      <summary>
        <para>
 Obsolete.  Use BaseVerticalCollectionView.fixedItemHeight instead.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.BaseVerticalCollectionView.itemIndexChanged(System.Action`2&lt;System.Int32,System.Int32&gt;)">
      <summary>
        <para>
 Called when an item is moved in the itemsSource.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="F:UnityEngine.UIElements.BaseVerticalCollectionView.itemSelectedVariantUssClassName">
      <summary>
        <para>
 The USS class name of selected item elements in the BaseVerticalCollectionView.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.itemsSource">
      <summary>
        <para>
 The data source for collection items.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.BaseVerticalCollectionView.itemsSourceChanged(System.Action)">
      <summary>
        <para>
 Called when the itemsSource is reassigned or changes size.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="F:UnityEngine.UIElements.BaseVerticalCollectionView.itemUssClassName">
      <summary>
        <para>
 The USS class name of item elements in BaseVerticalCollectionView elements.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseVerticalCollectionView.listScrollViewUssClassName">
      <summary>
        <para>
 The USS class name of the scroll view in the BaseVerticalCollectionView.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.makeItem">
      <summary>
        <para>
 Obsolete. Use ListView.makeItem or TreeView.makeItem instead.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.BaseVerticalCollectionView.onItemChosen(System.Action`1&lt;System.Object&gt;)">
      <summary>
        <para>
 Callback triggered when a user double-clicks an item to activate it. This is different from selecting the item.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.UIElements.BaseVerticalCollectionView.onItemsChosen(System.Action`1&lt;System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;&gt;)">
      <summary>
        <para>
 Obsolete. Use BaseVerticalCollectionView.itemsChosen instead.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.UIElements.BaseVerticalCollectionView.onSelectedIndicesChange(System.Action`1&lt;System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;&gt;)">
      <summary>
        <para>
 Obsolete. Use BaseVerticalCollectionView.selectedIndicesChanged instead.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.UIElements.BaseVerticalCollectionView.onSelectionChange(System.Action`1&lt;System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;&gt;)">
      <summary>
        <para>
 Obsolete. Use BaseVerticalCollectionView.selectionChanged instead.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.UIElements.BaseVerticalCollectionView.onSelectionChanged(System.Action`1&lt;System.Collections.Generic.List`1&lt;System.Object&gt;&gt;)">
      <summary>
        <para>
 Callback triggered when the selection changes.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.reorderable">
      <summary>
        <para>
 Gets or sets a value that indicates whether the user can drag list items to reorder them.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.resolvedItemHeight">
      <summary>
        <para>
 The computed pixel-aligned height for the list elements.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.selectedIndex">
      <summary>
        <para>
 Returns or sets the selected item's index in the data source. If multiple items are selected, returns the
 first selected item's index. If multiple items are provided, sets them all as selected.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.selectedIndices">
      <summary>
        <para>
 Returns the indices of selected items in the data source. Always returns an enumerable, even if no item  is selected, or a
 single item is selected.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.selectedItem">
      <summary>
        <para>
 Returns the selected item from the data source. If multiple items are selected, returns the first selected item.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.selectedItems">
      <summary>
        <para>
 Returns the selected items from the data source. Always returns an enumerable, even if no item is selected, or a single
 item is selected.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.selectionType">
      <summary>
        <para>
 Controls the selection type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.showAlternatingRowBackgrounds">
      <summary>
        <para>
 This property controls whether the background colors of collection view rows alternate.
 Takes a value from the AlternatingRowBackground enum.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.showBorder">
      <summary>
        <para>
 Enable this property to display a border around the collection view.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.unbindItem">
      <summary>
        <para>
 Obsolete. Use ListView.unbindItem or TreeView.unbindItem instead.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.BaseVerticalCollectionView.ussClassName">
      <summary>
        <para>
 The USS class name for BaseVerticalCollectionView elements.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BaseVerticalCollectionView.virtualizationMethod">
      <summary>
        <para>
 The virtualization method to use for this collection when a scroll bar is visible.
 Takes a value from the CollectionVirtualizationMethod enum.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.AddToSelection(System.Int32)">
      <summary>
        <para>
 Adds an item to the collection of selected items.
 </para>
      </summary>
      <param name="index">Item index.</param>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.ClearSelection">
      <summary>
        <para>
 Deselects any selected items.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.#ctor">
      <summary>
        <para>
 Creates a BaseVerticalCollectionView with all default properties.
 The BaseVerticalCollectionView.itemSource must all be set for the BaseVerticalCollectionView to function properly.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.#ctor(System.Collections.IList,System.Single,System.Func`1&lt;UnityEngine.UIElements.VisualElement&gt;,System.Action`2&lt;UnityEngine.UIElements.VisualElement,System.Int32&gt;)">
      <summary>
        <para>
 Constructs a BaseVerticalCollectionView, with all required properties provided.
 </para>
      </summary>
      <param name="itemsSource">The list of items to use as a data source.</param>
      <param name="itemHeight">The height of each item, in pixels. For &lt;c&gt;FixedHeight&lt;/c&gt; virtualization only.</param>
      <param name="makeItem">The factory method to call to create a display item. The method should return a
 VisualElement that can be bound to a data item.</param>
      <param name="bindItem">The method to call to bind a data item to a display item. The method
 receives as parameters the display item to bind, and the index of the data item to bind it to.</param>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.GetRootElementForId(System.Int32)">
      <summary>
        <para>
 Gets the root element the specified TreeView item.
 </para>
      </summary>
      <param name="id">The TreeView item identifier.</param>
      <returns>
        <para>The TreeView item's root element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.GetRootElementForIndex(System.Int32)">
      <summary>
        <para>
 Gets the root element of the specified collection view item.
 </para>
      </summary>
      <param name="index">The item index.</param>
      <returns>
        <para>The item's root element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.Rebuild">
      <summary>
        <para>
 Clears the collection view, recreates all visible visual elements, and rebinds all items.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.Refresh">
      <summary>
        <para>
 Obsolete. Use BaseVerticalCollectionView.Rebuild instead.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.RefreshItem(System.Int32)">
      <summary>
        <para>
 Rebinds a single item if it is currently visible in the collection view.
 </para>
      </summary>
      <param name="index">The item index.</param>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.RefreshItems">
      <summary>
        <para>
 Rebinds all items currently visible.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.RemoveFromSelection(System.Int32)">
      <summary>
        <para>
 Removes an item from the collection of selected items.
 </para>
      </summary>
      <param name="index">The item index.</param>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.ScrollTo(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Scrolls to a specific VisualElement.
 </para>
      </summary>
      <param name="visualElement">The element to scroll to.</param>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.ScrollToId(System.Int32)">
      <summary>
        <para>
 Obsolete. Use BaseVerticalCollectionView.ScrollToItemById instead.
 </para>
      </summary>
      <param name="id">Item id to scroll to.</param>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.ScrollToItem(System.Int32)">
      <summary>
        <para>
 Scrolls to a specific item index and makes it visible.
 </para>
      </summary>
      <param name="index">Item index to scroll to. Specify -1 to make the last item visible.</param>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.SetSelection(System.Int32)">
      <summary>
        <para>
 Sets the currently selected item.
 </para>
      </summary>
      <param name="index">The item index.</param>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.SetSelection(System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;)">
      <summary>
        <para>
 Sets a collection of selected items.
 </para>
      </summary>
      <param name="indices">The collection of the indices of the items to be selected.</param>
    </member>
    <member name="M:UnityEngine.UIElements.BaseVerticalCollectionView.SetSelectionWithoutNotify(System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;)">
      <summary>
        <para>
 Sets a collection of selected items without triggering a selection change callback.
 </para>
      </summary>
      <param name="indices">The collection of items to be selected.</param>
    </member>
    <member name="T:UnityEngine.UIElements.BindableElement">
      <summary>
        <para>
 Element that can be bound to a property.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BindableElement.binding">
      <summary>
        <para>
 Binding object that will be updated.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.BindableElement.bindingPath">
      <summary>
        <para>
 Path of the target property to be bound.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.BindableElement.UxmlFactory">
      <summary>
        <para>
 Instantiates a BindableElement using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.BindableElement.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the BindableElement.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.BindableElement.UxmlTraits.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.BindableElement.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initialize BindableElement properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve"></param>
      <param name="bag"></param>
      <param name="cc"></param>
    </member>
    <member name="T:UnityEngine.UIElements.BlurEvent">
      <summary>
        <para>
 Event sent immediately after an element has lost focus. This event trickles down, it does not bubble up, and it cannot be cancelled.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Box">
      <summary>
        <para>
 Styled visual element to match the IMGUI Box Style.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Box.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Box.#ctor">
      <summary>
        <para>
  Initializes and returns an instance of Box.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Box.UxmlFactory">
      <summary>
        <para>
 Instantiates a Box using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Button">
      <summary>
        <para>
 This is a clickable button.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Button.clickable">
      <summary>
        <para>
 Clickable MouseManipulator for this Button.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.Button.clicked(System.Action)">
      <summary>
        <para>
 Callback triggered when the button is clicked.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.UIElements.Button.onClick(System.Action)">
      <summary>
        <para>
 Obsolete. Use Button.clicked instead.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="F:UnityEngine.UIElements.Button.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Button.#ctor">
      <summary>
        <para>
 Constructs a Button.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Button.#ctor(System.Action)">
      <summary>
        <para>
 Constructs a button with an Action that is triggered when the button is clicked.
 </para>
      </summary>
      <param name="clickEvent">The action triggered when the button is clicked.</param>
    </member>
    <member name="T:UnityEngine.UIElements.Button.UxmlFactory">
      <summary>
        <para>
 Instantiates a Button using data from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Button.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the Button.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Button.UxmlTraits.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.CallbackEventHandler">
      <summary>
        <para>
 Interface for classes capable of having callbacks to handle events.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.CallbackEventHandler.ExecuteDefaultAction(UnityEngine.UIElements.EventBase)">
      <summary>
        <para>
 Executes logic after the callbacks registered on the event target have executed,
 unless the event has been marked to prevent its default behaviour.
 EventBase{T}.PreventDefault.
 </para>
      </summary>
      <param name="evt">The event instance.</param>
    </member>
    <member name="M:UnityEngine.UIElements.CallbackEventHandler.ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase)">
      <summary>
        <para>
 Executes logic after the callbacks registered on the event target have executed,
 unless the event is marked to prevent its default behaviour.
 EventBase{T}.PreventDefault.
 </para>
      </summary>
      <param name="evt">The event instance.</param>
    </member>
    <member name="M:UnityEngine.UIElements.CallbackEventHandler.HandleEvent(UnityEngine.UIElements.EventBase)">
      <summary>
        <para>
 Handle an event, most often by executing the callbacks associated with the event.
 </para>
      </summary>
      <param name="evt">The event to handle.</param>
    </member>
    <member name="M:UnityEngine.UIElements.CallbackEventHandler.HasBubbleUpHandlers">
      <summary>
        <para>
 Return true if event handlers for the event propagation BubbleUp phase have been attached on this object.
 </para>
      </summary>
      <returns>
        <para>True if object has event handlers for the BubbleUp phase.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.CallbackEventHandler.HasTrickleDownHandlers">
      <summary>
        <para>
 Returns true if event handlers, for the event propagation TrickleDown phase, are attached to this object.
 </para>
      </summary>
      <returns>
        <para>True if object has event handlers for the TrickleDown phase.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.CallbackEventHandler.RegisterCallback(UnityEngine.UIElements.EventCallback`1&lt;TEventType&gt;,UnityEngine.UIElements.TrickleDown)">
      <summary>
        <para>
 Adds an event handler to the instance. If the event handler has already been registered for the same phase (either TrickleDown or BubbleUp) then this method has no effect.
 </para>
      </summary>
      <param name="callback">The event handler to add.</param>
      <param name="useTrickleDown">By default, this callback is called during the BubbleUp phase. Pass TrickleDown.TrickleDown to call this callback during the TrickleDown phase.</param>
    </member>
    <member name="M:UnityEngine.UIElements.CallbackEventHandler.RegisterCallback(UnityEngine.UIElements.EventCallback`2&lt;TEventType,TUserArgsType&gt;,TUserArgsType,UnityEngine.UIElements.TrickleDown)">
      <summary>
        <para>
 Adds an event handler to the instance. If the event handler has already been registered for the same phase (either TrickleDown or BubbleUp) then this method has no effect.
 </para>
      </summary>
      <param name="callback">The event handler to add.</param>
      <param name="userArgs">Data to pass to the callback.</param>
      <param name="useTrickleDown">By default, this callback is called during the BubbleUp phase. Pass TrickleDown.TrickleDown to call this callback during the TrickleDown phase.</param>
    </member>
    <member name="M:UnityEngine.UIElements.CallbackEventHandler.SendEvent(UnityEngine.UIElements.EventBase)">
      <summary>
        <para>
 Sends an event to the event handler.
 </para>
      </summary>
      <param name="e">The event to send.</param>
    </member>
    <member name="M:UnityEngine.UIElements.CallbackEventHandler.UnregisterCallback(UnityEngine.UIElements.EventCallback`1&lt;TEventType&gt;,UnityEngine.UIElements.TrickleDown)">
      <summary>
        <para>
 Remove callback from the instance.
 </para>
      </summary>
      <param name="callback">The callback to remove. If this callback was never registered, nothing happens.</param>
      <param name="useTrickleDown">Set this parameter to true to remove the callback from the TrickleDown phase. Set this parameter to false to remove the callback from the BubbleUp phase.</param>
    </member>
    <member name="M:UnityEngine.UIElements.CallbackEventHandler.UnregisterCallback(UnityEngine.UIElements.EventCallback`2&lt;TEventType,TUserArgsType&gt;,UnityEngine.UIElements.TrickleDown)">
      <summary>
        <para>
 Remove callback from the instance.
 </para>
      </summary>
      <param name="callback">The callback to remove. If this callback was never registered, nothing happens.</param>
      <param name="useTrickleDown">Set this parameter to true to remove the callback from the TrickleDown phase. Set this parameter to false to remove the callback from the BubbleUp phase.</param>
    </member>
    <member name="T:UnityEngine.UIElements.ChangeEvent`1">
      <summary>
        <para>
 Sends an event when a value in a field changes.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ChangeEvent_1.newValue">
      <summary>
        <para>
 The new value.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ChangeEvent_1.previousValue">
      <summary>
        <para>
 The value before the change occured.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ChangeEvent_1.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ChangeEvent_1.GetPooled(T,T)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="previousValue">The previous value.</param>
      <param name="newValue">The new value.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.ChangeEvent_1.Init">
      <summary>
        <para>
 Sets the event to its initial state.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Clickable">
      <summary>
        <para>
 Manipulator that tracks Mouse events on an element and callbacks when the elements is clicked.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Clickable.active">
      <summary>
        <para>
 This property tracks the activation of the manipulator. Set it to true when the manipulator is activated.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.Clickable.clicked(System.Action)">
      <summary>
        <para>
 Callback triggered when the target element is clicked.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.UIElements.Clickable.clickedWithEventInfo(System.Action`1&lt;UnityEngine.UIElements.EventBase&gt;)">
      <summary>
        <para>
 Callback triggered when the target element is clicked, including event data.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.UIElements.Clickable.lastMousePosition">
      <summary>
        <para>
 Specifies the mouse position saved during the last mouse event on the target Element.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Clickable.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="delay">Determines when the event begins. Value is defined in milliseconds. Applies if delay &amp;gt; 0.</param>
      <param name="interval">Determines the time delta between event repetition. Value is defined in milliseconds. Applies if interval &amp;gt; 0.</param>
    </member>
    <member name="M:UnityEngine.UIElements.Clickable.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Clickable.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Clickable.Invoke(UnityEngine.UIElements.EventBase)">
      <summary>
        <para>
 Invokes a click action.
 </para>
      </summary>
      <param name="evt"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Clickable.OnMouseDown(UnityEngine.UIElements.MouseDownEvent)">
      <summary>
        <para>
 This method is called when a MouseDownEvent is sent to the target element.
 </para>
      </summary>
      <param name="evt">The event.</param>
    </member>
    <member name="M:UnityEngine.UIElements.Clickable.OnMouseMove(UnityEngine.UIElements.MouseMoveEvent)">
      <summary>
        <para>
 This method is called when a MouseMoveEvent is sent to the target element.
 </para>
      </summary>
      <param name="evt">The event.</param>
    </member>
    <member name="M:UnityEngine.UIElements.Clickable.OnMouseUp(UnityEngine.UIElements.MouseUpEvent)">
      <summary>
        <para>
 This method is called when a MouseUpEvent is sent to the target element.
 </para>
      </summary>
      <param name="evt">The event.</param>
    </member>
    <member name="M:UnityEngine.UIElements.Clickable.ProcessCancelEvent(UnityEngine.UIElements.EventBase,System.Int32)">
      <summary>
        <para>
 This method processes the up cancel sent to the target Element.
 </para>
      </summary>
      <param name="evt"></param>
      <param name="pointerId"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Clickable.ProcessDownEvent(UnityEngine.UIElements.EventBase,UnityEngine.Vector2,System.Int32)">
      <summary>
        <para>
 This method processes the down event sent to the target Element.
 </para>
      </summary>
      <param name="evt"></param>
      <param name="localPosition"></param>
      <param name="pointerId"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Clickable.ProcessMoveEvent(UnityEngine.UIElements.EventBase,UnityEngine.Vector2)">
      <summary>
        <para>
 This method processes the move event sent to the target Element.
 </para>
      </summary>
      <param name="evt"></param>
      <param name="localPosition"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Clickable.ProcessUpEvent(UnityEngine.UIElements.EventBase,UnityEngine.Vector2,System.Int32)">
      <summary>
        <para>
 This method processes the up event sent to the target Element.
 </para>
      </summary>
      <param name="evt"></param>
      <param name="localPosition"></param>
      <param name="pointerId"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Clickable.RegisterCallbacksOnTarget">
      <summary>
        <para>
 Called to register mouse event callbacks on the target element.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Clickable.UnregisterCallbacksFromTarget">
      <summary>
        <para>
 Called to unregister event callbacks from the target element.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ClickEvent">
      <summary>
        <para>
 This event is sent when the left mouse button is clicked.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ClickEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ClickEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.CollectionVirtualizationMethod">
      <summary>
        <para>
 Options to change the virtualization method used by the ListView to display its content.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.CollectionVirtualizationMethod.DynamicHeight">
      <summary>
        <para>
 ListView will use the actual height of every item when geometry changes. More flexible but less performant.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.CollectionVirtualizationMethod.FixedHeight">
      <summary>
        <para>
 ListView won't wait for the layout to update items, as the all have the same height. fixedItemHeight Needs to be set. More performant but less flexible.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.CommandEventBase`1">
      <summary>
        <para>
 Base class for command events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.CommandEventBase_1.commandName">
      <summary>
        <para>
 The command to validate or execute.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.CommandEventBase_1.GetPooled(UnityEngine.Event)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="systemEvent">An IMGUI command event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.CommandEventBase_1.GetPooled(System.String)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="commandName">The command name.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.CommandEventBase_1.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ContextClickEvent">
      <summary>
        <para>
 The event sent when clicking the right mouse button.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ContextType">
      <summary>
        <para>
 Describes in which context a VisualElement hierarchy is being ran.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ContextType.Editor">
      <summary>
        <para>
 Currently running in the Unity Editor.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ContextType.Player">
      <summary>
        <para>
 Currently running in an Unity Player.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ContextualMenuManager">
      <summary>
        <para>
 Use this class to display a contextual menu.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ContextualMenuManager.DisplayMenu(UnityEngine.UIElements.EventBase,UnityEngine.UIElements.IEventHandler)">
      <summary>
        <para>
 Displays the contextual menu.
 </para>
      </summary>
      <param name="triggerEvent">The event that triggered the display of the menu.</param>
      <param name="target">The element for which the menu is displayed.</param>
    </member>
    <member name="M:UnityEngine.UIElements.ContextualMenuManager.DisplayMenuIfEventMatches(UnityEngine.UIElements.EventBase,UnityEngine.UIElements.IEventHandler)">
      <summary>
        <para>
 Checks if the event triggers the display of the contextual menu. This method also displays the menu.
 </para>
      </summary>
      <param name="evt">The event to inspect.</param>
      <param name="eventHandler">The element for which the menu is displayed.</param>
    </member>
    <member name="M:UnityEngine.UIElements.ContextualMenuManager.DoDisplayMenu(UnityEngine.UIElements.DropdownMenu,UnityEngine.UIElements.EventBase)">
      <summary>
        <para>
 Displays the contextual menu.
 </para>
      </summary>
      <param name="menu">The menu to display.</param>
      <param name="triggerEvent">The event that triggers the display of the contextual menu.</param>
    </member>
    <member name="T:UnityEngine.UIElements.ContextualMenuManipulator">
      <summary>
        <para>
 Manipulator that displays a contextual menu when the user clicks the right mouse button or presses the menu key on the keyboard.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ContextualMenuManipulator.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ContextualMenuManipulator.RegisterCallbacksOnTarget">
      <summary>
        <para>
 Register the event callbacks on the manipulator target.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ContextualMenuManipulator.UnregisterCallbacksFromTarget">
      <summary>
        <para>
 Unregister the event callbacks from the manipulator target.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ContextualMenuPopulateEvent">
      <summary>
        <para>
 The event sent when a contextual menu requires menu items.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ContextualMenuPopulateEvent.menu">
      <summary>
        <para>
 The menu to populate.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ContextualMenuPopulateEvent.triggerEvent">
      <summary>
        <para>
 The event that triggered the ContextualMenuPopulateEvent.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ContextualMenuPopulateEvent.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ContextualMenuPopulateEvent.GetPooled(UnityEngine.UIElements.EventBase,UnityEngine.UIElements.DropdownMenu,UnityEngine.UIElements.IEventHandler,UnityEngine.UIElements.ContextualMenuManager)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="triggerEvent">The event that triggered the display of the contextual menu.</param>
      <param name="menu">The menu to populate.</param>
      <param name="target">The element that triggered the display of the contextual menu.</param>
      <param name="menuManager">The menu manager that displays the menu.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.ContextualMenuPopulateEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.CreationContext">
      <summary>
        <para>
 This structure holds information used during UXML template instantiation.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.CreationContext.target">
      <summary>
        <para>
 The element into which the visualTreeAsset is being cloned or instantiated.
 VisualTreeAsset.CloneTree()
 VisualTreeAsset.Instantiate()
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.CreationContext.visualTreeAsset">
      <summary>
        <para>
 The target UXML file to clone or instantiate.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Cursor">
      <summary>
        <para>
 Script interface for VisualElement cursor style property IStyle.cursor.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Cursor.hotspot">
      <summary>
        <para>
 The offset from the top left of the texture to use as the target point (must be within the bounds of the cursor).
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Cursor.texture">
      <summary>
        <para>
 The texture to use for the cursor style. To use a texture as a cursor, import the texture with "Read/Write enabled" in the texture importer (or using the "Cursor" defaults).
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.CustomStyleProperty`1">
      <summary>
        <para>
 Define a custom style property for an element to be retrieved with CustomStyleResolvedEvent.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.CustomStyleProperty_1.name">
      <summary>
        <para>
 Name of the custom property.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.CustomStyleProperty_1.#ctor(System.String)">
      <summary>
        <para>
 Creates custom property from a string.
 </para>
      </summary>
      <param name="propertyName">Name of the property. Must start with a -- prefix.</param>
    </member>
    <member name="T:UnityEngine.UIElements.CustomStyleResolvedEvent">
      <summary>
        <para>
 Event sent after the custom style properties of a VisualElement have been resolved.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.CustomStyleResolvedEvent.customStyle">
      <summary>
        <para>
 Returns the custom style properties accessor for the targeted VisualElement.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.DetachFromPanelEvent">
      <summary>
        <para>
 Event sent just before an element is detach from its parent, if the parent is the descendant of a panel.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.DisplayStyle">
      <summary>
        <para>
 Defines how an element is displayed in the layout.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.DisplayStyle.Flex">
      <summary>
        <para>
 The element displays normally.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.DisplayStyle.None">
      <summary>
        <para>
 The element isn't visible and absent from the layout.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.DragAndDropEventBase`1">
      <summary>
        <para>
 Base class for drag and drop events.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.DragEnterEvent">
      <summary>
        <para>
 Use the DragEnterEvent class to manage events that occur when dragging enters an element or one of its descendants. The DragEnterEvent is cancellable, it does not trickle down, and it does not bubble up.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.DragEnterEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid renewing events. Instead, use GetPooled() to get an event from a pool of reusable events.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.DragEnterEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.DragExitedEvent">
      <summary>
        <para>
 The event sent to a dragged element when the drag and drop process ends.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.DragExitedEvent.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.DragExitedEvent.GetPooled(UnityEngine.Event)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="systemEvent">An IMGUI drag exited event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.DragExitedEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.DragLeaveEvent">
      <summary>
        <para>
 Use the DragLeaveEvent class to manage events sent when dragging leaves an element or one of its descendants. The DragLeaveEvent is cancellable, it does not trickle down, and it does not bubble up.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.DragLeaveEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid renewing events. Instead, use GetPooled() to get an event from a pool of reusable events.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.DragLeaveEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.DragPerformEvent">
      <summary>
        <para>
 The event sent to an element when another element is dragged and dropped on the element.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.DragUpdatedEvent">
      <summary>
        <para>
 The event sent when the element being dragged enters a possible drop target.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.DragUpdatedEvent.GetPooled(UnityEngine.Event)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="systemEvent">An IMGUI drag updated event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.DropdownField">
      <summary>
        <para>
 A control that allows the user to pick a choice from a list of options.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DropdownField.choices">
      <summary>
        <para>
 The list of choices to display in the popup menu.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DropdownField.index">
      <summary>
        <para>
 The currently selected index in the popup menu.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DropdownField.text">
      <summary>
        <para>
 This is the text displayed to the user for the current selection of the popup.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DropdownField.textElement">
      <summary>
        <para>
 This is the text displayed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DropdownField.value">
      <summary>
        <para>
 The currently selected value in the popup menu.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownField.#ctor">
      <summary>
        <para>
 Construct a DropdownField.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownField.#ctor(System.String)">
      <summary>
        <para>
 Construct a DropdownField.
 </para>
      </summary>
      <param name="label"></param>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownField.#ctor(System.Collections.Generic.List`1&lt;System.String&gt;,System.String,System.Func`2&lt;System.String,System.String&gt;,System.Func`2&lt;System.String,System.String&gt;)">
      <summary>
        <para>
 Construct a DropdownField.
 </para>
      </summary>
      <param name="choices"></param>
      <param name="defaultValue"></param>
      <param name="formatSelectedValueCallback"></param>
      <param name="formatListItemCallback"></param>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownField.#ctor(System.String,System.Collections.Generic.List`1&lt;System.String&gt;,System.String,System.Func`2&lt;System.String,System.String&gt;,System.Func`2&lt;System.String,System.String&gt;)">
      <summary>
        <para>
 Construct a DropdownField.
 </para>
      </summary>
      <param name="label"></param>
      <param name="choices"></param>
      <param name="defaultValue"></param>
      <param name="formatSelectedValueCallback"></param>
      <param name="formatListItemCallback"></param>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownField.#ctor(System.Collections.Generic.List`1&lt;System.String&gt;,System.Int32,System.Func`2&lt;System.String,System.String&gt;,System.Func`2&lt;System.String,System.String&gt;)">
      <summary>
        <para>
 Construct a DropdownField.
 </para>
      </summary>
      <param name="choices"></param>
      <param name="defaultIndex"></param>
      <param name="formatSelectedValueCallback"></param>
      <param name="formatListItemCallback"></param>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownField.#ctor(System.String,System.Collections.Generic.List`1&lt;System.String&gt;,System.Int32,System.Func`2&lt;System.String,System.String&gt;,System.Func`2&lt;System.String,System.String&gt;)">
      <summary>
        <para>
 Construct a DropdownField.
 </para>
      </summary>
      <param name="label"></param>
      <param name="choices"></param>
      <param name="defaultIndex"></param>
      <param name="formatSelectedValueCallback"></param>
      <param name="formatListItemCallback"></param>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownField.SetValueWithoutNotify(System.String)">
      <summary>
        <para>
 Allow changing value without triggering any change event.
 </para>
      </summary>
      <param name="newValue">The new value.</param>
    </member>
    <member name="T:UnityEngine.UIElements.DropdownField.UxmlFactory">
      <summary>
        <para>
 Instantiates a DropdownField using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.DropdownField.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the DropdownField.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.DropdownMenu">
      <summary>
        <para>
 A drop-down menu.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenu.AppendAction">
      <summary>
        <para>
 Add an item that will execute an action in the drop-down menu. The item is added at the end of the current item list.
 </para>
      </summary>
      <param name="actionName">Name of the item. This name will be displayed in the drop-down menu.</param>
      <param name="action">Callback to execute when the user selects this item in the menu.</param>
      <param name="actionStatusCallback">Callback to execute to determine the status of the item.</param>
      <param name="userData">An object that will be stored in the userData property of the DropdownMenuAction item.</param>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenu.AppendAction">
      <summary>
        <para>
 Add an item that will execute an action in the drop-down menu. The item is added at the end of the current item list.
 </para>
      </summary>
      <param name="actionName">Name of the item. This name will be displayed in the drop-down menu.</param>
      <param name="action">Callback to execute when the user selects this item in the menu.</param>
      <param name="status">The status of the item.</param>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenu.AppendSeparator(System.String)">
      <summary>
        <para>
 Add a separator line in the menu. The separator is added at the end of the current item list.
 </para>
      </summary>
      <param name="subMenuPath">The submenu path where the separator will be added. Path components are delimited by forward slashes ('/').</param>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenu.InsertAction">
      <summary>
        <para>
 Add an item that will execute an action in the drop-down menu. The item is added at the end of the specified index in the list.
 </para>
      </summary>
      <param name="atIndex">Index where the item should be inserted.</param>
      <param name="actionName">Name of the item. This name will be displayed in the drop-down menu.</param>
      <param name="action">Callback to execute when the user selects this item in the menu.</param>
      <param name="actionStatusCallback">Callback to execute to determine the status of the item.</param>
      <param name="userData">An object that will be stored in the userData property of the DropdownMenuAction item. This object is accessible through the action callback.</param>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenu.InsertAction">
      <summary>
        <para>
 Add an item that will execute an action in the drop-down menu. The item is added at the end of the specified index in the list.
 </para>
      </summary>
      <param name="atIndex">Index where the item should be inserted.</param>
      <param name="actionName">Name of the item. This name will be displayed in the drop-down menu.</param>
      <param name="action">Callback to execute when the user selects this item in the menu.</param>
      <param name="status">The status of the item.</param>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenu.InsertSeparator(System.String,System.Int32)">
      <summary>
        <para>
 Add a separator line in the menu. The separator is added at the end of the specified index in the list.
 </para>
      </summary>
      <param name="subMenuPath">The submenu path where the separator is added. Path components are delimited by forward slashes ('/').</param>
      <param name="atIndex">Index where the separator should be inserted.</param>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenu.MenuItems">
      <summary>
        <para>
 Get the list of menu items.
 </para>
      </summary>
      <returns>
        <para>The list of items in the menu.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenu.PrepareForDisplay(UnityEngine.UIElements.EventBase)">
      <summary>
        <para>
 Update the status of all items by calling their status callback and remove the separators in excess. This is called just before displaying the menu.
 </para>
      </summary>
      <param name="e"></param>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenu.RemoveItemAt(System.Int32)">
      <summary>
        <para>
 Remove the menu item at index.
 </para>
      </summary>
      <param name="index">The index of the item to remove.</param>
    </member>
    <member name="T:UnityEngine.UIElements.DropdownMenuAction">
      <summary>
        <para>
 A menu action item.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DropdownMenuAction.eventInfo">
      <summary>
        <para>
 Provides information on the event that triggered the drop-down menu.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DropdownMenuAction.name">
      <summary>
        <para>
 The name of the item. The name can be prefixed by its submenu path. Path components are delimited by forward slashes ('/').
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DropdownMenuAction.status">
      <summary>
        <para>
 The status of the item.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DropdownMenuAction.userData">
      <summary>
        <para>
 The userData object stored by the constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenuAction.AlwaysDisabled(UnityEngine.UIElements.DropdownMenuAction)">
      <summary>
        <para>
 Status callback that always returns Status.Disabled.
 </para>
      </summary>
      <param name="a">Unused parameter.</param>
      <returns>
        <para>Always return Status.Disabled.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenuAction.AlwaysEnabled(UnityEngine.UIElements.DropdownMenuAction)">
      <summary>
        <para>
 Status callback that always returns Status.Enabled.
 </para>
      </summary>
      <param name="a">Unused parameter.</param>
      <returns>
        <para>Always return Status.Enabled.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenuAction.#ctor(System.String,System.Action`1&lt;UnityEngine.UIElements.DropdownMenuAction&gt;,System.Func`2&lt;UnityEngine.UIElements.DropdownMenuAction,UnityEngine.UIElements.DropdownMenuAction/Status&gt;,System.Object)">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="actionName">The path and name of the menu item. Use the path, delimited by forward slashes ('/'), to place the menu item within a submenu.</param>
      <param name="actionCallback">Action to be executed when the menu item is selected.</param>
      <param name="actionStatusCallback">Function called to determine if the menu item is enabled.</param>
      <param name="userData">An object that will be stored in the userData property.</param>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenuAction.Execute">
      <summary>
        <para>
 Execute the callback associated with this item.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.DropdownMenuAction.Status">
      <summary>
        <para>
 Status of the menu item. The values of this enumeration should be used as flags.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.DropdownMenuAction.Status.Checked">
      <summary>
        <para>
 The item is displayed with a checkmark.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.DropdownMenuAction.Status.Disabled">
      <summary>
        <para>
 The item is disabled and is not be selectable by the user.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.DropdownMenuAction.Status.Hidden">
      <summary>
        <para>
 The item is not displayed. This flag can be used with other flags.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.DropdownMenuAction.Status.None">
      <summary>
        <para>
 The item is not displayed. This is the default value and represents the absence of flags.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.DropdownMenuAction.Status.Normal">
      <summary>
        <para>
 The item is displayed normally.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenuAction.UpdateActionStatus(UnityEngine.UIElements.DropdownMenuEventInfo)">
      <summary>
        <para>
 Update the status flag of this item by calling the item status callback.
 </para>
      </summary>
      <param name="eventInfo">Information about the event that triggered the display of the drop-down menu, such as the mouse position or the key pressed.</param>
    </member>
    <member name="T:UnityEngine.UIElements.DropdownMenuEventInfo">
      <summary>
        <para>
 This class provides information about the event that triggered displaying the drop-down menu.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DropdownMenuEventInfo.localMousePosition">
      <summary>
        <para>
 If the triggering event was a mouse event, this property is the mouse position. The position is expressed using the coordinate system of the element that received the mouse event. Otherwise this property is zero.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DropdownMenuEventInfo.modifiers">
      <summary>
        <para>
 If modifier keys (Alt, Ctrl, Shift, Windows/Command) were pressed to trigger the display of the dropdown menu, this property lists the modifier keys.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DropdownMenuEventInfo.mousePosition">
      <summary>
        <para>
 If the triggering event was a mouse event, this property is the mouse position expressed using the global coordinate system. Otherwise this property is zero.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenuEventInfo.#ctor(UnityEngine.UIElements.EventBase)">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="e"></param>
    </member>
    <member name="T:UnityEngine.UIElements.DropdownMenuItem">
      <summary>
        <para>
 An item in a drop-down menu.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.DropdownMenuSeparator">
      <summary>
        <para>
 A separator menu item.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DropdownMenuSeparator.subMenuPath">
      <summary>
        <para>
 The submenu path where the separator will be added. Path components are delimited by forward slashes ('/').
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.DropdownMenuSeparator.#ctor(System.String)">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="subMenuPath">The path for the submenu. Path components are delimited by forward slashes ('/').</param>
    </member>
    <member name="T:UnityEngine.UIElements.DynamicAtlasCustomFilter">
      <summary>
        <para>
 Delegate that can be used as a custom filter for the dynamic atlas.
 </para>
      </summary>
      <param name="texture">The texture to filter.</param>
      <param name="filtersToApply">The filters the dynamic atlas applies when the delegate returns &lt;c&gt;true&lt;c&gt;.
 by default, this value is equal to &lt;see cref="DynamicAtlasSettings.activeFilters" &gt;.</param>
      <returns>
        <para>
 When false, the texture cannot be added to the atlas. When true the texture is added to the atlas,
 as long as it is not excluded by filtersToApply.
 </para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.DynamicAtlasFilters">
      <summary>
        <para>
 Options to enable or disable filters for the dynamic atlas.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.DynamicAtlasFilters.ColorSpace">
      <summary>
        <para>
 Excludes textures whose color space does not match the color space of the atlas.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.DynamicAtlasFilters.FilterMode">
      <summary>
        <para>
 Excludes textures that use a filter mode that the atlas does not support.&lt;br &gt;&lt;br &gt;

 This filter is disabled by default. You can enable it to prevent artifacts that might occur when
 the atlas does not support the texture's filter mode, and cannot sample the texture correctly. However,
 because excluding textures from the atlas can reduce performance, the default behavior is preferable in most cases.&lt;br &gt;&lt;br &gt;

 On GLES3 (and later) devices, the atlas supports more than one filter mode, so you should not need
 to enable this filter.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.DynamicAtlasFilters.Format">
      <summary>
        <para>
 Excludes textures that, because of their format, would lose precision, or be truncated when the system adds them to the atlas. &lt;br &gt;&lt;br &gt;

 The dynamic atlas system accepts non-HDR texture formats that have 8 bits or less per component, before compression&lt;br &gt;&lt;br &gt;

 You can add a compressed texture to a dynamic atlas. However, doing so might cause additional image loss because the system must first decompress
 the image in order to store it in the atlas. Decompression can yield values that are impossible to represent precisely in 8-bits per
 component. For example, a value of 1256 in the compressed image might decompress to 3512. The system cannot store 3512
 in the atlas, so it stores the value as either 1256 or 2256.&lt;br &gt;&lt;br &gt;

 This creates potential differences between the source texture and the version stored in the atlas. These differences are
 noticeable in the following scenarios:&lt;br &gt;&lt;br &gt;
   1. Blending Operations: 3512, 1256, and 2256 each produce a different result when you use them in a blending operation.
   2. Rendering to high precision render targets (for example, 16 bits per component).

 In most cases, the performance benefits of allowing compressed textures into the atlas outweigh the inconvenience of
 introducing small errors.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.DynamicAtlasFilters.None">
      <summary>
        <para>
 No filtering is performed.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.DynamicAtlasFilters.Readability">
      <summary>
        <para>
 Excludes readable textures.&lt;br &gt;&lt;br &gt;

 Readable textures are textures that are readable from scripts, which means they are also writable or editable.
 Another way to think of this filter is as a way to exclude textures that are not read-only.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.DynamicAtlasFilters.Size">
      <summary>
        <para>
 Excludes textures whose size exceeds the maximum sub-texture size specified in the dynamic atlas settings.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.DynamicAtlasSettings">
      <summary>
        <para>
 Contains the settings used by the dynamic atlas system.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DynamicAtlasSettings.activeFilters">
      <summary>
        <para>
 Defines the filters that the dynamic atlas system uses to exclude textures from the texture atlas.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DynamicAtlasSettings.customFilter">
      <summary>
        <para>
 When a delegate is assigned, the dynamic atlas system calls it to determine whether or not a texture can be added to the atlas.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DynamicAtlasSettings.defaultFilters">
      <summary>
        <para>
 Default filters for a dynamic atlas.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DynamicAtlasSettings.defaults">
      <summary>
        <para>
 Specifies default values used to initialize the structure.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DynamicAtlasSettings.maxAtlasSize">
      <summary>
        <para>
 Specifies the maximum size (width/height) of the atlas texture, in pixels. This value must be a power of two,
 and must be greater than or equal to minAtlasSize.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DynamicAtlasSettings.maxSubTextureSize">
      <summary>
        <para>
 Specifies the maximum size (width/height) of a texture that can be added to the atlas. When activeFilters
 contains DynamicAtlasFilters.Size, textures larger than this size are excluded from the atlas. Otherwise, this
 value is not used.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.DynamicAtlasSettings.minAtlasSize">
      <summary>
        <para>
 Specifies the minimum size (width/height) of the atlas texture, in pixels. This value must be a power of two,
 and must be greater than 0 and less than or equal to maxAtlasSize.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.EasingFunction">
      <summary>
        <para>
 Determines how intermediate values are calculated for a transition.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EasingFunction.mode">
      <summary>
        <para>
 The value of the EasingMode.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.EasingFunction.#ctor(UnityEngine.UIElements.EasingMode)">
      <summary>
        <para>
 Creates from a EasingMode.
 </para>
      </summary>
      <param name="mode"></param>
    </member>
    <member name="T:UnityEngine.UIElements.EasingMode">
      <summary>
        <para>
 Represents a mathematical function that describes the rate at which a numerical value changes.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.EventBase">
      <summary>
        <para>
 The base class for all UIElements events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase.bubbles">
      <summary>
        <para>
 Returns whether this event type bubbles up in the event propagation path.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase.currentTarget">
      <summary>
        <para>
 The current target of the event. This is the VisualElement, in the propagation path, for which event handlers are currently being executed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase.dispatch">
      <summary>
        <para>
 Indicates whether the event is being dispatched to a visual element. An event cannot be redispatched while it being dispatched. If you need to recursively dispatch an event, it is recommended that you use a copy of the event.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase.eventTypeId">
      <summary>
        <para>
 Retrieves the type ID for this event instance.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase.imguiEvent">
      <summary>
        <para>
 The IMGUIEvent at the source of this event. The source can be null since not all events are generated by IMGUI.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase.isDefaultPrevented">
      <summary>
        <para>
 Returns true if the default actions should not be executed for this event.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase.isImmediatePropagationStopped">
      <summary>
        <para>
 Indicates whether StopImmediatePropagation() was called for this event.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase.isPropagationStopped">
      <summary>
        <para>
 Whether StopPropagation() was called for this event.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase.originalMousePosition">
      <summary>
        <para>
 The original mouse position of the IMGUI event, before it is transformed to the current target local coordinates.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase.pooled">
      <summary>
        <para>
 Whether the event is allocated from a pool of events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase.propagationPhase">
      <summary>
        <para>
 The current propagation phase for this event. 
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase.target">
      <summary>
        <para>
 The target visual element that received this event. Unlike currentTarget, this target does not change when the event is sent to other elements along the propagation path.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase.timestamp">
      <summary>
        <para>
 The time when the event was created, in milliseconds.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase.tricklesDown">
      <summary>
        <para>
 Returns whether this event is sent down the event propagation path during the TrickleDown phase.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.EventBase.Dispose">
      <summary>
        <para>
 Implementation of IDisposable.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.EventBase.Init">
      <summary>
        <para>
 Resets all event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.EventBase.PostDispatch">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.EventBase.PostDispatch(UnityEngine.UIElements.IPanel)">
      <summary>
        <para>
 Allows subclasses to perform custom logic after the event has been dispatched.
 </para>
      </summary>
      <param name="panel">The panel where the event has been dispatched.</param>
    </member>
    <member name="M:UnityEngine.UIElements.EventBase.PreDispatch">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.EventBase.PreDispatch(UnityEngine.UIElements.IPanel)">
      <summary>
        <para>
 Allows subclasses to perform custom logic before the event is dispatched.
 </para>
      </summary>
      <param name="panel">The panel where the event will be dispatched.</param>
    </member>
    <member name="M:UnityEngine.UIElements.EventBase.PreventDefault">
      <summary>
        <para>
 Indicates whether the default actions are prevented from being executed for this event.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.EventBase.RegisterEventType">
      <summary>
        <para>
 Registers an event class to the event type system.
 </para>
      </summary>
      <returns>
        <para>The type ID.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.EventBase.StopImmediatePropagation">
      <summary>
        <para>
 Immediately stops the propagation of the event. The event isn't sent to other elements along the propagation path. This method prevents other event handlers from executing on the current target.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.EventBase.StopPropagation">
      <summary>
        <para>
 Stops propagating this event. The event is not sent to other elements along the propagation path. This method does not prevent other event handlers from executing on the current target.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.EventBase`1">
      <summary>
        <para>
 Generic base class for events, implementing event pooling and automatic registration to the event type system.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.EventBase_1.eventTypeId">
      <summary>
        <para>
 Retrieves the type ID for this event instance.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.EventBase_1.Dispose">
      <summary>
        <para>
 Implementation of IDispose.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.EventBase_1.GetPooled">
      <summary>
        <para>
 Gets an event from the event pool. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.EventBase_1.Init">
      <summary>
        <para>
 Resets all event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.EventBase_1.TypeId">
      <summary>
        <para>
 Retrieves the type ID for this event instance.
 </para>
      </summary>
      <returns>
        <para>The type ID.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.EventCallback_1">
      <summary>
        <para>
 Defines the structure of a callback that can be registered onto an element for an event type
 </para>
      </summary>
      <param name="evt">The event instance</param>
    </member>
    <member name="T:UnityEngine.UIElements.EventCallback_2">
      <summary>
        <para>
 Defines the structure of a callback that can be registered onto an element for an event type,
 along with a custom user defined argument.
 </para>
      </summary>
      <param name="evt">The event instance.</param>
      <param name="userArgs">The user argument instance.</param>
    </member>
    <member name="T:UnityEngine.UIElements.EventDispatcher">
      <summary>
        <para>
 Dispatches events to a IPanel.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.EventDispatcherGate">
      <summary>
        <para>
 Gates control when the dispatcher processes events.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.EventDispatcherGate.#ctor(UnityEngine.UIElements.EventDispatcher)">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="d">The dispatcher controlled by this gate.</param>
    </member>
    <member name="M:UnityEngine.UIElements.EventDispatcherGate.Dispose">
      <summary>
        <para>
 Implementation of IDisposable.Dispose. Opens the gate. If all gates are open, events in the queue are processed.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ExecuteCommandEvent">
      <summary>
        <para>
 This event is sent by the Editor when an element in the panel should execute a command.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Experimental.Easing">
      <summary>
        <para>
 A collection of easing curves to be used with ValueAnimations.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.Experimental.ITransitionAnimations">
      <summary>
        <para>
 Provides helper methods to create transition animations  for VisualElement style values
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Layout(UnityEngine.Rect,System.Int32)">
      <summary>
        <para>
 Triggers an animation changing this element's layout style values.
 </para>
      </summary>
      <param name="to"></param>
      <param name="durationMs"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Position(UnityEngine.Vector3,System.Int32)">
      <summary>
        <para>
 Triggers an animation changing this element's transform position.
 </para>
      </summary>
      <param name="to"></param>
      <param name="duration"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Rotation(UnityEngine.Quaternion,System.Int32)">
      <summary>
        <para>
 Triggers an animation changing this element's transform rotation.
 </para>
      </summary>
      <param name="to"></param>
      <param name="duration"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Scale(System.Single,System.Int32)">
      <summary>
        <para>
 Triggers an animation changing this element's transform scale.
 </para>
      </summary>
      <param name="to"></param>
      <param name="duration"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Size(UnityEngine.Vector2,System.Int32)">
      <summary>
        <para>
 Triggers an animation changing this element's size style values.
 </para>
      </summary>
      <param name="to"></param>
      <param name="durationMs"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(System.Single,System.Single,System.Int32,System.Action`2&lt;UnityEngine.UIElements.VisualElement,System.Single&gt;)">
      <summary>
        <para>
 Starts a transition animation on this VisualElement.
 </para>
      </summary>
      <param name="from">Start value.</param>
      <param name="to">End value.</param>
      <param name="durationMs">Duration of the transition in milliseconds.</param>
      <param name="onValueChanged">Callback that applies the interpolated value.</param>
      <returns>
        <para>The created animation object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(UnityEngine.Rect,UnityEngine.Rect,System.Int32,System.Action`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Rect&gt;)">
      <summary>
        <para>
 Starts a transition animation on this VisualElement.
 </para>
      </summary>
      <param name="from">Start value.</param>
      <param name="to">End value.</param>
      <param name="durationMs">Duration of the transition in milliseconds.</param>
      <param name="onValueChanged">Callback that applies the interpolated value.</param>
      <returns>
        <para>The created animation object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(UnityEngine.Color,UnityEngine.Color,System.Int32,System.Action`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Color&gt;)">
      <summary>
        <para>
 Starts a transition animation on this VisualElement.
 </para>
      </summary>
      <param name="from">Start value.</param>
      <param name="to">End value.</param>
      <param name="durationMs">Duration of the transition in milliseconds.</param>
      <param name="onValueChanged">Callback that applies the interpolated value.</param>
      <returns>
        <para>The created animation object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(UnityEngine.Vector3,UnityEngine.Vector3,System.Int32,System.Action`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Vector3&gt;)">
      <summary>
        <para>
 Starts a transition animation on this VisualElement.
 </para>
      </summary>
      <param name="from">Start value.</param>
      <param name="to">End value.</param>
      <param name="durationMs">Duration of the transition in milliseconds.</param>
      <param name="onValueChanged">Callback that applies the interpolated value.</param>
      <returns>
        <para>The created animation object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(UnityEngine.Vector2,UnityEngine.Vector2,System.Int32,System.Action`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Vector2&gt;)">
      <summary>
        <para>
 Starts a transition animation on this VisualElement.
 </para>
      </summary>
      <param name="from">Start value.</param>
      <param name="to">End value.</param>
      <param name="durationMs">Duration of the transition in milliseconds.</param>
      <param name="onValueChanged">Callback that applies the interpolated value.</param>
      <returns>
        <para>The created animation object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(UnityEngine.Quaternion,UnityEngine.Quaternion,System.Int32,System.Action`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Quaternion&gt;)">
      <summary>
        <para>
 Starts a transition animation on this VisualElement.
 </para>
      </summary>
      <param name="from">Start value.</param>
      <param name="to">End value.</param>
      <param name="durationMs">Duration of the transition in milliseconds.</param>
      <param name="onValueChanged">Callback that applies the interpolated value.</param>
      <returns>
        <para>The created animation object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(UnityEngine.UIElements.Experimental.StyleValues,UnityEngine.UIElements.Experimental.StyleValues,System.Int32)">
      <summary>
        <para>
 Starts a transition animation on this VisualElement.
 </para>
      </summary>
      <param name="from">Start value.</param>
      <param name="to">End value.</param>
      <param name="durationMs">Duration of the transition in milliseconds.</param>
      <returns>
        <para>The created animation object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(UnityEngine.UIElements.Experimental.StyleValues,System.Int32)">
      <summary>
        <para>
 Starts a transition animation on this VisualElement.
 </para>
      </summary>
      <param name="to">End value.</param>
      <param name="durationMs">Duration of the transition in milliseconds.</param>
      <returns>
        <para>The created animation object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(System.Func`2&lt;UnityEngine.UIElements.VisualElement,System.Single&gt;,System.Single,System.Int32,System.Action`2&lt;UnityEngine.UIElements.VisualElement,System.Single&gt;)">
      <summary>
        <para>
 Starts a transition animation on this VisualElement.
 </para>
      </summary>
      <param name="fromValueGetter">Callback that provides the initial value.</param>
      <param name="to">End value.</param>
      <param name="durationMs">Duration of the transition in milliseconds.</param>
      <param name="onValueChanged">Callback that applies the interpolated value.</param>
      <returns>
        <para>The created animation object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(System.Func`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Rect&gt;,UnityEngine.Rect,System.Int32,System.Action`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Rect&gt;)">
      <summary>
        <para>
 Starts a transition animation on this VisualElement.
 </para>
      </summary>
      <param name="fromValueGetter">Callback that provides the initial value.</param>
      <param name="to">End value.</param>
      <param name="durationMs">Duration of the transition in milliseconds.</param>
      <param name="onValueChanged">Callback that applies the interpolated value.</param>
      <returns>
        <para>The created animation object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(System.Func`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Color&gt;,UnityEngine.Color,System.Int32,System.Action`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Color&gt;)">
      <summary>
        <para>
 Starts a transition animation on this VisualElement.
 </para>
      </summary>
      <param name="fromValueGetter">Callback that provides the initial value.</param>
      <param name="to">End value.</param>
      <param name="durationMs">Duration of the transition in milliseconds.</param>
      <param name="onValueChanged">Callback that applies the interpolated value.</param>
      <returns>
        <para>The created animation object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(System.Func`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Vector3&gt;,UnityEngine.Vector3,System.Int32,System.Action`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Vector3&gt;)">
      <summary>
        <para>
 Starts a transition animation on this VisualElement.
 </para>
      </summary>
      <param name="fromValueGetter">Callback that provides the initial value.</param>
      <param name="to">End value.</param>
      <param name="durationMs">Duration of the transition in milliseconds.</param>
      <param name="onValueChanged">Callback that applies the interpolated value.</param>
      <returns>
        <para>The created animation object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(System.Func`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Vector2&gt;,UnityEngine.Vector2,System.Int32,System.Action`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Vector2&gt;)">
      <summary>
        <para>
 Starts a transition animation on this VisualElement.
 </para>
      </summary>
      <param name="fromValueGetter">Callback that provides the initial value.</param>
      <param name="to">End value.</param>
      <param name="durationMs">Duration of the transition in milliseconds.</param>
      <param name="onValueChanged">Callback that applies the interpolated value.</param>
      <returns>
        <para>The created animation object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(System.Func`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Quaternion&gt;,UnityEngine.Quaternion,System.Int32,System.Action`2&lt;UnityEngine.UIElements.VisualElement,UnityEngine.Quaternion&gt;)">
      <summary>
        <para>
 Starts a transition animation on this VisualElement.
 </para>
      </summary>
      <param name="fromValueGetter">Callback that provides the initial value.</param>
      <param name="to">End value.</param>
      <param name="durationMs">Duration of the transition in milliseconds.</param>
      <param name="onValueChanged">Callback that applies the interpolated value.</param>
      <returns>
        <para>The created animation object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ITransitionAnimations.TopLeft(UnityEngine.Vector2,System.Int32)">
      <summary>
        <para>
 Triggers an animation changing this element's positioning style values.
 </para>
      </summary>
      <param name="to"></param>
      <param name="durationMs"></param>
    </member>
    <member name="?:UnityEngine.UIElements.Experimental.IValueAnimation">
      <summary>
        <para>
 Base interface for transition animations.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.IValueAnimation.durationMs">
      <summary>
        <para>
 Duration of the transition in milliseconds.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.IValueAnimation.isRunning">
      <summary>
        <para>
 Tells if the animation is currently active.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.IValueAnimation.Recycle">
      <summary>
        <para>
 Returns this animation object into its object pool.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.IValueAnimation.Start">
      <summary>
        <para>
 Starts the animation using this object's values.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.IValueAnimation.Stop">
      <summary>
        <para>
 Stops this animation.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Experimental.StyleValues">
      <summary>
        <para>
 Container object used to animate multiple style values at once.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.backgroundColor">
      <summary>
        <para>
 Background color to paint in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.borderBottomLeftRadius">
      <summary>
        <para>
 The radius of the bottom-left corner when a rounded rectangle is drawn in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.borderBottomRightRadius">
      <summary>
        <para>
 The radius of the bottom-right corner when a rounded rectangle is drawn in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.borderBottomWidth">
      <summary>
        <para>
 Space reserved for the bottom edge of the border during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.borderColor">
      <summary>
        <para>
 Color of the border to paint inside the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.borderLeftWidth">
      <summary>
        <para>
 Space reserved for the left edge of the border during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.borderRightWidth">
      <summary>
        <para>
 Space reserved for the right edge of the border during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.borderTopLeftRadius">
      <summary>
        <para>
 The radius of the top-left corner when a rounded rectangle is drawn in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.borderTopRightRadius">
      <summary>
        <para>
 The radius of the top-right corner when a rounded rectangle is drawn in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.borderTopWidth">
      <summary>
        <para>
 Space reserved for the top edge of the border during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.bottom">
      <summary>
        <para>
 Bottom distance from the element's box during layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.color">
      <summary>
        <para>
 Color to use when drawing the text of an element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.flexGrow">
      <summary>
        <para>
 Specifies how much the item will grow relative to the rest of the flexible items inside the same container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.flexShrink">
      <summary>
        <para>
 Specifies how the item will shrink relative to the rest of the flexible items inside the same container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.height">
      <summary>
        <para>
 Fixed height of an element for the layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.left">
      <summary>
        <para>
 Left distance from the element's box during layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.marginBottom">
      <summary>
        <para>
 Space reserved for the bottom edge of the margin during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.marginLeft">
      <summary>
        <para>
 Space reserved for the left edge of the margin during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.marginRight">
      <summary>
        <para>
 Space reserved for the right edge of the margin during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.marginTop">
      <summary>
        <para>
 Space reserved for the top edge of the margin during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.opacity">
      <summary>
        <para>
 Specifies the transparency of an element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.paddingBottom">
      <summary>
        <para>
 Space reserved for the bottom edge of the padding during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.paddingLeft">
      <summary>
        <para>
 Space reserved for the left edge of the padding during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.paddingRight">
      <summary>
        <para>
 Space reserved for the right edge of the padding during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.paddingTop">
      <summary>
        <para>
 Space reserved for the top edge of the padding during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.right">
      <summary>
        <para>
 Right distance from the element's box during layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.top">
      <summary>
        <para>
 Top distance from the element's box during layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.unityBackgroundImageTintColor">
      <summary>
        <para>
 Tinting color for the element's backgroundImage.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.StyleValues.width">
      <summary>
        <para>
 Fixed width of an element for the layout.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Experimental.ValueAnimation`1">
      <summary>
        <para>
 Implementation object for transition animations.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.ValueAnimation_1.autoRecycle">
      <summary>
        <para>
 Returns true if this animation object will be automatically returned to the instance pool after the animation has completed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.ValueAnimation_1.durationMs">
      <summary>
        <para>
 Duration of the animation in milliseconds.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.ValueAnimation_1.easingCurve">
      <summary>
        <para>
 Smoothing function related to this animation. Default value is Easing.OutQuad.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.ValueAnimation_1.from">
      <summary>
        <para>
 The animation start value.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.ValueAnimation_1.initialValue">
      <summary>
        <para>
 Callback invoked when the from field has not been set, in order to retrieve the starting state of this animation.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.ValueAnimation_1.interpolator">
      <summary>
        <para>
 Value interpolation method.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.ValueAnimation_1.isRunning">
      <summary>
        <para>
 Tells if the animation is currently active.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.ValueAnimation_1.onAnimationCompleted">
      <summary>
        <para>
 Callback invoked when this animation has completed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.ValueAnimation_1.to">
      <summary>
        <para>
 The animation end value.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Experimental.ValueAnimation_1.valueUpdated">
      <summary>
        <para>
 Callback invoked after every value interpolation.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ValueAnimation_1.Create(UnityEngine.UIElements.VisualElement,System.Func`4&lt;T,T,System.Single,T&gt;)">
      <summary>
        <para>
 Creates a new ValueAnimation object or returns an available one from it's instance pool.
 </para>
      </summary>
      <param name="e"></param>
      <param name="interpolator"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ValueAnimation_1.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ValueAnimation_1.Ease(System.Func`2&lt;System.Single,System.Single&gt;)">
      <summary>
        <para>
 Sets the easing function.
 </para>
      </summary>
      <param name="easing"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ValueAnimation_1.KeepAlive">
      <summary>
        <para>
 Will not return the object to the instance pool when the animation has completed.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ValueAnimation_1.OnCompleted(System.Action)">
      <summary>
        <para>
 Sets a callback invoked when this animation has completed.
 </para>
      </summary>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ValueAnimation_1.Recycle">
      <summary>
        <para>
 Returns this animation object into its object pool.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ValueAnimation_1.Start">
      <summary>
        <para>
 Starts the animation using this object's values.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Experimental.ValueAnimation_1.Stop">
      <summary>
        <para>
 Stops this animation.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.FlexDirection">
      <summary>
        <para>
 Defines the main-axis of the flex layout.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.FlexDirection.Column">
      <summary>
        <para>
 Top to Bottom.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.FlexDirection.ColumnReverse">
      <summary>
        <para>
 Bottom to Top.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.FlexDirection.Row">
      <summary>
        <para>
 Left to Right.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.FlexDirection.RowReverse">
      <summary>
        <para>
 Right to Left.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Focusable">
      <summary>
        <para>
 Base class for objects that can get the focus.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Focusable.canGrabFocus">
      <summary>
        <para>
 Return true if the element can be focused.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Focusable.delegatesFocus">
      <summary>
        <para>
 Whether the element should delegate the focus to its children.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Focusable.focusable">
      <summary>
        <para>
 True if the element can be focused.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Focusable.focusController">
      <summary>
        <para>
 Return the focus controller for this element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Focusable.tabIndex">
      <summary>
        <para>
 An integer used to sort focusables in the focus ring. Must be greater than or equal to zero.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Focusable.Blur">
      <summary>
        <para>
 Tell the element to release the focus.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Focusable.Focus">
      <summary>
        <para>
 Attempt to give the focus to this element.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.FocusChangeDirection">
      <summary>
        <para>
 Base class for defining in which direction the focus moves in a focus ring.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.FocusChangeDirection.lastValue">
      <summary>
        <para>
 Last value for the direction defined by this class.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.FocusChangeDirection.none">
      <summary>
        <para>
 The null direction. This is usually used when the focus stays on the same element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.FocusChangeDirection.unspecified">
      <summary>
        <para>
 Focus came from an unspecified direction, for example after a mouse down.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.FocusController">
      <summary>
        <para>
 Class in charge of managing the focus inside a Panel.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.FocusController.focusedElement">
      <summary>
        <para>
 The currently focused VisualElement.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.FocusController.#ctor(UnityEngine.UIElements.IFocusRing)">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="focusRing"></param>
    </member>
    <member name="T:UnityEngine.UIElements.FocusEvent">
      <summary>
        <para>
 Event sent immediately after an element has gained focus. This event trickles down, it does not bubble up, and it cannot be cancelled.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.FocusEventBase`1">
      <summary>
        <para>
 Base class for focus related events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.FocusEventBase_1.direction">
      <summary>
        <para>
 Direction of the focus change.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.FocusEventBase_1.focusController">
      <summary>
        <para>
 The focus controller that emitted the event.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.FocusEventBase_1.relatedTarget">
      <summary>
        <para>
 For FocusOut and Blur events, contains the element that gains the focus. For FocusIn and Focus events, contains the element that loses the focus.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.FocusEventBase_1.GetPooled(UnityEngine.UIElements.IEventHandler,UnityEngine.UIElements.Focusable,UnityEngine.UIElements.FocusChangeDirection,UnityEngine.UIElements.FocusController,System.Boolean)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="target">The event target.</param>
      <param name="relatedTarget">The related target.</param>
      <param name="direction">The direction of the focus change.</param>
      <param name="focusController">The object that manages the focus.</param>
      <param name="bIsFocusDelegated"></param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.FocusEventBase_1.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.FocusInEvent">
      <summary>
        <para>
 Event sent immediately before an element gains focus. This event trickles down and bubbles up. This event cannot be cancelled.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.FocusInEvent.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.FocusInEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.FocusOutEvent">
      <summary>
        <para>
 Event sent immediately before an element loses focus. This event trickles down and bubbles up. This event cannot be cancelled.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.FocusOutEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.FocusOutEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Foldout">
      <summary>
        <para>
 A Foldout control is a collapsible section of a user interface. When toggled, it expands or collapses, which hides or reveals the elements it contains.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Foldout.checkmarkUssClassName">
      <summary>
        <para>
 The USS class name for the Label element in a Foldout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Foldout.contentContainer">
      <summary>
        <para>
 This element contains the elements that are shown or hidden when you toggle the Foldout.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Foldout.contentUssClassName">
      <summary>
        <para>
 The USS class name for the content element in a Foldout.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Foldout.inputUssClassName">
      <summary>
        <para>
 The USS class name for the Label element in a Foldout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Foldout.text">
      <summary>
        <para>
 This is the text of the toggle's label.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Foldout.textUssClassName">
      <summary>
        <para>
 The USS class name for the Label element in a Foldout.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Foldout.toggleUssClassName">
      <summary>
        <para>
 The USS class name of Toggle sub-elements in Foldout elements.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Foldout.ussClassName">
      <summary>
        <para>
 The USS class name for Foldout elements.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Foldout.value">
      <summary>
        <para>
 This is the state of the Foldout's toggle. It is true if the Foldout is open and its contents are
 visible, and false if the Foldout is closed, and its contents are hidden.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Foldout.#ctor">
      <summary>
        <para>
 Constructs a Foldout element.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Foldout.SetValueWithoutNotify(System.Boolean)">
      <summary>
        <para>
 Sets the value of the Foldout's Toggle sub-element, but does not notify the rest of the hierarchy of the change.
 </para>
      </summary>
      <param name="newValue">The new value of the foldout</param>
    </member>
    <member name="T:UnityEngine.UIElements.Foldout.UxmlFactory">
      <summary>
        <para>
 Instantiates a Foldout using the data from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Foldout.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the Foldout.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Foldout.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initializes Foldout properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The object to initialize.</param>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.FontDefinition">
      <summary>
        <para>
 Describes a VisualElement font.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.FontDefinition.font">
      <summary>
        <para>
 Font to use to display text. You cannot set this and FontDefinition.fontAsset at the same time.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.FontDefinition.fontAsset">
      <summary>
        <para>
 SDF font to use to display text. You cannot set this and FontDefinition.font at the same time.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.FontDefinition.FromFont(UnityEngine.Font)">
      <summary>
        <para>
 Create a FontDefinition from Font.
 </para>
      </summary>
      <param name="f">The font to use to display text.</param>
      <returns>
        <para>A new FontDefinition object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.FontDefinition.FromSDFFont(UnityEngine.TextCore.Text.FontAsset)">
      <summary>
        <para>
 Create a FontDefinition from FontAsset.
 </para>
      </summary>
      <param name="f">The SDF font to use to display text.</param>
      <returns>
        <para>A new FontDefinition object.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.GenericDropdownMenu">
      <summary>
        <para>
 GenericDropdownMenu allows you to display contextual menus with default textual options or any VisualElement.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.GenericDropdownMenu.checkmarkUssClassName">
      <summary>
        <para>
 USS class name of separators in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.GenericDropdownMenu.containerInnerUssClassName">
      <summary>
        <para>
 USS class name of inner containers in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.GenericDropdownMenu.containerOuterUssClassName">
      <summary>
        <para>
 USS class name of outer containers in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.GenericDropdownMenu.contentContainer">
      <summary>
        <para>
 Returns the content container for the GenericDropdownMenu. Allows users to create their own
 dropdown menu if they don't want to use the default implementation.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.GenericDropdownMenu.itemUssClassName">
      <summary>
        <para>
 USS class name of labels in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.GenericDropdownMenu.labelUssClassName">
      <summary>
        <para>
 USS class name of labels in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.GenericDropdownMenu.separatorUssClassName">
      <summary>
        <para>
 USS class name of separators in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.GenericDropdownMenu.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.GenericDropdownMenu.AddDisabledItem(System.String,System.Boolean)">
      <summary>
        <para>
 Adds a disabled item to this menu using a default VisualElement.
 </para>
      </summary>
      <param name="itemName">The text to display to the user.</param>
      <param name="isChecked">Indicates whether a checkmark next to the item is displayed.</param>
    </member>
    <member name="M:UnityEngine.UIElements.GenericDropdownMenu.AddItem(System.String,System.Boolean,System.Action)">
      <summary>
        <para>
 Adds an item to this menu using a default VisualElement.
 </para>
      </summary>
      <param name="itemName">The text to display to the user.</param>
      <param name="isChecked">Indicates whether a checkmark next to the item is displayed.</param>
      <param name="action">The callback to invoke when the item is selected by the user.</param>
    </member>
    <member name="M:UnityEngine.UIElements.GenericDropdownMenu.AddItem(System.String,System.Boolean,System.Action`1&lt;System.Object&gt;,System.Object)">
      <summary>
        <para>
 Adds an item to this menu using a default VisualElement.
 </para>
      </summary>
      <param name="itemName">The text to display to the user.</param>
      <param name="isChecked">Indicates whether a checkmark next to the item is displayed.</param>
      <param name="action">The callback to invoke when the item is selected by the user.</param>
      <param name="data">The object to pass to the callback as a parameter.</param>
    </member>
    <member name="M:UnityEngine.UIElements.GenericDropdownMenu.AddSeparator(System.String)">
      <summary>
        <para>
 Adds a visual separator after the previously added items in this menu.
 </para>
      </summary>
      <param name="path">Not used.</param>
    </member>
    <member name="M:UnityEngine.UIElements.GenericDropdownMenu.#ctor">
      <summary>
        <para>
  Initializes and returns an instance of GenericDropdownMenu.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.GenericDropdownMenu.DropDown(UnityEngine.Rect,UnityEngine.UIElements.VisualElement,System.Boolean)">
      <summary>
        <para>
 Displays the menu at the specified position.
 </para>
      </summary>
      <param name="position">The position in the coordinate space of the panel.</param>
      <param name="targetElement">The element used to determine in which root to parent the menu.</param>
      <param name="anchored">Whether the menu should use the width of the position argument instead of its normal width.</param>
    </member>
    <member name="T:UnityEngine.UIElements.GeometryChangedEvent">
      <summary>
        <para>
 This event is sent after layout calculations, when the position or the dimension of an element changes.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.GeometryChangedEvent.newRect">
      <summary>
        <para>
 Gets the elements's new dimensions.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.GeometryChangedEvent.oldRect">
      <summary>
        <para>
 Gets the element's old dimensions.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.GeometryChangedEvent.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.GeometryChangedEvent.GetPooled(UnityEngine.Rect,UnityEngine.Rect)">
      <summary>
        <para>
 Gets an event from the event pool, and initializes it with the specified values. Use this method
 instead of instancing new events. Use Dispose() to release events back to the event pool.
 </para>
      </summary>
      <param name="oldRect">The old dimensions of the element.</param>
      <param name="newRect">The new dimensions of the element.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.GeometryChangedEvent.Init">
      <summary>
        <para>
 Resets the event values to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.GroupBox">
      <summary>
        <para>
 This is an enclosing container for a group of IGroupBoxOption. All group options within this
 container will interact together to allow a single selection, using the DefaultGroupManager.
 Default options are RadioButton, but users can provide other implementations.
 If no IGroupBox is found in the hierarchy, the default container will be the panel.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.GroupBox.labelUssClassName">
      <summary>
        <para>
 USS class name for Labels in GroupBox elements.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.GroupBox.text">
      <summary>
        <para>
 The title text of the box.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.GroupBox.ussClassName">
      <summary>
        <para>
 USS class name for GroupBox elements.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.GroupBox.#ctor">
      <summary>
        <para>
 Creates a GroupBox with no label.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.GroupBox.#ctor(System.String)">
      <summary>
        <para>
 Creates a GroupBox with a title.
 </para>
      </summary>
      <param name="text">The title text.</param>
    </member>
    <member name="T:UnityEngine.UIElements.GroupBox.UxmlFactory">
      <summary>
        <para>
 Instantiates a GroupBox using data from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.GroupBox.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the GroupBox.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.GroupBox.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initializes GroupBox properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The object to initialize.</param>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.HelpBox">
      <summary>
        <para>
 Makes a help box with a message to the user.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.HelpBox.iconErrorUssClassName">
      <summary>
        <para>
 The USS class name for the HelpBoxMessageType.Error state in Elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.HelpBox.iconInfoUssClassName">
      <summary>
        <para>
 The USS class name for the HelpBoxMessageType.Info state in Elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.HelpBox.iconUssClassName">
      <summary>
        <para>
 The USS class name for images in Elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.HelpBox.iconwarningUssClassName">
      <summary>
        <para>
 The USS class name for the HelpBoxMessageType.Warning state in Elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.HelpBox.labelUssClassName">
      <summary>
        <para>
 The USS class name for labels in Elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.HelpBox.messageType">
      <summary>
        <para>
 The type of message.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.HelpBox.text">
      <summary>
        <para>
 The message text.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.HelpBox.ussClassName">
      <summary>
        <para>
 The USS class name for Elements of this type.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.HelpBox.#ctor">
      <summary>
        <para>
 Creates a new HelpBox.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.HelpBox.#ctor(System.String,UnityEngine.UIElements.HelpBoxMessageType)">
      <summary>
        <para>
 Creates a new HelpBox.
 </para>
      </summary>
      <param name="text">The message text.</param>
      <param name="messageType">The type of message.</param>
    </member>
    <member name="T:UnityEngine.UIElements.HelpBox.UxmlFactory">
      <summary>
        <para>
 Instantiates a HelpBox with data from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.HelpBox.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the HelpBox.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.HelpBox.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initializes HelpBox properties with values from an attribute bag.
 </para>
      </summary>
      <param name="ve">The Element to initialize.</param>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.HelpBoxMessageType">
      <summary>
        <para>
 User message types.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.HelpBoxMessageType.Error">
      <summary>
        <para>
 Error message.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.HelpBoxMessageType.Info">
      <summary>
        <para>
 Info message.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.HelpBoxMessageType.None">
      <summary>
        <para>
 Neutral message.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.HelpBoxMessageType.Warning">
      <summary>
        <para>
 Warning message.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IBindable">
      <summary>
        <para>
 Interface for all bindable fields.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IBindable.binding">
      <summary>
        <para>
 Binding object that will be updated.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IBindable.bindingPath">
      <summary>
        <para>
 Path of the target property to be bound.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IBinding">
      <summary>
        <para>
 Base interface for Binding objects.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IBinding.PreUpdate">
      <summary>
        <para>
 Called at regular intervals to synchronize bound properties to their IBindable counterparts. Called before the Update() method.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IBinding.Release">
      <summary>
        <para>
 Disconnects the field from its bound property
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IBinding.Update">
      <summary>
        <para>
 Called at regular intervals to synchronize bound properties to their IBindable counterparts. Called before the Update() method.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.IBindingExtensions">
      <summary>
        <para>
 Extensions methods to provide additional IBindable functionality.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IBindingExtensions.IsBound(UnityEngine.UIElements.IBindable)">
      <summary>
        <para>
 Checks if a IBindable is bound to a property.
 </para>
      </summary>
      <param name="control">This Bindable object.</param>
      <returns>
        <para>True if this IBindable is bound to a property.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.UIElements.IChangeEvent">
      <summary>
        <para>
 Base interface for ChangeEvent.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.ICommandEvent">
      <summary>
        <para>
 Interface for Command events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ICommandEvent.commandName">
      <summary>
        <para>
 Name of the command.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.ICustomStyle">
      <summary>
        <para>
 This interface exposes methods to read custom style properties applied from USS files to visual elements.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ICustomStyle.TryGetValue(UnityEngine.UIElements.CustomStyleProperty`1&lt;System.Single&gt;,System.Single&amp;)">
      <summary>
        <para>
 Gets the value associated with the specified CustomStyleProperty_1.
 </para>
      </summary>
      <param name="property"></param>
      <param name="value"></param>
      <returns>
        <para>True if the property is found, false if not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.ICustomStyle.TryGetValue(UnityEngine.UIElements.CustomStyleProperty`1&lt;System.Int32&gt;,System.Int32&amp;)">
      <summary>
        <para>
 Gets the value associated with the specified CustomStyleProperty_1.
 </para>
      </summary>
      <param name="property"></param>
      <param name="value"></param>
      <returns>
        <para>True if the property is found, false if not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.ICustomStyle.TryGetValue(UnityEngine.UIElements.CustomStyleProperty`1&lt;System.Boolean&gt;,System.Boolean&amp;)">
      <summary>
        <para>
 Gets the value associated with the specified CustomStyleProperty_1.
 </para>
      </summary>
      <param name="property"></param>
      <param name="value"></param>
      <returns>
        <para>True if the property is found, false if not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.ICustomStyle.TryGetValue(UnityEngine.UIElements.CustomStyleProperty`1&lt;UnityEngine.Color&gt;,UnityEngine.Color&amp;)">
      <summary>
        <para>
 Gets the value associated with the specified CustomStyleProperty_1.
 </para>
      </summary>
      <param name="property"></param>
      <param name="value"></param>
      <returns>
        <para>True if the property is found, false if not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.ICustomStyle.TryGetValue(UnityEngine.UIElements.CustomStyleProperty`1&lt;UnityEngine.Texture2D&gt;,UnityEngine.Texture2D&amp;)">
      <summary>
        <para>
 Gets the value associated with the specified CustomStyleProperty_1.
 </para>
      </summary>
      <param name="property"></param>
      <param name="value"></param>
      <returns>
        <para>True if the property is found, false if not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.ICustomStyle.TryGetValue(UnityEngine.UIElements.CustomStyleProperty`1&lt;UnityEngine.Sprite&gt;,UnityEngine.Sprite&amp;)">
      <summary>
        <para>
 Gets the value associated with the specified CustomStyleProperty_1.
 </para>
      </summary>
      <param name="property"></param>
      <param name="value"></param>
      <returns>
        <para>True if the property is found, false if not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.ICustomStyle.TryGetValue(UnityEngine.UIElements.CustomStyleProperty`1&lt;UnityEngine.UIElements.VectorImage&gt;,UnityEngine.UIElements.VectorImage&amp;)">
      <summary>
        <para>
 Gets the value associated with the specified CustomStyleProperty_1.
 </para>
      </summary>
      <param name="property"></param>
      <param name="value"></param>
      <returns>
        <para>True if the property is found, false if not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.ICustomStyle.TryGetValue(UnityEngine.UIElements.CustomStyleProperty`1&lt;T&gt;,T&amp;)">
      <summary>
        <para>
 Gets the value associated with the specified CustomStyleProperty_1.
 </para>
      </summary>
      <param name="property"></param>
      <param name="value"></param>
      <returns>
        <para>True if the property is found, false if not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.ICustomStyle.TryGetValue(UnityEngine.UIElements.CustomStyleProperty`1&lt;System.String&gt;,System.String&amp;)">
      <summary>
        <para>
 Gets the value associated with the specified CustomStyleProperty_1.
 </para>
      </summary>
      <param name="property"></param>
      <param name="value"></param>
      <returns>
        <para>True if the property is found, false if not.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.UIElements.IDragAndDropEvent">
      <summary>
        <para>
 Interface for drag and drop events.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IEventHandler">
      <summary>
        <para>
 Interface for class capable of handling events.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IEventHandler.HandleEvent(UnityEngine.UIElements.EventBase)">
      <summary>
        <para>
 Handle an event.
 </para>
      </summary>
      <param name="evt">The event to handle.</param>
    </member>
    <member name="M:UnityEngine.UIElements.IEventHandler.HasBubbleUpHandlers">
      <summary>
        <para>
 Returns true if event handlers for the event propagation BubbleUp phase, have been attached on this object.
 </para>
      </summary>
      <returns>
        <para>True if object has event handlers for the BubbleUp phase.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.IEventHandler.HasTrickleDownHandlers">
      <summary>
        <para>
 Returns true if event handlers, for the event propagation TrickleDown phase, are attached to this object.
 </para>
      </summary>
      <returns>
        <para>True if the object already has event handlers for the TrickleDown phase.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.IEventHandler.SendEvent(UnityEngine.UIElements.EventBase)">
      <summary>
        <para>
 Sends an event to the event handler.
 </para>
      </summary>
      <param name="e">The event to send.</param>
    </member>
    <member name="?:UnityEngine.UIElements.IExperimentalFeatures">
      <summary>
        <para>
 Give access to UIElement experimental features.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IExperimentalFeatures.animation">
      <summary>
        <para>
 Returns the animation experimental interface.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IFocusEvent">
      <summary>
        <para>
 Interface for focus events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IFocusEvent.direction">
      <summary>
        <para>
 Direction of the focus change.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IFocusEvent.relatedTarget">
      <summary>
        <para>
 Related target. See implementation for specific meaning.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IFocusRing">
      <summary>
        <para>
 Interface for classes implementing focus rings.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IFocusRing.GetFocusChangeDirection(UnityEngine.UIElements.Focusable,UnityEngine.UIElements.EventBase)">
      <summary>
        <para>
 Get the direction of the focus change for the given event. For example, when the Tab key is pressed, focus should be given to the element to the right.
 </para>
      </summary>
      <param name="currentFocusable"></param>
      <param name="e"></param>
    </member>
    <member name="M:UnityEngine.UIElements.IFocusRing.GetNextFocusable(UnityEngine.UIElements.Focusable,UnityEngine.UIElements.FocusChangeDirection)">
      <summary>
        <para>
 Get the next element in the given direction.
 </para>
      </summary>
      <param name="currentFocusable"></param>
      <param name="direction"></param>
    </member>
    <member name="?:UnityEngine.UIElements.IKeyboardEvent">
      <summary>
        <para>
 This interface describes the data used by keyboard events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IKeyboardEvent.actionKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the platform-specific action key is pressed. True means the action
 key is pressed. False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IKeyboardEvent.altKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the Alt key is pressed. True means the Alt key is pressed.
 False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IKeyboardEvent.character">
      <summary>
        <para>
 Gets the character entered.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IKeyboardEvent.commandKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the WindowsCmd key is pressed. True means the WindowsCmd key
 is pressed. False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IKeyboardEvent.ctrlKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the Ctrl key is pressed. True means the Ctrl key is pressed.
 False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IKeyboardEvent.keyCode">
      <summary>
        <para>
 The key code.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IKeyboardEvent.modifiers">
      <summary>
        <para>
 Gets flags that indicate whether modifier keys (Alt, Ctrl, Shift, Windows/Cmd) are pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IKeyboardEvent.shiftKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the Shift key is pressed. True means the Shift key is pressed.
 False means it isn't.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Image">
      <summary>
        <para>
 A VisualElement representing a source texture.

 Note: This is not related to the UnityEngine.UI.Image uGUI control. This is the Image control for the UI Toolkit framework.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Image.image">
      <summary>
        <para>
 The texture to display in this image. If you assign a Texture or Texture2D, the Image element will resize and show the assigned texture.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Image.scaleMode">
      <summary>
        <para>
 ScaleMode used to display the Image.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Image.sourceRect">
      <summary>
        <para>
 The source rectangle inside the texture relative to the top left corner.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Image.sprite">
      <summary>
        <para>
 The sprite to display in this image.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Image.tintColor">
      <summary>
        <para>
 Tinting color for this Image.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Image.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Image.uv">
      <summary>
        <para>
 The base texture coordinates of the Image relative to the bottom left corner.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Image.vectorImage">
      <summary>
        <para>
 The VectorImage to display in this image.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Image.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Image.UxmlFactory">
      <summary>
        <para>
 Instantiates an Image using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Image.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the Image.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Image.UxmlTraits.uxmlChildElementsDescription">
      <summary>
        <para>
 Returns an empty enumerable, as images generally do not have children.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IManipulator">
      <summary>
        <para>
 Interface for Manipulator objects.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IManipulator.target">
      <summary>
        <para>
 VisualElement being manipulated.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.IMGUIContainer">
      <summary>
        <para>
 Element that draws IMGUI content.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMGUIContainer.contextType">
      <summary>
        <para>
 ContextType of this IMGUIContrainer. Currently only supports ContextType.Editor.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMGUIContainer.cullingEnabled">
      <summary>
        <para>
 When this property is set to true, onGUIHandler is not called when the Element is outside the viewport.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMGUIContainer.onGUIHandler">
      <summary>
        <para>
 The function that's called to render and handle IMGUI events.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.IMGUIContainer.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IMGUIContainer.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IMGUIContainer.#ctor(System.Action)">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="onGUIHandler">The function assigned to &lt;see cref="onGUIHandler" /&gt;.</param>
    </member>
    <member name="M:UnityEngine.UIElements.IMGUIContainer.Dispose">
      <summary>
        <para>
 Releases the native memory that this IMGUIContainer instance uses.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IMGUIContainer.MarkDirtyLayout">
      <summary>
        <para>
 Marks layout as dirty to trigger a redraw.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.IMGUIContainer.UxmlFactory">
      <summary>
        <para>
 Instantiates an IMGUIContainer using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.IMGUIContainer.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the IMGUIContainer.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMGUIContainer.UxmlTraits.uxmlChildElementsDescription">
      <summary>
        <para>
 Returns an empty enumerable, as IMGUIContainer cannot have VisualElement children.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IMGUIContainer.UxmlTraits.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.IMGUIEvent">
      <summary>
        <para>
 Class used to send a IMGUI event that has no equivalent UIElements event.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IMGUIEvent.#ctor">
      <summary>
        <para>
 Constructor. Use GetPooled() to get an event from a pool of reusable events.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IMGUIEvent.GetPooled(UnityEngine.Event)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="systemEvent">The IMGUI event used to initialize the event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.IMGUIEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IMixedValueSupport">
      <summary>
        <para>
 An interface that allows value fields to visually represent a mixed value.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMixedValueSupport.showMixedValue">
      <summary>
        <para>
 Indicates whether to enable the mixed value state on the value field.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ImmediateModeElement">
      <summary>
        <para>
 VisualElement that can implement custom immediate mode rendering.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ImmediateModeElement.cullingEnabled">
      <summary>
        <para>
 When this property is set to true, the Element does not repaint itself when it is outside the viewport.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ImmediateModeElement.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ImmediateModeElement.ImmediateRepaint">
      <summary>
        <para>
 Invoked during the repaint phase.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IMouseCaptureEvent">
      <summary>
        <para>
 Interface for mouse capture events.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IMouseEvent">
      <summary>
        <para>
 Interface for mouse events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMouseEvent.actionKey">
      <summary>
        <para>
 Returns true if the platform-specific action key is pressed. This key is Cmd on macOS, and Ctrl on all other platforms.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMouseEvent.altKey">
      <summary>
        <para>
 Return true if the Alt key is pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMouseEvent.button">
      <summary>
        <para>
 Integer that indicates which mouse button is pressed: 0 is the left button, 1 is the right button, 2 is the middle button.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMouseEvent.clickCount">
      <summary>
        <para>
 The number of times the button is pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMouseEvent.commandKey">
      <summary>
        <para>
 Return true if the Windows/Command key is pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMouseEvent.ctrlKey">
      <summary>
        <para>
 Return true if the Ctrl key is pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMouseEvent.localMousePosition">
      <summary>
        <para>
 The mouse position in the current target coordinate system.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMouseEvent.modifiers">
      <summary>
        <para>
 Flag set holding the pressed modifier keys (Alt, Ctrl, Shift, Windows/Command).
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMouseEvent.mouseDelta">
      <summary>
        <para>
 Mouse position difference between the last mouse event and this one.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMouseEvent.mousePosition">
      <summary>
        <para>
 The mouse position in the panel coordinate system.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMouseEvent.pressedButtons">
      <summary>
        <para>
 A bitmask that describes the currently pressed buttons.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IMouseEvent.shiftKey">
      <summary>
        <para>
 Return true if the Shift key is pressed.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.INavigationEvent">
      <summary>
        <para>
 Interface for all navigation events.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.INotifyValueChanged_1">
      <summary>
        <para>
 Interface for controls that hold a value and can notify when it is changed by user input.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.INotifyValueChanged_1.value">
      <summary>
        <para>
 The value the control holds.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.INotifyValueChanged_1.SetValueWithoutNotify(T)">
      <summary>
        <para>
 Sets the value and, even if different, doesn't notify registers callbacks with a ChangeEvent_1
 </para>
      </summary>
      <param name="newValue">The new value to be set.</param>
    </member>
    <member name="T:UnityEngine.UIElements.INotifyValueChangedExtensions">
      <summary>
        <para>
 INotifyValueChangedExtensions is a set of extension methods useful for objects implementing INotifyValueChanged_1.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.INotifyValueChangedExtensions.RegisterValueChangedCallback(UnityEngine.UIElements.INotifyValueChanged`1&lt;T&gt;,UnityEngine.UIElements.EventCallback`1&lt;UnityEngine.UIElements.ChangeEvent`1&lt;T&gt;&gt;)">
      <summary>
        <para>
 Registers this callback to receive ChangeEvent_1 when the value is changed.
 </para>
      </summary>
      <param name="control"></param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.UIElements.INotifyValueChangedExtensions.UnregisterValueChangedCallback(UnityEngine.UIElements.INotifyValueChanged`1&lt;T&gt;,UnityEngine.UIElements.EventCallback`1&lt;UnityEngine.UIElements.ChangeEvent`1&lt;T&gt;&gt;)">
      <summary>
        <para>
 Unregisters this callback from receiving ChangeEvent_1 when the value is changed.
 </para>
      </summary>
      <param name="control"></param>
      <param name="callback"></param>
    </member>
    <member name="T:UnityEngine.UIElements.InputEvent">
      <summary>
        <para>
 Sends an event when text from a TextField changes.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.InputEvent.newData">
      <summary>
        <para>
 The new text.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.InputEvent.previousData">
      <summary>
        <para>
 The text before the change occured.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.InputEvent.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.InputEvent.GetPooled(System.String,System.String)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="previousData">The text before the change occured.</param>
      <param name="newData">The new text.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.InputEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IPanel">
      <summary>
        <para>
 Interface for classes implementing UI panels.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPanel.contextType">
      <summary>
        <para>
 Describes in which context a VisualElement hierarchy is being ran.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPanel.contextualMenuManager">
      <summary>
        <para>
 The Contextual menu manager for the panel.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPanel.dispatcher">
      <summary>
        <para>
 This Panel EventDispatcher.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPanel.focusController">
      <summary>
        <para>
 Return the focus controller for this panel.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPanel.visualTree">
      <summary>
        <para>
 Root of the VisualElement hierarchy.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IPanel.Pick(UnityEngine.Vector2)">
      <summary>
        <para>
 Returns the top element at this position. Will not return elements with pickingMode set to PickingMode.Ignore.
 </para>
      </summary>
      <param name="point">World coordinates.</param>
      <returns>
        <para>Top VisualElement at the position. Null if none was found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.IPanel.PickAll(UnityEngine.Vector2,System.Collections.Generic.List`1&lt;UnityEngine.UIElements.VisualElement&gt;)">
      <summary>
        <para>
 Returns all elements at this position. Will not return elements with pickingMode set to PickingMode.Ignore.
 </para>
      </summary>
      <param name="point">World coordinates.</param>
      <param name="picked">All Visualelements overlapping this position.</param>
      <returns>
        <para>Top VisualElement at the position. Null if none was found.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.UIElements.IPanelChangedEvent">
      <summary>
        <para>
 Interface for panel change events.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IPointerCaptureEvent">
      <summary>
        <para>
 Interface for pointer capture events and mouse capture events.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IPointerEvent">
      <summary>
        <para>
 This interface describes properties available to pointer events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.actionKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the platform-specific action key is pressed. True means the action
 key is pressed. False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.altitudeAngle">
      <summary>
        <para>
 Gets the angle of the stylus relative to the surface, in radians
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.altKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the Alt key is pressed. True means the Alt key is pressed.
 False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.azimuthAngle">
      <summary>
        <para>
 Gets the angle of the stylus relative to the x-axis, in radians.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.button">
      <summary>
        <para>
 Gets a value that indicates which mouse button was pressed: 0 is the left button, 1 is the right button, 2 is the
 middle button.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.clickCount">
      <summary>
        <para>
 Gets the number of times the button was pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.commandKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the WindowsCmd key is pressed. True means the WindowsCmd key
 is pressed. False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.ctrlKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the Ctrl key is pressed. True means the Ctrl key is pressed.
 False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.deltaPosition">
      <summary>
        <para>
 Gets the difference between the pointer's position during the previous mouse event and its position during the
 current mouse event.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.deltaTime">
      <summary>
        <para>
 Gets the amount of time that has elapsed since the last recorded change in pointer values, in seconds.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.isPrimary">
      <summary>
        <para>
 Gets a boolean value that indicates whether the pointer is a primary pointer. True means the pointer is a primary
 pointer. False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.localPosition">
      <summary>
        <para>
 Gets the pointer position in the current target's coordinate system.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.modifiers">
      <summary>
        <para>
 Gets flags that indicate whether modifier keys (Alt, Ctrl, Shift, Windows/Cmd) are pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.pointerId">
      <summary>
        <para>
 Gets the identifier of the pointer that sends the event.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.pointerType">
      <summary>
        <para>
 Gets the type of pointer that created the event.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.position">
      <summary>
        <para>
 Gets the pointer position in the Screen or World coordinate system.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.pressedButtons">
      <summary>
        <para>
 Gets a bitmask that describes the buttons that are currently pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.pressure">
      <summary>
        <para>
 Gets the amount of pressure currently applied by a touch.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.radius">
      <summary>
        <para>
 Gets an estimate of the radius of a touch.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.radiusVariance">
      <summary>
        <para>
 Gets the accuracy of the touch radius.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.shiftKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the Shift key is pressed. True means the Shift key is pressed.
 False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.tangentialPressure">
      <summary>
        <para>
 Gets the pressure applied to an additional pressure-sensitive control on the stylus.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IPointerEvent.twist">
      <summary>
        <para>
 Gets the rotation of the stylus around its axis, in radians.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IResolvedStyle">
      <summary>
        <para>
 Style values after layout pass.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.alignContent">
      <summary>
        <para>
 Alignment of the whole area of children on the cross axis if they span over multiple lines in this container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.alignItems">
      <summary>
        <para>
 Alignment of children on the cross axis of this container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.alignSelf">
      <summary>
        <para>
 Similar to align-items, but only for this specific element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.backgroundColor">
      <summary>
        <para>
 Background color to paint in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.backgroundImage">
      <summary>
        <para>
 Background image to paint in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.borderBottomColor">
      <summary>
        <para>
 Color of the element's bottom border.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.borderBottomLeftRadius">
      <summary>
        <para>
 The radius of the bottom-left corner when a rounded rectangle is drawn in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.borderBottomRightRadius">
      <summary>
        <para>
 The radius of the bottom-right corner when a rounded rectangle is drawn in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.borderBottomWidth">
      <summary>
        <para>
 Space reserved for the bottom edge of the border during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.borderLeftColor">
      <summary>
        <para>
 Color of the element's left border.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.borderLeftWidth">
      <summary>
        <para>
 Space reserved for the left edge of the border during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.borderRightColor">
      <summary>
        <para>
 Color of the element's right border.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.borderRightWidth">
      <summary>
        <para>
 Space reserved for the right edge of the border during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.borderTopColor">
      <summary>
        <para>
 Color of the element's top border.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.borderTopLeftRadius">
      <summary>
        <para>
 The radius of the top-left corner when a rounded rectangle is drawn in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.borderTopRightRadius">
      <summary>
        <para>
 The radius of the top-right corner when a rounded rectangle is drawn in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.borderTopWidth">
      <summary>
        <para>
 Space reserved for the top edge of the border during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.bottom">
      <summary>
        <para>
 Bottom distance from the element's box during layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.color">
      <summary>
        <para>
 Color to use when drawing the text of an element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.display">
      <summary>
        <para>
 Defines how an element is displayed in the layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.flexBasis">
      <summary>
        <para>
 Initial main size of a flex item, on the main flex axis. The final layout might be smaller or larger, according to the flex shrinking and growing determined by the other flex properties.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.flexDirection">
      <summary>
        <para>
 Direction of the main axis to layout children in a container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.flexGrow">
      <summary>
        <para>
 Specifies how the item will grow relative to the rest of the flexible items inside the same container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.flexShrink">
      <summary>
        <para>
 Specifies how the item will shrink relative to the rest of the flexible items inside the same container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.flexWrap">
      <summary>
        <para>
 Placement of children over multiple lines if not enough space is available in this container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.fontSize">
      <summary>
        <para>
 Font size to draw the element's text.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.height">
      <summary>
        <para>
 Fixed height of an element for the layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.justifyContent">
      <summary>
        <para>
 Justification of children on the main axis of this container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.left">
      <summary>
        <para>
 Left distance from the element's box during layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.letterSpacing">
      <summary>
        <para>
 Increases or decreases the space between characters.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.marginBottom">
      <summary>
        <para>
 Space reserved for the bottom edge of the margin during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.marginLeft">
      <summary>
        <para>
 Space reserved for the left edge of the margin during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.marginRight">
      <summary>
        <para>
 Space reserved for the right edge of the margin during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.marginTop">
      <summary>
        <para>
 Space reserved for the top edge of the margin during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.maxHeight">
      <summary>
        <para>
 Maximum height for an element, when it is flexible or measures its own size.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.maxWidth">
      <summary>
        <para>
 Maximum width for an element, when it is flexible or measures its own size.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.minHeight">
      <summary>
        <para>
 Minimum height for an element, when it is flexible or measures its own size.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.minWidth">
      <summary>
        <para>
 Minimum width for an element, when it is flexible or measures its own size.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.opacity">
      <summary>
        <para>
 Specifies the transparency of an element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.paddingBottom">
      <summary>
        <para>
 Space reserved for the bottom edge of the padding during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.paddingLeft">
      <summary>
        <para>
 Space reserved for the left edge of the padding during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.paddingRight">
      <summary>
        <para>
 Space reserved for the right edge of the padding during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.paddingTop">
      <summary>
        <para>
 Space reserved for the top edge of the padding during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.position">
      <summary>
        <para>
 Element's positioning in its parent container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.right">
      <summary>
        <para>
 Right distance from the element's box during layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.rotate">
      <summary>
        <para>
 A rotation transformation.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.scale">
      <summary>
        <para>
 A scaling transformation.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.textOverflow">
      <summary>
        <para>
 The element's text overflow mode.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.top">
      <summary>
        <para>
 Top distance from the element's box during layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.transformOrigin">
      <summary>
        <para>
 The transformation origin is the point around which a transformation is applied.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.transitionDelay">
      <summary>
        <para>
 Duration to wait before starting a property's transition effect when its value changes.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.transitionDuration">
      <summary>
        <para>
 Time a transition animation should take to complete.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.transitionProperty">
      <summary>
        <para>
 Properties to which a transition effect should be applied.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.transitionTimingFunction">
      <summary>
        <para>
 Determines how intermediate values are calculated for properties modified by a transition effect.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.translate">
      <summary>
        <para>
 A translate transformation.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.unityBackgroundImageTintColor">
      <summary>
        <para>
 Tinting color for the element's backgroundImage.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.unityBackgroundScaleMode">
      <summary>
        <para>
 Background image scaling in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.unityFont">
      <summary>
        <para>
 Font to draw the element's text.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.unityFontDefinition">
      <summary>
        <para>
 Font to draw the element's text.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.unityFontStyleAndWeight">
      <summary>
        <para>
 Font style and weight (normal, bold, italic) to draw the element's text.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.unityParagraphSpacing">
      <summary>
        <para>
 Increases or decreases the space between paragraphs.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.unitySliceBottom">
      <summary>
        <para>
 Size of the 9-slice's bottom edge when painting an element's background image.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.unitySliceLeft">
      <summary>
        <para>
 Size of the 9-slice's left edge when painting an element's background image.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.unitySliceRight">
      <summary>
        <para>
 Size of the 9-slice's right edge when painting an element's background image.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.unitySliceTop">
      <summary>
        <para>
 Size of the 9-slice's top edge when painting an element's background image.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.unityTextAlign">
      <summary>
        <para>
 Horizontal and vertical text alignment in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.unityTextOutlineColor">
      <summary>
        <para>
 Outline color of the text.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.unityTextOutlineWidth">
      <summary>
        <para>
 Outline width of the text.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.unityTextOverflowPosition">
      <summary>
        <para>
 The element's text overflow position.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.visibility">
      <summary>
        <para>
 Specifies whether or not an element is visible.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.whiteSpace">
      <summary>
        <para>
 Word wrap over multiple lines if not enough space is available to draw the text of an element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.width">
      <summary>
        <para>
 Fixed width of an element for the layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IResolvedStyle.wordSpacing">
      <summary>
        <para>
 Increases or decreases the space between words.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IStyle">
      <summary>
        <para>
 This interface provides access to a VisualElement inline style data.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.alignContent">
      <summary>
        <para>
 Alignment of the whole area of children on the cross axis if they span over multiple lines in this container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.alignItems">
      <summary>
        <para>
 Alignment of children on the cross axis of this container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.alignSelf">
      <summary>
        <para>
 Similar to align-items, but only for this specific element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.backgroundColor">
      <summary>
        <para>
 Background color to paint in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.backgroundImage">
      <summary>
        <para>
 Background image to paint in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.borderBottomColor">
      <summary>
        <para>
 Color of the element's bottom border.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.borderBottomLeftRadius">
      <summary>
        <para>
 The radius of the bottom-left corner when a rounded rectangle is drawn in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.borderBottomRightRadius">
      <summary>
        <para>
 The radius of the bottom-right corner when a rounded rectangle is drawn in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.borderBottomWidth">
      <summary>
        <para>
 Space reserved for the bottom edge of the border during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.borderLeftColor">
      <summary>
        <para>
 Color of the element's left border.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.borderLeftWidth">
      <summary>
        <para>
 Space reserved for the left edge of the border during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.borderRightColor">
      <summary>
        <para>
 Color of the element's right border.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.borderRightWidth">
      <summary>
        <para>
 Space reserved for the right edge of the border during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.borderTopColor">
      <summary>
        <para>
 Color of the element's top border.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.borderTopLeftRadius">
      <summary>
        <para>
 The radius of the top-left corner when a rounded rectangle is drawn in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.borderTopRightRadius">
      <summary>
        <para>
 The radius of the top-right corner when a rounded rectangle is drawn in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.borderTopWidth">
      <summary>
        <para>
 Space reserved for the top edge of the border during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.bottom">
      <summary>
        <para>
 Bottom distance from the element's box during layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.color">
      <summary>
        <para>
 Color to use when drawing the text of an element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.cursor">
      <summary>
        <para>
 Mouse cursor to display when the mouse pointer is over an element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.display">
      <summary>
        <para>
 Defines how an element is displayed in the layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.flexBasis">
      <summary>
        <para>
 Initial main size of a flex item, on the main flex axis. The final layout might be smaller or larger, according to the flex shrinking and growing determined by the other flex properties.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.flexDirection">
      <summary>
        <para>
 Direction of the main axis to layout children in a container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.flexGrow">
      <summary>
        <para>
 Specifies how the item will grow relative to the rest of the flexible items inside the same container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.flexShrink">
      <summary>
        <para>
 Specifies how the item will shrink relative to the rest of the flexible items inside the same container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.flexWrap">
      <summary>
        <para>
 Placement of children over multiple lines if not enough space is available in this container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.fontSize">
      <summary>
        <para>
 Font size to draw the element's text.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.height">
      <summary>
        <para>
 Fixed height of an element for the layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.justifyContent">
      <summary>
        <para>
 Justification of children on the main axis of this container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.left">
      <summary>
        <para>
 Left distance from the element's box during layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.letterSpacing">
      <summary>
        <para>
 Increases or decreases the space between characters.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.marginBottom">
      <summary>
        <para>
 Space reserved for the bottom edge of the margin during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.marginLeft">
      <summary>
        <para>
 Space reserved for the left edge of the margin during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.marginRight">
      <summary>
        <para>
 Space reserved for the right edge of the margin during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.marginTop">
      <summary>
        <para>
 Space reserved for the top edge of the margin during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.maxHeight">
      <summary>
        <para>
 Maximum height for an element, when it is flexible or measures its own size.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.maxWidth">
      <summary>
        <para>
 Maximum width for an element, when it is flexible or measures its own size.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.minHeight">
      <summary>
        <para>
 Minimum height for an element, when it is flexible or measures its own size.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.minWidth">
      <summary>
        <para>
 Minimum width for an element, when it is flexible or measures its own size.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.opacity">
      <summary>
        <para>
 Specifies the transparency of an element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.overflow">
      <summary>
        <para>
 How a container behaves if its content overflows its own box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.paddingBottom">
      <summary>
        <para>
 Space reserved for the bottom edge of the padding during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.paddingLeft">
      <summary>
        <para>
 Space reserved for the left edge of the padding during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.paddingRight">
      <summary>
        <para>
 Space reserved for the right edge of the padding during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.paddingTop">
      <summary>
        <para>
 Space reserved for the top edge of the padding during the layout phase.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.position">
      <summary>
        <para>
 Element's positioning in its parent container.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.right">
      <summary>
        <para>
 Right distance from the element's box during layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.rotate">
      <summary>
        <para>
 A rotation transformation.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.scale">
      <summary>
        <para>
 A scaling transformation.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.textOverflow">
      <summary>
        <para>
 The element's text overflow mode.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.textShadow">
      <summary>
        <para>
 Drop shadow of the text.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.top">
      <summary>
        <para>
 Top distance from the element's box during layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.transformOrigin">
      <summary>
        <para>
 The transformation origin is the point around which a transformation is applied.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.transitionDelay">
      <summary>
        <para>
 Duration to wait before starting a property's transition effect when its value changes.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.transitionDuration">
      <summary>
        <para>
 Time a transition animation should take to complete.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.transitionProperty">
      <summary>
        <para>
 Properties to which a transition effect should be applied.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.transitionTimingFunction">
      <summary>
        <para>
 Determines how intermediate values are calculated for properties modified by a transition effect.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.translate">
      <summary>
        <para>
 A translate transformation.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unityBackgroundImageTintColor">
      <summary>
        <para>
 Tinting color for the element's backgroundImage.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unityBackgroundScaleMode">
      <summary>
        <para>
 Background image scaling in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unityFont">
      <summary>
        <para>
 Font to draw the element's text.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unityFontDefinition">
      <summary>
        <para>
 Font to draw the element's text.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unityFontStyleAndWeight">
      <summary>
        <para>
 Font style and weight (normal, bold, italic) to draw the element's text.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unityOverflowClipBox">
      <summary>
        <para>
 Specifies which box the element content is clipped against.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unityParagraphSpacing">
      <summary>
        <para>
 Increases or decreases the space between paragraphs.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unitySliceBottom">
      <summary>
        <para>
 Size of the 9-slice's bottom edge when painting an element's background image.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unitySliceLeft">
      <summary>
        <para>
 Size of the 9-slice's left edge when painting an element's background image.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unitySliceRight">
      <summary>
        <para>
 Size of the 9-slice's right edge when painting an element's background image.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unitySliceTop">
      <summary>
        <para>
 Size of the 9-slice's top edge when painting an element's background image.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unityTextAlign">
      <summary>
        <para>
 Horizontal and vertical text alignment in the element's box.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unityTextOutlineColor">
      <summary>
        <para>
 Outline color of the text.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unityTextOutlineWidth">
      <summary>
        <para>
 Outline width of the text.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.unityTextOverflowPosition">
      <summary>
        <para>
 The element's text overflow position.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.visibility">
      <summary>
        <para>
 Specifies whether or not an element is visible.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.whiteSpace">
      <summary>
        <para>
 Word wrap over multiple lines if not enough space is available to draw the text of an element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.width">
      <summary>
        <para>
 Fixed width of an element for the layout.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IStyle.wordSpacing">
      <summary>
        <para>
 Increases or decreases the space between words.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.ITransform">
      <summary>
        <para>
 This interface provides access to a VisualElement transform data.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ITransform.matrix">
      <summary>
        <para>
 Transformation matrix calculated from the position, rotation and scale of the transform (Read Only).
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ITransform.position">
      <summary>
        <para>
 The position of the VisualElement transform.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ITransform.rotation">
      <summary>
        <para>
 The rotation of the VisualElement transform stored as a Quaternion.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ITransform.scale">
      <summary>
        <para>
 The scale of the VisualElement transform.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.ITransitionEvent">
      <summary>
        <para>
 Interface for all transition events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ITransitionEvent.elapsedTime">
      <summary>
        <para>
 The number of seconds the transition has been running, excluding delay phase time.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ITransitionEvent.stylePropertyNames">
      <summary>
        <para>
 The names of the properties associated with the transition.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.IUxmlAttributes">
      <summary>
        <para>
 This type allows UXML attribute value retrieval during the VisualElement instantiation. An instance will be provided to the factory method - see UXMLFactoryAttribute.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IUxmlAttributes.TryGetAttributeValue(System.String,System.String&amp;)">
      <summary>
        <para>
 Get the value of an attribute as a string.
 </para>
      </summary>
      <param name="attributeName">Attribute name.</param>
      <param name="value">The attribute value or null if not found.</param>
      <returns>
        <para>True if the attribute was found, false otherwise.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.UIElements.IUxmlFactory">
      <summary>
        <para>
 Interface for UXML factories. While it is not strictly required, concrete factories should derive from the generic class UxmlFactory.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IUxmlFactory.canHaveAnyAttribute">
      <summary>
        <para>
 Must return true if the UXML element attributes are not restricted to the values enumerated by uxmlAttributesDescription.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IUxmlFactory.substituteForTypeName">
      <summary>
        <para>
 The type of element for which this element type can substitute for.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IUxmlFactory.substituteForTypeNamespace">
      <summary>
        <para>
 The UXML namespace for the type returned by substituteForTypeName.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IUxmlFactory.substituteForTypeQualifiedName">
      <summary>
        <para>
 The fully qualified XML name for the type returned by substituteForTypeName.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IUxmlFactory.uxmlAttributesDescription">
      <summary>
        <para>
 Describes the UXML attributes expected by the element. The attributes enumerated here will appear in the UXML schema.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IUxmlFactory.uxmlChildElementsDescription">
      <summary>
        <para>
 Describes the types of element that can appear as children of this element in a UXML file.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IUxmlFactory.uxmlName">
      <summary>
        <para>
 The name of the UXML element read by the factory.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IUxmlFactory.uxmlNamespace">
      <summary>
        <para>
 The namespace of the UXML element read by the factory.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IUxmlFactory.uxmlQualifiedName">
      <summary>
        <para>
 The fully qualified name of the UXML element read by the factory.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IUxmlFactory.AcceptsAttributeBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Returns true if the factory accepts the content of the attribute bag.
 </para>
      </summary>
      <param name="bag">The attribute bag.</param>
      <param name="cc"></param>
      <returns>
        <para>True if the factory accepts the content of the attribute bag. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.IUxmlFactory.Create(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Instantiate and initialize an object of type T0.
 </para>
      </summary>
      <param name="bag">A bag of name-value pairs, one for each attribute of the UXML element. This can be used to initialize the properties of the created object.</param>
      <param name="cc">When the element is created as part of a template instance inserted in another document, this contains information about the insertion point.</param>
      <returns>
        <para>The created object.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.UIElements.IVisualElementScheduledItem">
      <summary>
        <para>
 Represents a scheduled task created with a VisualElement's schedule interface.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IVisualElementScheduledItem.element">
      <summary>
        <para>
 Returns the VisualElement this object is associated with.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.IVisualElementScheduledItem.isActive">
      <summary>
        <para>
 Will be true when this item is scheduled. Note that an item's callback will only be executed when it's VisualElement is attached to a panel.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IVisualElementScheduledItem.Every(System.Int64)">
      <summary>
        <para>
 Repeats this action after a specified time.
 </para>
      </summary>
      <param name="intervalMs">Minimum amount of time in milliseconds between each action execution.</param>
      <returns>
        <para>This ScheduledItem.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.IVisualElementScheduledItem.ExecuteLater(System.Int64)">
      <summary>
        <para>
 Cancels any previously scheduled execution of this item and re-schedules the item.
 </para>
      </summary>
      <param name="delayMs">Minimum time in milliseconds before this item will be executed.</param>
    </member>
    <member name="M:UnityEngine.UIElements.IVisualElementScheduledItem.ForDuration(System.Int64)">
      <summary>
        <para>
 After specified duration, the item will be automatically unscheduled.
 </para>
      </summary>
      <param name="durationMs">The total duration in milliseconds where this item will be active.</param>
      <returns>
        <para>This ScheduledItem.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.IVisualElementScheduledItem.Pause">
      <summary>
        <para>
 Removes this item from its VisualElement's scheduler.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IVisualElementScheduledItem.Resume">
      <summary>
        <para>
 If not already active, will schedule this item on its VisualElement's scheduler.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IVisualElementScheduledItem.StartingIn(System.Int64)">
      <summary>
        <para>
 Adds a delay to the first invokation.
 </para>
      </summary>
      <param name="delayMs">The minimum number of milliseconds after activation where this item's action will be executed.</param>
      <returns>
        <para>This ScheduledItem.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.IVisualElementScheduledItem.Until(System.Func`1&lt;System.Boolean&gt;)">
      <summary>
        <para>
 Item will be unscheduled automatically when specified condition is met.
 </para>
      </summary>
      <param name="stopCondition">When condition returns true, the item will be unscheduled.</param>
      <returns>
        <para>This ScheduledItem.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.UIElements.IVisualElementScheduler">
      <summary>
        <para>
 A scheduler allows you to register actions to be executed at a later point.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.IVisualElementScheduler.Execute(System.Action`1&lt;UnityEngine.UIElements.TimerState&gt;)">
      <summary>
        <para>
 Schedule this action to be executed later.
 </para>
      </summary>
      <param name="timerUpdateEvent">The action to be executed.</param>
      <returns>
        <para>Reference to the scheduled action.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.IVisualElementScheduler.Execute(System.Action)">
      <summary>
        <para>
 Schedule this action to be executed later.
 </para>
      </summary>
      <param name="updateEvent">The action to be executed.</param>
      <returns>
        <para>Reference to the scheduled action.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.Justify">
      <summary>
        <para>
 Defines the alignment along the main axis, how is extra space distributed.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Justify.Center">
      <summary>
        <para>
 Items are centered along the line.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Justify.FlexEnd">
      <summary>
        <para>
 Items are packed toward the end line.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Justify.FlexStart">
      <summary>
        <para>
 Items are packed toward the start line. Default Value.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Justify.SpaceAround">
      <summary>
        <para>
 Items are evenly distributed in the line with equal space around them.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Justify.SpaceBetween">
      <summary>
        <para>
 Items are evenly distributed in the line; first item is on the start line, last item on the end line.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.KeyboardEventBase`1">
      <summary>
        <para>
 This is the base class for keyboard events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.KeyboardEventBase_1.actionKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the platform-specific action key is pressed. True means the action
 key is pressed. False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.KeyboardEventBase_1.altKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the Alt key is pressed. True means the Alt key is pressed.
 False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.KeyboardEventBase_1.character">
      <summary>
        <para>
 Gets the character entered.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.KeyboardEventBase_1.commandKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the WindowsCmd key is pressed. True means the WindowsCmd key
 is pressed. False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.KeyboardEventBase_1.ctrlKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the Ctrl key is pressed. True means the Ctrl key is pressed.
 False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.KeyboardEventBase_1.keyCode">
      <summary>
        <para>
 The key code.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.KeyboardEventBase_1.modifiers">
      <summary>
        <para>
 Gets flags that indicate whether modifier keys (Alt, Ctrl, Shift, Windows/Cmd) are pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.KeyboardEventBase_1.shiftKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the Shift key is pressed. True means the Shift key is pressed.
 False means it isn't.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.KeyboardEventBase_1.GetPooled(System.Char,UnityEngine.KeyCode,UnityEngine.EventModifiers)">
      <summary>
        <para>
 Gets a keyboard event from the event pool and initializes it with the given values. Use this function
 instead of creating new events. Events obtained using this method need to be released back to the pool.
 You can use Dispose() to release them.
 </para>
      </summary>
      <param name="c">The character for this event.</param>
      <param name="keyCode">The key code for this event.</param>
      <param name="modifiers">Event modifier keys that are active for this event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.KeyboardEventBase_1.GetPooled(UnityEngine.Event)">
      <summary>
        <para>
 Gets a keyboard event from the event pool and initializes it with the given values. Use this
 function instead of creating new events. Events obtained using this method need to be released
 back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="systemEvent">A keyboard IMGUI event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.KeyboardEventBase_1.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.KeyboardNavigationManipulator">
      <summary>
        <para>
 Provides a default implementation for translating input device specific events to higher level navigation operations as commonly possible with a keyboard.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.KeyboardNavigationManipulator.#ctor(System.Action`2&lt;UnityEngine.UIElements.KeyboardNavigationOperation,UnityEngine.UIElements.EventBase&gt;)">
      <summary>
        <para>
 Initializes and returns an instance of KeyboardNavigationManipulator, configured to invoke the specified callback.
 </para>
      </summary>
      <param name="action">This action is invoked when specific low level events are dispatched to the target &lt;see cref="VisualElement" &gt;,
 with a specific value of &lt;see cref="KeyboardNavigationOperation" &gt; and a reference to the original low level event.</param>
    </member>
    <member name="T:UnityEngine.UIElements.KeyboardNavigationOperation">
      <summary>
        <para>
 Represents an operation that the user is trying to accomplish through a specific input mechanism.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.KeyboardNavigationOperation.Begin">
      <summary>
        <para>
 Selects the first element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.KeyboardNavigationOperation.Cancel">
      <summary>
        <para>
 Cancels the current UI interaction.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.KeyboardNavigationOperation.End">
      <summary>
        <para>
 Selects the last element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.KeyboardNavigationOperation.Next">
      <summary>
        <para>
 Selects the next item.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.KeyboardNavigationOperation.None">
      <summary>
        <para>
 Default value. Indicates an uninitialized enum value.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.KeyboardNavigationOperation.PageDown">
      <summary>
        <para>
 Moves the selection down one page (in a list which has scrollable area).
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.KeyboardNavigationOperation.PageUp">
      <summary>
        <para>
 Moves the selection up one page (in a list which has scrollable area).
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.KeyboardNavigationOperation.Previous">
      <summary>
        <para>
 Selects the previous item.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.KeyboardNavigationOperation.SelectAll">
      <summary>
        <para>
 Selects all UI selectable elements or text.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.KeyboardNavigationOperation.Submit">
      <summary>
        <para>
 Submits or concludes the current UI interaction.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.KeyDownEvent">
      <summary>
        <para>
 This event is sent when a key is pressed.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.KeyUpEvent">
      <summary>
        <para>
 This event is sent when a pressed key is released.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Label">
      <summary>
        <para>
 Provides an Element displaying text.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Label.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Label.#ctor">
      <summary>
        <para>
 Constructs a label.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Label.#ctor(System.String)">
      <summary>
        <para>
 Constructs a label.
 </para>
      </summary>
      <param name="text">The text to be displayed.</param>
    </member>
    <member name="T:UnityEngine.UIElements.Label.UxmlFactory">
      <summary>
        <para>
 Instantiates a Label using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Label.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the Label.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Length">
      <summary>
        <para>
 Represents a distance value.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Length.unit">
      <summary>
        <para>
 The unit of the value property.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Length.value">
      <summary>
        <para>
 The length value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Length.#ctor(System.Single)">
      <summary>
        <para>
 Creates from a float and an optional LengthUnit.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Length.#ctor(System.Single,UnityEngine.UIElements.LengthUnit)">
      <summary>
        <para>
 Creates from a float and an optional LengthUnit.
 </para>
      </summary>
      <param name="value"></param>
      <param name="unit"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Length.Percent(System.Single)">
      <summary>
        <para>
 Creates a percentage Length from a float.
 </para>
      </summary>
      <param name="value"></param>
      <returns>
        <para>The created length.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.LengthUnit">
      <summary>
        <para>
 Describes how to interpret a Length value.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.LengthUnit.Percent">
      <summary>
        <para>
 Interprets length as a percentage.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.LengthUnit.Pixel">
      <summary>
        <para>
 Interprets length as pixel.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ListView">
      <summary>
        <para>
 A ListView is a vertically scrollable area that links to, and displays, a list of items.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListView.arraySizeFieldUssClassName">
      <summary>
        <para>
 The USS class name for the size field of the ListView when foldout header is enabled.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListView.emptyLabelUssClassName">
      <summary>
        <para>
 The USS class name for label displayed when ListView is empty.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListView.foldoutHeaderUssClassName">
      <summary>
        <para>
 The USS class name for the foldout header of the ListView.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListView.footerUssClassName">
      <summary>
        <para>
 The USS class name for the footer of the ListView.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ListView.headerTitle">
      <summary>
        <para>
 This property controls the text of the foldout header when using showFoldoutHeader.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.ListView.itemsAdded(System.Action`1&lt;System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;&gt;)">
      <summary>
        <para>
 This event is called for every item added to the itemsSource. Includes the item index.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.UIElements.ListView.itemsRemoved(System.Action`1&lt;System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;&gt;)">
      <summary>
        <para>
 This event is called for every item added to the itemsSource. Includes the item index.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="F:UnityEngine.UIElements.ListView.itemUssClassName">
      <summary>
        <para>
 The USS class name of item elements in ListView elements.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListView.listViewWithFooterUssClassName">
      <summary>
        <para>
 The USS class name for ListView when add/remove footer is enabled.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListView.listViewWithHeaderUssClassName">
      <summary>
        <para>
 The USS class name for ListView when foldout header is enabled.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListView.reorderableItemContainerUssClassName">
      <summary>
        <para>
 The USS class name for item container in reorderable animated ListView.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListView.reorderableItemHandleBarUssClassName">
      <summary>
        <para>
 The USS class name for drag handle bar in reorderable animated ListView.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListView.reorderableItemHandleUssClassName">
      <summary>
        <para>
 The USS class name for drag handle in reorderable animated ListView.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListView.reorderableItemUssClassName">
      <summary>
        <para>
 The USS class name for item elements in reorderable animated ListView.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListView.reorderableUssClassName">
      <summary>
        <para>
 The USS class name for reorderable animated ListView elements.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ListView.reorderMode">
      <summary>
        <para>
 This property controls the drag and drop mode for the list view.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListView.scrollViewWithFooterUssClassName">
      <summary>
        <para>
 The USS class name for scroll view when add/remove footer is enabled.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ListView.showAddRemoveFooter">
      <summary>
        <para>
 This property controls whether a footer will be added to the list view.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ListView.showBoundCollectionSize">
      <summary>
        <para>
 This property controls whether the list view displays the collection size (number of items).
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ListView.showFoldoutHeader">
      <summary>
        <para>
 This property controls whether the list view will display a header, in the form of a foldout that can be expanded or collapsed.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListView.ussClassName">
      <summary>
        <para>
 The USS class name for ListView elements.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ListView.#ctor">
      <summary>
        <para>
 Creates a ListView with all default properties. The ListView.itemSource
 must all be set for the ListView to function properly.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ListView.#ctor(System.Collections.IList,System.Single,System.Func`1&lt;UnityEngine.UIElements.VisualElement&gt;,System.Action`2&lt;UnityEngine.UIElements.VisualElement,System.Int32&gt;)">
      <summary>
        <para>
 Constructs a ListView, with all important properties provided.
 </para>
      </summary>
      <param name="itemsSource">The list of items to use as a data source.</param>
      <param name="itemHeight">The height of each item, in pixels.</param>
      <param name="makeItem">The factory method to call to create a display item. The method should return a
 VisualElement that can be bound to a data item.</param>
      <param name="bindItem">The method to call to bind a data item to a display item. The method
 receives as parameters the display item to bind, and the index of the data item to bind it to.</param>
    </member>
    <member name="T:UnityEngine.UIElements.ListView.UxmlFactory">
      <summary>
        <para>
 Instantiates a ListView using data from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ListView.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the ListView.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ListView.UxmlTraits.uxmlChildElementsDescription">
      <summary>
        <para>
 Returns an empty enumerable, because list views usually do not have child elements.
 </para>
      </summary>
      <returns>
        <para>An empty enumerable.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.ListView.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initializes ListView properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The object to initialize.</param>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.ListViewReorderMode">
      <summary>
        <para>
 Options to change the drag and drop mode for items in the ListView.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListViewReorderMode.Animated">
      <summary>
        <para>
 ListView will add drag handles before every item, that can be used to drag a single item with animated visual feedback.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ListViewReorderMode.Simple">
      <summary>
        <para>
 ListView will display the standard blue line dragger on reorder.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Manipulator">
      <summary>
        <para>
 Base class for all Manipulator implementations.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Manipulator.target">
      <summary>
        <para>
 VisualElement being manipulated.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Manipulator.RegisterCallbacksOnTarget">
      <summary>
        <para>
 Called to register event callbacks on the target element.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Manipulator.UnregisterCallbacksFromTarget">
      <summary>
        <para>
 Called to unregister event callbacks from the target element.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ManipulatorActivationFilter">
      <summary>
        <para>
 Used by manipulators to match events against their requirements.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ManipulatorActivationFilter.button">
      <summary>
        <para>
 The button that activates the manipulation.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ManipulatorActivationFilter.clickCount">
      <summary>
        <para>
 Number of mouse clicks required to activate the manipulator.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ManipulatorActivationFilter.modifiers">
      <summary>
        <para>
 Any modifier keys (ie. ctrl, alt, ...) that are needed to activate the manipulation.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ManipulatorActivationFilter.Matches(UnityEngine.UIElements.IMouseEvent)">
      <summary>
        <para>
 Checks whether the current mouse event satisfies the activation requirements.
 </para>
      </summary>
      <param name="e">The mouse event.</param>
      <returns>
        <para>True if the event matches the requirements. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.ManipulatorActivationFilter.Matches(UnityEngine.UIElements.IPointerEvent)">
      <summary>
        <para>
 Checks whether the current mouse event satisfies the activation requirements.
 </para>
      </summary>
      <param name="e">The mouse event.</param>
      <returns>
        <para>True if the event matches the requirements. False otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.MeshGenerationContext">
      <summary>
        <para>
 Provides methods for generating a VisualElement's visual content during the generateVisualContent callback.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MeshGenerationContext.visualElement">
      <summary>
        <para>
 The element for which VisualElement.generateVisualContent was invoked.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MeshGenerationContext.Allocate(System.Int32,System.Int32,UnityEngine.Texture)">
      <summary>
        <para>
 Allocates the specified number of vertices and indices required to express geometry for drawing the content of a VisualElement.
 </para>
      </summary>
      <param name="vertexCount">The number of vertices to allocate. The maximum is 65535 (or UInt16.MaxValue).</param>
      <param name="indexCount">The number of triangle list indices to allocate. Each 3 indices represent one triangle, so this value should be multiples of 3.</param>
      <param name="texture">An optional texture to be applied on the triangles allocated. Pass null to rely on vertex colors only.</param>
      <returns>
        <para>An object that gives access to the newely allocated data. If the returned vertex count is 0, then allocation failed (the system ran out of memory).</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.MeshWriteData">
      <summary>
        <para>
 A class that represents the vertex and index data allocated for drawing the content of a VisualElement.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MeshWriteData.indexCount">
      <summary>
        <para>
 The number of indices successfully allocated for VisualElement content drawing.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MeshWriteData.uvRegion">
      <summary>
        <para>
 A rectangle describing the UV region holding the texture passed to MeshGenerationContext.Allocate.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MeshWriteData.vertexCount">
      <summary>
        <para>
 The number of vertices successfully allocated for VisualElement content drawing.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MeshWriteData.SetAllIndices">
      <summary>
        <para>
 Fills the values of the allocated indices with values copied directly from an array. Each 3 consecutive indices form a single triangle.
 </para>
      </summary>
      <param name="indices">The array of indices to copy from. The length of the array must match the allocated index count.</param>
    </member>
    <member name="M:UnityEngine.UIElements.MeshWriteData.SetAllIndices">
      <summary>
        <para>
 Fills the values of the allocated indices with values copied directly from an array. Each 3 consecutive indices form a single triangle.
 </para>
      </summary>
      <param name="indices">The array of indices to copy from. The length of the array must match the allocated index count.</param>
    </member>
    <member name="M:UnityEngine.UIElements.MeshWriteData.SetAllVertices(UnityEngine.UIElements.Vertex[])">
      <summary>
        <para>
 Fills the values of the allocated vertices with values copied directly from an array.
 When this method is called, it is not possible to use SetNextVertex to fill the allocated vertices array.
 </para>
      </summary>
      <param name="vertices">The array of vertices to copy from. The length of the array must match the allocated vertex count.</param>
    </member>
    <member name="M:UnityEngine.UIElements.MeshWriteData.SetAllVertices(Unity.Collections.NativeSlice`1&lt;UnityEngine.UIElements.Vertex&gt;)">
      <summary>
        <para>
 Fills the values of the allocated vertices with values copied directly from an array.
 When this method is called, it is not possible to use SetNextVertex to fill the allocated vertices array.
 </para>
      </summary>
      <param name="vertices">The array of vertices to copy from. The length of the array must match the allocated vertex count.</param>
    </member>
    <member name="M:UnityEngine.UIElements.MeshWriteData.SetNextIndex">
      <summary>
        <para>
 Assigns the value of the next index of the allocated indices list.
 </para>
      </summary>
      <param name="index">The value of the next index.</param>
    </member>
    <member name="M:UnityEngine.UIElements.MeshWriteData.SetNextVertex(UnityEngine.UIElements.Vertex)">
      <summary>
        <para>
 Assigns the value of the next vertex of the allocated vertices list.
 </para>
      </summary>
      <param name="vertex">The value of the next vertex.</param>
    </member>
    <member name="T:UnityEngine.UIElements.MinMaxSlider">
      <summary>
        <para>
 A min/max slider containing a representation of a range.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.MinMaxSlider.draggerUssClassName">
      <summary>
        <para>
 USS class name of dragger elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MinMaxSlider.highLimit">
      <summary>
        <para>
 This is the high limit of the slider.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.MinMaxSlider.inputUssClassName">
      <summary>
        <para>
 USS class name of input elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.MinMaxSlider.labelUssClassName">
      <summary>
        <para>
 USS class name of labels in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MinMaxSlider.lowLimit">
      <summary>
        <para>
 This is the low limit of the slider.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.MinMaxSlider.maxThumbUssClassName">
      <summary>
        <para>
 USS class name of the maximum thumb elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MinMaxSlider.maxValue">
      <summary>
        <para>
 This is the high value of the range represented on the slider.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.MinMaxSlider.minThumbUssClassName">
      <summary>
        <para>
 USS class name of the minimum thumb elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MinMaxSlider.minValue">
      <summary>
        <para>
 This is the low value of the range represented on the slider.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MinMaxSlider.range">
      <summary>
        <para>
 Returns the range of the low/high limits of the slider.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.MinMaxSlider.trackerUssClassName">
      <summary>
        <para>
 USS class name of tracker elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.MinMaxSlider.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MinMaxSlider.value">
      <summary>
        <para>
 This is the value of the slider. This is a Vector2 where the x is the lower bound and the y is the higher bound.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MinMaxSlider.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MinMaxSlider.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="minValue">The minimum value in the range to be represented.</param>
      <param name="maxValue">The maximum value in the range to be represented.</param>
      <param name="minLimit">The minimum value of the slider limit.</param>
      <param name="maxLimit">The maximum value of the slider limit.</param>
    </member>
    <member name="M:UnityEngine.UIElements.MinMaxSlider.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="minValue">The minimum value in the range to be represented.</param>
      <param name="maxValue">The maximum value in the range to be represented.</param>
      <param name="minLimit">The minimum value of the slider limit.</param>
      <param name="maxLimit">The maximum value of the slider limit.</param>
      <param name="label"></param>
    </member>
    <member name="T:UnityEngine.UIElements.MinMaxSlider.UxmlFactory">
      <summary>
        <para>
 Instantiates a MinMaxSlider using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MinMaxSlider.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the MinMaxSlider.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MinMaxSlider.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initialize MinMaxSlider properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The element to initialize.</param>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">Creation Context, unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.MouseButton">
      <summary>
        <para>
 Describes a MouseButton.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.MouseButton.LeftMouse">
      <summary>
        <para>
 The Left Mouse Button.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.MouseButton.MiddleMouse">
      <summary>
        <para>
 The Middle Mouse Button.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.MouseButton.RightMouse">
      <summary>
        <para>
 The Right Mouse Button.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MouseCaptureController">
      <summary>
        <para>
 Class that manages capturing mouse events.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseCaptureController.CaptureMouse(UnityEngine.UIElements.IEventHandler)">
      <summary>
        <para>
 Assigns an event handler to capture mouse events.
 </para>
      </summary>
      <param name="handler">The event handler that captures mouse events.</param>
    </member>
    <member name="M:UnityEngine.UIElements.MouseCaptureController.HasMouseCapture(UnityEngine.UIElements.IEventHandler)">
      <summary>
        <para>
 Checks if the event handler is capturing the mouse.
 </para>
      </summary>
      <param name="handler">Event handler to check.</param>
      <returns>
        <para>True if the handler captures the mouse.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.MouseCaptureController.IsMouseCaptured">
      <summary>
        <para>
 Checks if there is a handler capturing the mouse.
 </para>
      </summary>
      <returns>
        <para>True if a handler is capturing the mouse, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.MouseCaptureController.ReleaseMouse(UnityEngine.UIElements.IEventHandler)">
      <summary>
        <para>
 Stops an event handler from capturing the mouse.
 </para>
      </summary>
      <param name="handler">The event handler to stop capturing the mouse. If this handler is not assigned to capturing the mouse, nothing happens.</param>
    </member>
    <member name="M:UnityEngine.UIElements.MouseCaptureController.ReleaseMouse">
      <summary>
        <para>
 Stops an event handler from capturing the mouse.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MouseCaptureEvent">
      <summary>
        <para>
 Event sent after a handler starts capturing the mouse.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MouseCaptureEventBase`1">
      <summary>
        <para>
 Event sent when the handler capturing the mouse changes.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseCaptureEventBase_1.relatedTarget">
      <summary>
        <para>
 In the case of a MouseCaptureEvent, this property is the IEventHandler that loses the capture. In the case of a MouseCaptureOutEvent, this property is the IEventHandler that gains the capture.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseCaptureEventBase_1.GetPooled(UnityEngine.UIElements.IEventHandler,UnityEngine.UIElements.IEventHandler)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="target">The handler taking or releasing the mouse capture.</param>
      <param name="relatedTarget">The related target.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.MouseCaptureEventBase_1.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MouseCaptureOutEvent">
      <summary>
        <para>
 Event sent before a handler stops capturing the mouse.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MouseDownEvent">
      <summary>
        <para>
 This event is sent when a mouse button is pressed.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseDownEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseDownEvent.GetPooled(UnityEngine.Event)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="systemEvent">An IMGUI mouse event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.MouseDownEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MouseEnterEvent">
      <summary>
        <para>
 Event sent when the mouse pointer enters an element or one of its descendent elements. The event is cancellable, it does not trickle down, and it does not bubble up.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseEnterEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseEnterEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MouseEnterWindowEvent">
      <summary>
        <para>
 Event sent when the mouse pointer enters a window. The event is cancellable, it does not trickle down, and it does not bubble up.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseEnterWindowEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseEnterWindowEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MouseEventBase`1">
      <summary>
        <para>
 The base class for mouse events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseEventBase_1.actionKey">
      <summary>
        <para>
 Returns true if the platform-specific action key is pressed. This key is Cmd on macOS, and Ctrl on all other platforms.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseEventBase_1.altKey">
      <summary>
        <para>
 Returns true if the Alt key is pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseEventBase_1.button">
      <summary>
        <para>
 Integer that indicates which mouse button is pressed: 0 is the left button, 1 is the right button, 2 is the middle button.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseEventBase_1.clickCount">
      <summary>
        <para>
 The number of times the button is pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseEventBase_1.commandKey">
      <summary>
        <para>
 Returns true if the Windows/Cmd key is pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseEventBase_1.ctrlKey">
      <summary>
        <para>
 Returns true if the Ctrl key is pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseEventBase_1.currentTarget">
      <summary>
        <para>
 The current target of the event. The current target is the element in the propagation path for which event handlers are currently being executed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseEventBase_1.localMousePosition">
      <summary>
        <para>
 The mouse position in the current target coordinate system.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseEventBase_1.modifiers">
      <summary>
        <para>
 Flags that hold pressed modifier keys (Alt, Ctrl, Shift, Windows/Cmd).
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseEventBase_1.mouseDelta">
      <summary>
        <para>
 The difference of the mouse position between the previous mouse event and the current mouse event.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseEventBase_1.mousePosition">
      <summary>
        <para>
 The mouse position in the screen coordinate system.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseEventBase_1.pressedButtons">
      <summary>
        <para>
 A bitmask that describes the currently pressed buttons.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseEventBase_1.shiftKey">
      <summary>
        <para>
 Returns true if the Shift key is pressed.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseEventBase_1.GetPooled(UnityEngine.Event)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="systemEvent">An IMGUI mouse event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.MouseEventBase_1.GetPooled(UnityEngine.Vector2,System.Int32,System.Int32,UnityEngine.Vector2,UnityEngine.EventModifiers)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="position">The mouse position.</param>
      <param name="button">The mouse button pressed.</param>
      <param name="clickCount">The number of consecutive mouse clicks received.</param>
      <param name="delta">The relative movement of the mouse compared to the mouse position when the last event was received.</param>
      <param name="modifiers">The modifier keys held down during the event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.MouseEventBase_1.GetPooled(UnityEngine.UIElements.IMouseEvent)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="triggerEvent">The event that sent this event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.MouseEventBase_1.GetPooled(UnityEngine.UIElements.IPointerEvent)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="pointerEvent">The pointer event that sent this event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.MouseEventBase_1.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MouseLeaveEvent">
      <summary>
        <para>
 Event sent when the mouse pointer exits an element and all its descendent elements. The event is cancellable, it does not trickle down, and it does not bubble up.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseLeaveEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseLeaveEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MouseLeaveWindowEvent">
      <summary>
        <para>
 Event sent when the mouse pointer exits a window. The event is cancellable, it does not trickle down, and it does not bubble up.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseLeaveWindowEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseLeaveWindowEvent.GetPooled(UnityEngine.Event)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="systemEvent">An IMGUI MouseLeaveWindow event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.MouseLeaveWindowEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MouseManipulator">
      <summary>
        <para>
 MouseManipulators have a list of activation filters.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.MouseManipulator.activators">
      <summary>
        <para>
 List of Activationfilters.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseManipulator.CanStartManipulation(UnityEngine.UIElements.IMouseEvent)">
      <summary>
        <para>
 Checks whether MouseEvent satisfies all of the ManipulatorActivationFilter requirements.
 </para>
      </summary>
      <param name="e">The MouseEvent to validate.</param>
      <returns>
        <para>True if the event satisfies the requirements. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.MouseManipulator.CanStopManipulation(UnityEngine.UIElements.IMouseEvent)">
      <summary>
        <para>
 Checks whether the MouseEvent is related to this Manipulator.
 </para>
      </summary>
      <param name="e">MouseEvent to validate.</param>
      <returns>
        <para>True if MouseEvent uses the current activator button. False otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.MouseMoveEvent">
      <summary>
        <para>
 This event is sent when the mouse moves.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseMoveEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseMoveEvent.GetPooled(UnityEngine.Event)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="systemEvent">An IMGUI mouse event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.MouseMoveEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MouseOutEvent">
      <summary>
        <para>
 Event sent when the mouse pointer exits an element. The event trickles down, it bubbles up, and it is cancellable.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MouseOverEvent">
      <summary>
        <para>
 Event sent when the mouse pointer enters an element. The event trickles down, it bubbles up, and it is cancellable.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.MouseUpEvent">
      <summary>
        <para>
 This event is sent when a mouse button is released.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseUpEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.MouseUpEvent.GetPooled(UnityEngine.Event)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="systemEvent">An IMGUI mouse event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.MouseUpEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.NavigationCancelEvent">
      <summary>
        <para>
 Event sent when the user presses the cancel button.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.NavigationEventBase`1">
      <summary>
        <para>
 Navigation events abstract base class.

 By default, navigation events trickle down and bubble up. They are cancellable, and disabled elements won't
 receive these events.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.NavigationMoveEvent">
      <summary>
        <para>
 Event typically sent when the user presses the D-pad, moves a joystick or presses the arrow keys.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.NavigationMoveEvent.direction">
      <summary>
        <para>
 The direction of the navigation.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.NavigationMoveEvent.move">
      <summary>
        <para>
 The move vector.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.NavigationMoveEvent.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.NavigationMoveEvent.Direction">
      <summary>
        <para>
 Move event direction.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.NavigationMoveEvent.Direction.Down">
      <summary>
        <para>
 Downo.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.NavigationMoveEvent.Direction.Left">
      <summary>
        <para>
 Lefto.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.NavigationMoveEvent.Direction.None">
      <summary>
        <para>
 No specific direction.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.NavigationMoveEvent.Direction.Right">
      <summary>
        <para>
 Righto.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.NavigationMoveEvent.Direction.Up">
      <summary>
        <para>
 Upo.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.NavigationMoveEvent.GetPooled(UnityEngine.Vector2)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values.
 Use this function instead of creating new events.
 Events obtained from this method should be released back to the pool using Dispose().
 </para>
      </summary>
      <param name="moveVector">The move vector.</param>
      <returns>
        <para>An initialized navigation event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.NavigationMoveEvent.Init">
      <summary>
        <para>
 Initialize the event members.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.NavigationSubmitEvent">
      <summary>
        <para>
 Event sent when the user presses the submit button.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Overflow">
      <summary>
        <para>
 Defines what should happened if content overflows an element bounds.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Overflow.Hidden">
      <summary>
        <para>
 The overflow is clipped, and the rest of the content will be invisible.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Overflow.Visible">
      <summary>
        <para>
 The overflow isn't clipped. It renders outside the element's box. Default Value.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.OverflowClipBox">
      <summary>
        <para>
 Boxes against which the VisualElement content is clipped.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.OverflowClipBox.ContentBox">
      <summary>
        <para>
 Clip the content against the box inside the padding areas.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.OverflowClipBox.PaddingBox">
      <summary>
        <para>
 Clip the content against the box outside the padding areas but inside the borders.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PanelChangedEventBase`1">
      <summary>
        <para>
 Abstract base class for events notifying of a panel change.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelChangedEventBase_1.destinationPanel">
      <summary>
        <para>
 In the case of AttachToPanelEvent, the panel to which the event target element is now attached. In the case of DetachFromPanelEvent, the panel to which the event target element will be attached.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelChangedEventBase_1.originPanel">
      <summary>
        <para>
 In the case of AttachToPanelEvent, the panel to which the event target element was attached. In the case of DetachFromPanelEvent, the panel from which the event target element is detached.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PanelChangedEventBase_1.GetPooled(UnityEngine.UIElements.IPanel,UnityEngine.UIElements.IPanel)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="originPanel">Sets the originPanel property of the event.</param>
      <param name="destinationPanel">Sets the destinationPanel property of the event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.PanelChangedEventBase_1.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PanelScaleMode">
      <summary>
        <para>
 Options that specify how elements in the panel scale when the screen size changes. See PanelSettings.scaleMode.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PanelScaleMode.ConstantPhysicalSize">
      <summary>
        <para>
 Elements stay the same physical size (displayed size) regardless of screen size and resolution.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PanelScaleMode.ConstantPixelSize">
      <summary>
        <para>
 Elements stay the same size, in pixels, regardless of screen size.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PanelScaleMode.ScaleWithScreenSize">
      <summary>
        <para>
 Elements get bigger when the screen size increases, and smaller when it decreases.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PanelScreenMatchMode">
      <summary>
        <para>
 Options that specify how to scale the panel area when the aspect ratio of the current screen resolution
 does not match the reference resolution. See PanelSettings.screenMatchMode.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PanelScreenMatchMode.Expand">
      <summary>
        <para>
 Expand the panel area horizontally or vertically so the panel size is never
 smaller than the reference resolution.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PanelScreenMatchMode.MatchWidthOrHeight">
      <summary>
        <para>
 Scales the panel area using width, height, or a mix of the two as a reference.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PanelScreenMatchMode.Shrink">
      <summary>
        <para>
 Crops the panel area horizontally or vertically so the panel size never exceeds
 the reference resolution.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PanelSettings">
      <summary>
        <para>
 Defines a Panel Settings asset that instantiates a panel at runtime. The panel makes it possible for Unity to display
 UXML-file based UI in the Game view.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.clearColor">
      <summary>
        <para>
 Determines whether the color buffer is cleared before the panel is rendered.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.clearDepthStencil">
      <summary>
        <para>
 Determines whether the depth/stencil buffer is cleared before the panel is rendered.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.colorClearValue">
      <summary>
        <para>
 The color used to clear the color buffer.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.depthClearValue">
      <summary>
        <para>
 The depth used to clear the depth/stencil buffer.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.dynamicAtlasSettings">
      <summary>
        <para>
 Settings of the dynamic atlas.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.fallbackDpi">
      <summary>
        <para>
 The DPI value that Unity uses when it cannot determine the screen DPI.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.match">
      <summary>
        <para>
 Determines whether Unity uses width, height, or a mix of the two as a reference when it scales the panel area.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.referenceDpi">
      <summary>
        <para>
 The DPI that the UI is designed for.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.referenceResolution">
      <summary>
        <para>
 The resolution the UI is designed for.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.scale">
      <summary>
        <para>
 A uniform scaling factor that Unity applies to elements in the panel before
 the panel transform.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.scaleMode">
      <summary>
        <para>
 Determines how elements in the panel scale when the screen size changes.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.screenMatchMode">
      <summary>
        <para>
 Specifies how to scale the panel area when the aspect ratio of the current resolution
 does not match the reference resolution.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.sortingOrder">
      <summary>
        <para>
 When the Scene uses more than one panel, this value determines where this panel appears in the sorting
 order relative to other panels.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.targetDisplay">
      <summary>
        <para>
 When the Scene uses more than one panel, this value determines where this panel appears in the sorting
 order relative to other panels.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.targetTexture">
      <summary>
        <para>
 Specifies a Render Texture to render the panel's UI on.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PanelSettings.textSettings">
      <summary>
        <para>
 Specifies a PanelTextSettings that will be used by every UI Document attached to the panel.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PanelSettings.themeStyleSheet">
      <summary>
        <para>
 Specifies a style sheet that Unity applies to every UI Document attached to the panel.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PanelSettings.SetScreenToPanelSpaceFunction(System.Func`2&lt;UnityEngine.Vector2,UnityEngine.Vector2&gt;)">
      <summary>
        <para>
 Sets the function that handles the transformation from screen space to panel space. For overlay panels,
 this function returns the input value.
 </para>
      </summary>
      <param name="screentoPanelSpaceFunction">The translation function. Set to null to revert to the default behavior.</param>
    </member>
    <member name="T:UnityEngine.UIElements.PanelTextSettings">
      <summary>
        <para>
 Represents text rendering settings for a specific UI panel.
 PanelSettings.textSettings
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PickingMode">
      <summary>
        <para>
 Describes the picking behavior.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PickingMode.Ignore">
      <summary>
        <para>
 Disables picking.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PickingMode.Position">
      <summary>
        <para>
 Picking enabled. Default Value.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerCancelEvent">
      <summary>
        <para>
 This event is sent when pointer interaction is cancelled.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerCancelEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerCancelEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerCaptureEvent">
      <summary>
        <para>
 Event sent when a pointer is captured by a VisualElement.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerCaptureEventBase`1">
      <summary>
        <para>
 Base class for pointer capture events and mouse capture events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerCaptureEventBase_1.pointerId">
      <summary>
        <para>
 Identifies the pointer that sends the event.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerCaptureEventBase_1.relatedTarget">
      <summary>
        <para>
 For PointerCaptureEvent and MouseCaptureEvent, returns the VisualElement that loses the pointer capture, if any. For PointerCaptureOutEvent and MouseCaptureOutEvent, returns the VisualElement that captures the pointer.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerCaptureEventBase_1.GetPooled(UnityEngine.UIElements.IEventHandler,UnityEngine.UIElements.IEventHandler,System.Int32)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="target">For PointerCapture and MouseCapture events, the element that captures the pointer. For PointerCaptureOut and MouseCaptureOut events, the element that releases the pointer.</param>
      <param name="relatedTarget">For PointerCaptureEvent and MouseCaptureEvent, returns the element that loses the pointer capture, if any. For PointerCaptureOutEvent and MouseCaptureOutEvent, returns the element that captures the pointer.</param>
      <param name="pointerId">The pointer that is captured or released.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.PointerCaptureEventBase_1.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerCaptureHelper">
      <summary>
        <para>
 A static class to capture and release pointers.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerCaptureHelper.CapturePointer(UnityEngine.UIElements.IEventHandler,System.Int32)">
      <summary>
        <para>
 Captures the pointer.
 </para>
      </summary>
      <param name="handler">The VisualElement that captures the pointer.</param>
      <param name="pointerId">The pointer to capture.</param>
    </member>
    <member name="M:UnityEngine.UIElements.PointerCaptureHelper.GetCapturingElement(UnityEngine.UIElements.IPanel,System.Int32)">
      <summary>
        <para>
 Returns the element that is capturing the pointer.
 </para>
      </summary>
      <param name="panel">The panel that holds the element.</param>
      <param name="pointerId">The captured pointer.</param>
      <returns>
        <para>The element that is capturing the pointer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.PointerCaptureHelper.HasPointerCapture(UnityEngine.UIElements.IEventHandler,System.Int32)">
      <summary>
        <para>
 Tests whether the element has captured the pointer.
 </para>
      </summary>
      <param name="handler">The VisualElement being tested.</param>
      <param name="pointerId">The captured pointer.</param>
      <returns>
        <para>True if element captured the pointer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.PointerCaptureHelper.ReleasePointer(UnityEngine.UIElements.IEventHandler,System.Int32)">
      <summary>
        <para>
 Tests whether an element captured a pointer and, if so, tells the element to release the pointer.
 </para>
      </summary>
      <param name="handler">The element which potentially captured the pointer.</param>
      <param name="pointerId">The captured pointer.</param>
    </member>
    <member name="M:UnityEngine.UIElements.PointerCaptureHelper.ReleasePointer(UnityEngine.UIElements.IPanel,System.Int32)">
      <summary>
        <para>
 Releases the pointer.
 </para>
      </summary>
      <param name="panel">The panel that holds the element that captured the pointer.</param>
      <param name="pointerId">The captured pointer.</param>
    </member>
    <member name="T:UnityEngine.UIElements.PointerCaptureOutEvent">
      <summary>
        <para>
 Event sent when a VisualElement releases a pointer.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerDownEvent">
      <summary>
        <para>
 This event is sent when a pointer is pressed.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerDownEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerDownEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerEnterEvent">
      <summary>
        <para>
 This event is sent when a pointer enters a VisualElement or one of its descendants.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerEnterEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerEnterEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerEventBase`1">
      <summary>
        <para>
 This is the base class for pointer events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.actionKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the platform-specific action key is pressed. True means the action
 key is pressed. False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.altitudeAngle">
      <summary>
        <para>
 Gets the angle of the stylus relative to the surface, in radians
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.altKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the Alt key is pressed. True means the Alt key is pressed.
 False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.azimuthAngle">
      <summary>
        <para>
 Gets the angle of the stylus relative to the x-axis, in radians.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.button">
      <summary>
        <para>
 Gets a value that indicates which mouse button was pressed: 0 is the left button, 1 is the right button, 2 is the middle button.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.clickCount">
      <summary>
        <para>
 Gets the number of times the button was pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.commandKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the WindowsCmd key is pressed. True means the WindowsCmd key
 is pressed. False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.ctrlKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the Ctrl key is pressed. True means the Ctrl key is pressed.
 False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.currentTarget">
      <summary>
        <para>
 Gets the current target of the event.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.deltaPosition">
      <summary>
        <para>
 Gets the difference between the pointer's position during the previous mouse event and its position during the
 current mouse event.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.deltaTime">
      <summary>
        <para>
 Gets the amount of time that has elapsed since the last recorded change in pointer values, in seconds.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.isPrimary">
      <summary>
        <para>
 Gets a boolean value that indicates whether the pointer is a primary pointer. True means the pointer is a primary
 pointer. False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.localPosition">
      <summary>
        <para>
 Gets the pointer position in the current target's coordinate system.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.modifiers">
      <summary>
        <para>
 Gets flags that indicate whether modifier keys (Alt, Ctrl, Shift, Windows/Cmd) are pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.pointerId">
      <summary>
        <para>
 Gets the identifier of the pointer that sent the event.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.pointerType">
      <summary>
        <para>
 Gets the type of pointer that created the event.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.position">
      <summary>
        <para>
 Gets the pointer position in the Screen or World coordinate system.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.pressedButtons">
      <summary>
        <para>
 Gets a bitmask that describes the buttons that are currently pressed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.pressure">
      <summary>
        <para>
 Gets the amount of pressure currently applied by a touch.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.radius">
      <summary>
        <para>
 Gets an estimate of the radius of a touch.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.radiusVariance">
      <summary>
        <para>
 Gets the accuracy of the touch radius.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.shiftKey">
      <summary>
        <para>
 Gets a boolean value that indicates whether the Shift key is pressed. True means the Shift key is pressed.
 False means it isn't.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.tangentialPressure">
      <summary>
        <para>
 Gets the pressure applied to an additional pressure-sensitive control on the stylus.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PointerEventBase_1.twist">
      <summary>
        <para>
 Gets the rotation of the stylus around its axis, in radians.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerEventBase_1.GetPooled(UnityEngine.Event)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events.
 Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="systemEvent">An IMGUI mouse event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.PointerEventBase_1.GetPooled(UnityEngine.Touch,UnityEngine.EventModifiers)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events.
 Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="touch">A &lt;see cref="Touch" /&gt; structure from the InputManager.</param>
      <param name="modifiers">The modifier keys held down during the event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.PointerEventBase_1.GetPooled(UnityEngine.UIElements.IPointerEvent)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events.
 Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="triggerEvent">The event that sent this event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.PointerEventBase_1.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerId">
      <summary>
        <para>
 A static class that holds pointer ID values.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PointerId.invalidPointerId">
      <summary>
        <para>
 Represents an invalid pointer ID value.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PointerId.maxPointers">
      <summary>
        <para>
 The maximum number of pointers the implementation supports.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PointerId.mousePointerId">
      <summary>
        <para>
 The mouse pointer ID.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PointerId.penPointerCount">
      <summary>
        <para>
 The number of pen pointers the implementation supports.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PointerId.penPointerIdBase">
      <summary>
        <para>
 The base ID for pen pointers.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PointerId.touchPointerCount">
      <summary>
        <para>
 The number of touch pointers the implementation supports.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PointerId.touchPointerIdBase">
      <summary>
        <para>
 The base ID for touch pointers.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerLeaveEvent">
      <summary>
        <para>
 This event is sent when a pointer exits an element and all of its descendants.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerLeaveEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerLeaveEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerManipulator">
      <summary>
        <para>
 PointerManipulators have a list of activation filters.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerManipulator.CanStartManipulation(UnityEngine.UIElements.IPointerEvent)">
      <summary>
        <para>
 Checks whether PointerEvent satisfies all of the ManipulatorActivationFilter requirements.
 </para>
      </summary>
      <param name="e">The PointerEvent to validate.</param>
      <returns>
        <para>True if the event satisfies the requirements. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.PointerManipulator.CanStopManipulation(UnityEngine.UIElements.IPointerEvent)">
      <summary>
        <para>
 Checks whether the PointerEvent is related to this Manipulator.
 </para>
      </summary>
      <param name="e">PointerEvent to validate.</param>
      <returns>
        <para>True if PointerEvent uses the current activator button. False otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.PointerMoveEvent">
      <summary>
        <para>
 This event is sent when a pointer changes state.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerMoveEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerMoveEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerOutEvent">
      <summary>
        <para>
 This event is sent when a pointer exits an element.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerOverEvent">
      <summary>
        <para>
 This event is sent when a pointer enters an element.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerStationaryEvent">
      <summary>
        <para>
 This event is sent when a pointer does not change for a set amount of time, determined by the operating system.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerStationaryEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerStationaryEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerType">
      <summary>
        <para>
 A static class that holds pointer type values.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PointerType.mouse">
      <summary>
        <para>
 The pointer type for mouse events.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PointerType.pen">
      <summary>
        <para>
 The pointer type for pen events.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PointerType.touch">
      <summary>
        <para>
 The pointer type for touch events.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PointerType.unknown">
      <summary>
        <para>
 The pointer type for events created by unknown devices.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PointerUpEvent">
      <summary>
        <para>
 This event is sent when a pointer's last pressed button is released.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerUpEvent.#ctor">
      <summary>
        <para>
 Constructor. Avoid creating new event instances. Instead, use GetPooled() to get an instance from a pool of reusable event instances.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PointerUpEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PopupWindow">
      <summary>
        <para>
 Styled visual element that matches the EditorGUILayout.Popup IMGUI element. This element doesn't have any functionality. It's just a container with a border and a title, rather than a window or popup.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PopupWindow.contentUssClassName">
      <summary>
        <para>
 USS class name of content elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PopupWindow.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.PopupWindow.#ctor">
      <summary>
        <para>
 Initializes and returns an instance of PopupWindow.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PopupWindow.UxmlFactory">
      <summary>
        <para>
 Instantiates a PopupWindow using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PopupWindow.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the PopupWindow.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.PopupWindow.UxmlTraits.uxmlChildElementsDescription">
      <summary>
        <para>
 Returns an empty enumerable, as popup windows generally do not have children.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Position">
      <summary>
        <para>
 Defines how the position values are interpreted by the layout engine.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Position.Absolute">
      <summary>
        <para>
 The element is positioned in relation to its parent box and doesn't contribute to the layout anymore.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Position.Relative">
      <summary>
        <para>
 The element is positioned in relation to its default box as calculated by layout.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ProgressBar">
      <summary>
        <para>
 A control that displays the progress between a lower and upper bound value.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.PropagationPhase">
      <summary>
        <para>
 The propagation phases of an event.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PropagationPhase.AtTarget">
      <summary>
        <para>
 The event is sent to the target.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PropagationPhase.BubbleUp">
      <summary>
        <para>
 The event is sent from the target element's parent back to the panel's root element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PropagationPhase.DefaultAction">
      <summary>
        <para>
 The event is sent to the target element, which can then execute its final default actions for the event. Event handlers do not receive the event in this phase. Instead, ExecuteDefaultAction is called on the target element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PropagationPhase.DefaultActionAtTarget">
      <summary>
        <para>
 The event is sent to the target element, which can then execute its default actions for the event at the target phase. Event handlers do not receive the event in this phase. Instead, ExecuteDefaultActionAtTarget is called on the target element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PropagationPhase.None">
      <summary>
        <para>
 The event is not propagated.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.PropagationPhase.TrickleDown">
      <summary>
        <para>
 The event is sent from the panel's root element to the target element's parent.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.RadioButton">
      <summary>
        <para>
 A control that allows users to select a single option inside a RadioButtonGroup
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.RadioButton.checkmarkBackgroundUssClassName">
      <summary>
        <para>
 USS class name of checkmark background in RadioButton elements.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.RadioButton.checkmarkUssClassName">
      <summary>
        <para>
 USS class name of checkmark in RadioButton elements.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.RadioButton.inputUssClassName">
      <summary>
        <para>
 USS class name of input elements in RadioButton elements.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.RadioButton.labelUssClassName">
      <summary>
        <para>
 USS class name for Labels in RadioButton elements.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.RadioButton.textUssClassName">
      <summary>
        <para>
 USS class name of Text elements in RadioButton elements.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.RadioButton.ussClassName">
      <summary>
        <para>
 USS class name for RadioButton elements.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.RadioButton.#ctor">
      <summary>
        <para>
 Creates a RadioButton with no label.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.RadioButton.#ctor(System.String)">
      <summary>
        <para>
 Creates a RadioButton with a Label and a default manipulator.
 </para>
      </summary>
      <param name="label">The Label text.</param>
    </member>
    <member name="T:UnityEngine.UIElements.RadioButton.UxmlFactory">
      <summary>
        <para>
 Instantiates a RadioButton using data from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.RadioButton.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the RadioButton.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.RadioButton.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initializes RadioButton properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The object to initialize.</param>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.RadioButtonGroup">
      <summary>
        <para>
 A control that allows single selection out of a logical group of RadioButton elements. Selecting one will deselect the others.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.RadioButtonGroup.choices">
      <summary>
        <para>
 The list of available choices in the group.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.RadioButtonGroup.ussClassName">
      <summary>
        <para>
 USS class name for RadioButtonGroup elements.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.RadioButtonGroup.#ctor">
      <summary>
        <para>
 Initializes and returns an instance of RadioButtonGroup.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.RadioButtonGroup.#ctor(System.String,System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>
 Initializes and returns an instance of RadioButtonGroup.
 </para>
      </summary>
      <param name="label">The label for this group</param>
      <param name="radioButtonChoices">The choices to display in this group</param>
    </member>
    <member name="T:UnityEngine.UIElements.RadioButtonGroup.UxmlFactory">
      <summary>
        <para>
 Instantiates a RadioButtonGroup using data from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.RadioButtonGroup.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the RadioButtonGroup.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.RadioButtonGroup.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initializes RadioButtonGroup properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The object to initialize.</param>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.RepeatButton">
      <summary>
        <para>
 A button that executes an action repeatedly while it is pressed.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.RepeatButton.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.RepeatButton.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.RepeatButton.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="clickEvent">The action to execute when the button is pressed.</param>
      <param name="delay">The initial delay before the action is executed for the first time. Value is defined in milliseconds.</param>
      <param name="interval">The interval between each execution of the action. Value is defined in milliseconds.</param>
    </member>
    <member name="M:UnityEngine.UIElements.RepeatButton.SetAction">
      <summary>
        <para>
 Set the action that should be executed when the button is pressed.
 </para>
      </summary>
      <param name="clickEvent">The action to execute.</param>
      <param name="delay">The initial delay before the action is executed for the first time. Value is defined in milliseconds.</param>
      <param name="interval">The interval between each execution of the action. Value is defined in milliseconds.</param>
    </member>
    <member name="T:UnityEngine.UIElements.RepeatButton.UxmlFactory">
      <summary>
        <para>
 Instantiates a RepeatButton using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.RepeatButton.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the RepeatButton.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.RepeatButton.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initialize RepeatButton properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The object to initialize.</param>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.Rotate">
      <summary>
        <para>
 Provides rotation information for visual elements that rotates around the TransformOrigin. Positive values represent clockwise rotation.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Rotate.angle">
      <summary>
        <para>
 The angle applied by the rotation. Positive values represent clockwise rotation and negative values represent counterclockwise rotation.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Rotate.#ctor(UnityEngine.UIElements.Angle)">
      <summary>
        <para>
 Create a Rotate struct that correspond to a rotation around the z axis by the provided Angle.
 </para>
      </summary>
      <param name="angle"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Rotate.None">
      <summary>
        <para>
 Return a value of Rotate that applies no rotation
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.RuntimePanelUtils">
      <summary>
        <para>
 A collection of static methods that provide simple World, Screen, and Panel coordinate transformations.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.RuntimePanelUtils.CameraTransformWorldToPanel(UnityEngine.UIElements.IPanel,UnityEngine.Vector3,UnityEngine.Camera)">
      <summary>
        <para>
 Transforms a world absolute position to its equivalent local coordinate on given panel,
 using provided camera for internal WorldToScreen transformation.
 &lt;param name="panel"&gt;The local coordinates reference panel.&lt;param&gt;
 &lt;param name="worldPosition"&gt;The world position to transform.&lt;param&gt;
 &lt;param name="camera"&gt;The Camera used for internal WorldToScreen transformation.&lt;param&gt;
 &lt;returns&gt;A position in panel coordinates that corresponds to the provided world position.&lt;returns&gt;
 </para>
      </summary>
      <param name="panel"></param>
      <param name="worldPosition"></param>
      <param name="camera"></param>
    </member>
    <member name="M:UnityEngine.UIElements.RuntimePanelUtils.CameraTransformWorldToPanelRect(UnityEngine.UIElements.IPanel,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Camera)">
      <summary>
        <para>
 Transforms a world position and size (in world units) to their equivalent local position and size
 on given panel, using provided camera for internal WorldToScreen transformation.
 &lt;param name="panel"&gt;The local coordinates reference panel.&lt;param&gt;
 &lt;param name="worldPosition"&gt;The world position to transform.&lt;param&gt;
 &lt;param name="worldSize"&gt;The world size to transform. The object in the panel will appear to have
 that size when compared to other 3D objects at neighboring positions.&lt;param&gt;
 &lt;param name="camera"&gt;The Camera used for internal WorldToScreen transformation.&lt;param&gt;
 &lt;returns&gt;A (position, size) Rect in panel coordinates that corresponds to the provided world position
 and size.&lt;/returns&gt;
 </para>
      </summary>
      <param name="panel"></param>
      <param name="worldPosition"></param>
      <param name="worldSize"></param>
      <param name="camera"></param>
    </member>
    <member name="M:UnityEngine.UIElements.RuntimePanelUtils.ResetDynamicAtlas(UnityEngine.UIElements.IPanel)">
      <summary>
        <para>
 Resets the dynamic atlas of the panel. Textured elements will be repainted.
 </para>
      </summary>
      <param name="panel"></param>
    </member>
    <member name="M:UnityEngine.UIElements.RuntimePanelUtils.ScreenToPanel(UnityEngine.UIElements.IPanel,UnityEngine.Vector2)">
      <summary>
        <para>
 Transforms a screen absolute position to its equivalent local coordinate on given panel.
 &lt;param name="panel"&gt;The local coordinates reference panel.&lt;param&gt;
 &lt;param name="screenPosition"&gt;The screen position to transform.&lt;param&gt;
 &lt;returns&gt;A position in panel coordinates that corresponds to the provided screen position.&lt;/returns&gt;
 </para>
      </summary>
      <param name="panel"></param>
      <param name="screenPosition"></param>
    </member>
    <member name="M:UnityEngine.UIElements.RuntimePanelUtils.SetTextureDirty(UnityEngine.UIElements.IPanel,UnityEngine.Texture2D)">
      <summary>
        <para>
 Notifies the dynamic atlas of the panel that the content of the provided texture has changed. If the dynamic
 atlas contains the texture, it will update it.
 </para>
      </summary>
      <param name="panel">The current panel</param>
      <param name="texture">The texture whose content has changed.</param>
    </member>
    <member name="T:UnityEngine.UIElements.Scale">
      <summary>
        <para>
 Reprensents the scale applied as an element's transformations. The center point that will not move when the scaling is applied is the TransformOrigin.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Scale.None">
      <summary>
        <para>
 Returns a value of Scale without any scaling applied.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Scroller">
      <summary>
        <para>
 A vertical or horizontal scrollbar.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Scroller.direction">
      <summary>
        <para>
 Direction of this scrollbar.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Scroller.highButton">
      <summary>
        <para>
 Top or right scroll button.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Scroller.highButtonUssClassName">
      <summary>
        <para>
 USS class name of high buttons in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Scroller.highValue">
      <summary>
        <para>
 Maximum value.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Scroller.horizontalVariantUssClassName">
      <summary>
        <para>
 USS class name of elements of this type, when they are displayed horizontally.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Scroller.lowButton">
      <summary>
        <para>
 Bottom or left scroll button.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Scroller.lowButtonUssClassName">
      <summary>
        <para>
 USS class name of low buttons in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Scroller.lowValue">
      <summary>
        <para>
 Minimum value.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Scroller.slider">
      <summary>
        <para>
 The slider used by this scroller.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Scroller.sliderUssClassName">
      <summary>
        <para>
 USS class name of slider elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Scroller.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Scroller.value">
      <summary>
        <para>
 Value that defines the slider position. It lies between lowValue and highValue.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.Scroller.valueChanged(System.Action`1&lt;System.Single&gt;)">
      <summary>
        <para>
 Event sent when the slider value has changed.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="F:UnityEngine.UIElements.Scroller.verticalVariantUssClassName">
      <summary>
        <para>
 USS class name of elements of this type, when they are displayed vertically.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Scroller.Adjust(System.Single)">
      <summary>
        <para>
 Updates the slider element size as a ratio of total range. A value greater than or equal to 1 will disable the Scroller.
 </para>
      </summary>
      <param name="factor">Slider size ratio.</param>
    </member>
    <member name="M:UnityEngine.UIElements.Scroller.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Scroller.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Scroller.ScrollPageDown">
      <summary>
        <para>
 Will change the value according to the current slider pageSize.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Scroller.ScrollPageDown(System.Single)">
      <summary>
        <para>
 Will change the value according to the current slider pageSize.
 </para>
      </summary>
      <param name="factor"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Scroller.ScrollPageUp">
      <summary>
        <para>
 Will change the value according to the current slider pageSize.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Scroller.ScrollPageUp(System.Single)">
      <summary>
        <para>
 Will change the value according to the current slider pageSize.
 </para>
      </summary>
      <param name="factor"></param>
    </member>
    <member name="T:UnityEngine.UIElements.Scroller.UxmlFactory">
      <summary>
        <para>
 Instantiates a Scroller using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Scroller.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the Scroller.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.Scroller.UxmlTraits.uxmlChildElementsDescription">
      <summary>
        <para>
 Returns an empty enumerable, as scrollers do not have children.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Scroller.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initialize Scroller properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The object to initialize.</param>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.ScrollerVisibility">
      <summary>
        <para>
 Options for controlling the visibility of scroll bars in the ScrollView.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollerVisibility.AlwaysVisible">
      <summary>
        <para>
 The scroll bar is always visible.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollerVisibility.Auto">
      <summary>
        <para>
 Displays a scroll bar only if the content does not fit in the scroll view. Otherwise, hides the scroll bar.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollerVisibility.Hidden">
      <summary>
        <para>
 The scroll bar is always hidden.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ScrollView">
      <summary>
        <para>
 Displays its contents inside a scrollable frame. For more information, see.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.contentAndVerticalScrollUssClassName">
      <summary>
        <para>
 USS class name of content elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.contentContainer">
      <summary>
        <para>
 Contains full content, potentially partially visible.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.contentUssClassName">
      <summary>
        <para>
 USS class name of content elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.contentViewport">
      <summary>
        <para>
 Represents the visible part of contentContainer.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.elasticity">
      <summary>
        <para>
 The amount of elasticity to use when a user tries to scroll past the boundaries of the scroll view.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.horizontalPageSize">
      <summary>
        <para>
 This property controls the speed of the horizontal scrolling when using a keyboard or the on-screen scrollbar buttons (arrows and handle), based on the size of the page.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.horizontalScroller">
      <summary>
        <para>
 Horizontal scrollbar.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.horizontalScrollerVisibility">
      <summary>
        <para>
 Specifies whether the horizontal scroll bar is visible.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.horizontalVariantUssClassName">
      <summary>
        <para>
 USS class name that's added when the ScrollView is in horizontal mode.
 ScrollViewMode.Horizontal
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.hScrollerUssClassName">
      <summary>
        <para>
 USS class name of horizontal scrollers in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.mode">
      <summary>
        <para>
 Controls how the ScrollView allows the user to scroll the contents.
 ScrollViewMode
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.mouseWheelScrollSize">
      <summary>
        <para>
 This property controls the scrolling speed only when using a mouse scroll wheel, based on the size of the page. It takes precedence over the --unity-metrics-single_line-height USS variable.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.nestedInteractionKind">
      <summary>
        <para>
 The behavior to use when scrolling reaches limits of a nested ScrollView.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.scrollDecelerationRate">
      <summary>
        <para>
 Controls the rate at which the scrolling movement slows after a user scrolls using a touch interaction.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.scrollOffset">
      <summary>
        <para>
 The current scrolling position.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.showHorizontal">
      <summary>
        <para>
 Obsolete. Use ScrollView.horizontalScrollerVisibility instead.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.showVertical">
      <summary>
        <para>
 Obsolete. Use ScrollView.verticalScrollerVisibility instead.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.touchScrollBehavior">
      <summary>
        <para>
 The behavior to use when a user tries to scroll past the boundaries of the ScrollView content using a touch interaction.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.verticalHorizontalVariantUssClassName">
      <summary>
        <para>
 USS class name that's added when the ScrollView is in both horizontal and vertical mode.
 ScrollViewMode.VerticalAndHorizontal
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.verticalPageSize">
      <summary>
        <para>
 This property controls the speed of the vertical scrolling when using a keyboard or the on-screen scrollbar buttons (arrows and handle), based on the size of the page.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.verticalScroller">
      <summary>
        <para>
 Vertical Scrollbar.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.ScrollView.verticalScrollerVisibility">
      <summary>
        <para>
 Specifies whether the vertical scroll bar is visible.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.verticalVariantUssClassName">
      <summary>
        <para>
 USS class name that's added when the ScrollView is in vertical mode.
 ScrollViewMode.Vertical
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.viewportUssClassName">
      <summary>
        <para>
 USS class name of viewport elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.vScrollerUssClassName">
      <summary>
        <para>
 USS class name of vertical scrollers in elements of this type.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ScrollView.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ScrollView.#ctor(UnityEngine.UIElements.ScrollViewMode)">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="scrollViewMode"></param>
    </member>
    <member name="T:UnityEngine.UIElements.ScrollView.NestedInteractionKind">
      <summary>
        <para>
 Options for controlling how nested ScrollView handles scrolling when reaching
 the limits of the scrollable area.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.NestedInteractionKind.Default">
      <summary>
        <para>
 Automatically selects the behavior according to the context in which the UI runs. For touch input, typically mobile devices,
 NestedInteractionKind.StopScrolling is used. For scroll wheel input, NestedInteractionKind.ForwardScrolling is used.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.NestedInteractionKind.ForwardScrolling">
      <summary>
        <para>
 Scrolling will continue to the parent when no movement is possible in the scrolled direction.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.NestedInteractionKind.StopScrolling">
      <summary>
        <para>
 Scrolling capture will remain in the scroll view if it initiated the drag.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ScrollView.ScrollTo(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Scroll to a specific child element.
 </para>
      </summary>
      <param name="child">The child to scroll to.</param>
    </member>
    <member name="T:UnityEngine.UIElements.ScrollView.TouchScrollBehavior">
      <summary>
        <para>
 The behavior to use when a user tries to scroll past the end of the ScrollView content using a touch interaction.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.TouchScrollBehavior.Clamped">
      <summary>
        <para>
 The content position is clamped to the ScrollView boundaries.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.TouchScrollBehavior.Elastic">
      <summary>
        <para>
 The content position can overshoot the ScrollView boundaries, but then "snaps" back within them.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollView.TouchScrollBehavior.Unrestricted">
      <summary>
        <para>
 The content position can move past the ScrollView boundaries.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ScrollView.UxmlFactory">
      <summary>
        <para>
 Instantiates a ScrollView using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ScrollView.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the ScrollView.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.ScrollView.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initialize ScrollView properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The object to initialize.</param>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.ScrollViewMode">
      <summary>
        <para>
 Configurations of the ScrollView to influence the layout of its contents and how scrollbars appear.
 ScrollView.mode
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollViewMode.Horizontal">
      <summary>
        <para>
 Configure ScrollView for horizontal scrolling.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollViewMode.Vertical">
      <summary>
        <para>
 Configure ScrollView for vertical scrolling.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.ScrollViewMode.VerticalAndHorizontal">
      <summary>
        <para>
 Configure ScrollView for vertical and horizontal scrolling.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.SelectionType">
      <summary>
        <para>
 Controls how many items can be selected at once.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.SelectionType.Multiple">
      <summary>
        <para>
 Multiple items are selectable at once.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.SelectionType.None">
      <summary>
        <para>
 Selections are disabled.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.SelectionType.Single">
      <summary>
        <para>
 Only one item is selectable.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Slider">
      <summary>
        <para>
 A slider containing floating point values.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Slider.inputUssClassName">
      <summary>
        <para>
 USS class name of input elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Slider.labelUssClassName">
      <summary>
        <para>
 USS class name of labels in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Slider.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Slider.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Slider.#ctor(System.Single,System.Single,UnityEngine.UIElements.SliderDirection,System.Single)">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="start"></param>
      <param name="end"></param>
      <param name="direction"></param>
      <param name="pageSize"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Slider.#ctor(System.String,System.Single,System.Single,UnityEngine.UIElements.SliderDirection,System.Single)">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="label"></param>
      <param name="start"></param>
      <param name="end"></param>
      <param name="direction"></param>
      <param name="pageSize"></param>
    </member>
    <member name="T:UnityEngine.UIElements.Slider.UxmlFactory">
      <summary>
        <para>
 Instantiates a Slider using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Slider.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the Slider.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Slider.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initialize Slider properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The object to initialize.</param>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.SliderDirection">
      <summary>
        <para>
 This is the direction of the Slider and SliderInt.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.SliderDirection.Horizontal">
      <summary>
        <para>
 An horizontal slider is made with a SliderDirection Horizontal.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.SliderDirection.Vertical">
      <summary>
        <para>
 An vertical slider is made with a SliderDirection Vertical.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.SliderInt">
      <summary>
        <para>
 A slider containing Integer discrete values.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.SliderInt.inputUssClassName">
      <summary>
        <para>
 USS class name of input elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.SliderInt.labelUssClassName">
      <summary>
        <para>
 USS class name of labels in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.SliderInt.pageSize">
      <summary>
        <para>
 The value to add or remove to the SliderInt.value when it is clicked.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.SliderInt.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.SliderInt.#ctor">
      <summary>
        <para>
 Constructors for the SliderInt.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.SliderInt.#ctor(System.Int32,System.Int32,UnityEngine.UIElements.SliderDirection,System.Single)">
      <summary>
        <para>
 Constructors for the SliderInt.
 </para>
      </summary>
      <param name="start">This is the low value of the slider.</param>
      <param name="end">This is the high value of the slider.</param>
      <param name="direction">This is the slider direction, horizontal or vertical.</param>
      <param name="pageSize">This is the number of values to change when the slider is clicked.</param>
    </member>
    <member name="M:UnityEngine.UIElements.SliderInt.#ctor(System.String,System.Int32,System.Int32,UnityEngine.UIElements.SliderDirection,System.Single)">
      <summary>
        <para>
 Constructors for the SliderInt.
 </para>
      </summary>
      <param name="start">This is the low value of the slider.</param>
      <param name="end">This is the high value of the slider.</param>
      <param name="direction">This is the slider direction, horizontal or vertical.</param>
      <param name="pageSize">This is the number of values to change when the slider is clicked.</param>
      <param name="label"></param>
    </member>
    <member name="T:UnityEngine.UIElements.SliderInt.UxmlFactory">
      <summary>
        <para>
 Instantiates a SliderInt using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.SliderInt.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the SliderInt.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.SliderInt.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initialize SliderInt properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The object to initialize.</param>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.StyleBackground">
      <summary>
        <para>
 Style value that can be either a Background or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleBackground.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleBackground.value">
      <summary>
        <para>
 The Background value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleBackground.#ctor(UnityEngine.UIElements.Background)">
      <summary>
        <para>
 Creates from either a Background or a StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleBackground.#ctor(UnityEngine.Texture2D)">
      <summary>
        <para>
 Creates from either a Background or a StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleBackground.#ctor(UnityEngine.Sprite)">
      <summary>
        <para>
 Creates from either a Background or a StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleBackground.#ctor(UnityEngine.UIElements.VectorImage)">
      <summary>
        <para>
 Creates from either a Background or a StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleBackground.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates from either a Background or a StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.StyleColor">
      <summary>
        <para>
 Style value that can be either a Color or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleColor.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleColor.value">
      <summary>
        <para>
 The Color value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleColor.#ctor(UnityEngine.Color)">
      <summary>
        <para>
 Creates from either a Color or StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleColor.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates from either a Color or StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.StyleCursor">
      <summary>
        <para>
 Style value that can be either a Cursor or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleCursor.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleCursor.value">
      <summary>
        <para>
 The Cursor value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleCursor.#ctor(UnityEngine.UIElements.Cursor)">
      <summary>
        <para>
 Creates from either a Cursor or StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleCursor.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates from either a Cursor or StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.StyleEnum`1">
      <summary>
        <para>
 Style value that can be either an enum or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleEnum_1.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleEnum_1.value">
      <summary>
        <para>
 The style value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleEnum_1.#ctor(T)">
      <summary>
        <para>
 Creates from either an enum or a StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleEnum_1.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates from either an enum or a StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.StyleFloat">
      <summary>
        <para>
 Style value that can be either a float or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleFloat.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleFloat.value">
      <summary>
        <para>
 The float value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleFloat.#ctor(System.Single)">
      <summary>
        <para>
 Creates from either a float or a StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleFloat.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates from either a float or a StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.StyleFont">
      <summary>
        <para>
 Style value that can be either a Font or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleFont.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleFont.value">
      <summary>
        <para>
 The Font value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleFont.#ctor(UnityEngine.Font)">
      <summary>
        <para>
 Creates from a Font or StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleFont.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates from a Font or StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.StyleFontDefinition">
      <summary>
        <para>
 Style value that can be either a FontDefinition or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleFontDefinition.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleFontDefinition.value">
      <summary>
        <para>
 The actual value of the definition.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleFontDefinition.#ctor(UnityEngine.UIElements.FontDefinition)">
      <summary>
        <para>
 Creates from either a FontDefinition or a StyleKeyword.
 </para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleFontDefinition.#ctor(UnityEngine.TextCore.Text.FontAsset)">
      <summary>
        <para>
 Creates from either a FontDefinition or a StyleKeyword.
 </para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleFontDefinition.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates from either a FontDefinition or a StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.StyleInt">
      <summary>
        <para>
 Style value that can be either an integer or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleInt.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleInt.value">
      <summary>
        <para>
 The integer value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleInt.#ctor(System.Int32)">
      <summary>
        <para>
 Creates from either an integer or StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleInt.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates from either an integer or StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.StyleKeyword">
      <summary>
        <para>
 Keyword that can be used on any style value types.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.StyleKeyword.Auto">
      <summary>
        <para>
 For style properties accepting auto.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.StyleKeyword.Initial">
      <summary>
        <para>
 The initial (or default) value of a style property.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.StyleKeyword.None">
      <summary>
        <para>
 For style properties accepting none.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.StyleKeyword.Null">
      <summary>
        <para>
 Means that an inline style from IStyle has no value or keyword.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.StyleKeyword.Undefined">
      <summary>
        <para>
 Means that there's no keyword defined for that property.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.StyleLength">
      <summary>
        <para>
 Style value that can be either a Length or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleLength.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleLength.value">
      <summary>
        <para>
 The Length value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleLength.#ctor(System.Single)">
      <summary>
        <para>
 Creates from either a Length or a StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleLength.#ctor(UnityEngine.UIElements.Length)">
      <summary>
        <para>
 Creates from either a Length or a StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleLength.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates from either a Length or a StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.StyleList`1">
      <summary>
        <para>
 Style value that can be either a list or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleList_1.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleList_1.value">
      <summary>
        <para>
 The style value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleList_1.#ctor(System.Collections.Generic.List`1&lt;T&gt;)">
      <summary>
        <para>
 Creates from either a list or a StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleList_1.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates from either a list or a StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.StylePropertyName">
      <summary>
        <para>
 Defines the name of a style property.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StylePropertyName.#ctor(System.String)">
      <summary>
        <para>
 Initializes and returns an instance of StylePropertyName from a string.
 </para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="?:UnityEngine.UIElements.StylePropertyName.implop_StylePropertyName(string)(System.String)">
      <summary>
        <para>
 Implicit string operator.
 </para>
      </summary>
      <param name="name">Name of the property you want to create a new StylePropertyName with.</param>
    </member>
    <member name="M:UnityEngine.UIElements.StylePropertyName.IsNullOrEmpty(UnityEngine.UIElements.StylePropertyName)">
      <summary>
        <para>
 Checks if the StylePropertyName is null or empty.
 </para>
      </summary>
      <param name="propertyName">StylePropertyName you want to check.</param>
      <returns>
        <para>True if propertyName is invalid. False otherwise.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.UIElements.StylePropertyName.op_Equal(UnityEngine.UIElements.StylePropertyName,UnityEngine.UIElements.StylePropertyName)">
      <summary>
        <para>
 Determines if the StylePropertyNames are equal.
 </para>
      </summary>
      <param name="lhs">First StylePropertyName.</param>
      <param name="rhs">Second StylePropertyName.</param>
      <returns>
        <para>True if both StylePropertyNames are equal. False otherwise.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.UIElements.StylePropertyName.op_NotEqual(UnityEngine.UIElements.StylePropertyName,UnityEngine.UIElements.StylePropertyName)">
      <summary>
        <para>
 Determines if the StylePropertyNames are not equal.
 </para>
      </summary>
      <param name="lhs">First StylePropertyName.</param>
      <param name="rhs">Second StylePropertyName.</param>
      <returns>
        <para>True if the StylePropertyNames are not equal. False otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.StylePropertyNameCollection">
      <summary>
        <para>
 Collection of StylePropertyName.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StylePropertyNameCollection.Contains(UnityEngine.UIElements.StylePropertyName)">
      <summary>
        <para>
  Determines whether a StylePropertyNameCollection contains the specified element.
 </para>
      </summary>
      <param name="stylePropertyName">The element to locate in the &lt;see cref="StylePropertyNameCollection" /&gt;.</param>
      <returns>
        <para>true if the StylePropertyNameCollection contains the specified element; otherwise, false.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.StylePropertyNameCollection.Enumerator">
      <summary>
        <para>
 Enumerates the elements of a StylePropertyNameCollection.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StylePropertyNameCollection.Enumerator.Current">
      <summary>
        <para>
 Gets the element at the current position of the enumerator.
 </para>
      </summary>
      <returns>
        <para>The element in the StylePropertyNameCollection at the current position of the enumerator.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.StylePropertyNameCollection.Enumerator.Dispose">
      <summary>
        <para>
 Releases all resources used by the StylePropertyNameCollection enumerator.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StylePropertyNameCollection.Enumerator.MoveNext">
      <summary>
        <para>
 Advances the enumerator to the next element of the StylePropertyNameCollection.
 </para>
      </summary>
      <returns>
        <para>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.StylePropertyNameCollection.GetEnumerator">
      <summary>
        <para>
 Returns an enumerator that iterates through the StylePropertyNameCollection.
 </para>
      </summary>
      <returns>
        <para>An enumerator that can be used to iterate through the StylePropertyNameCollection.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.StyleRotate">
      <summary>
        <para>
 Represents a style value that can be either a Rotate or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleRotate.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleRotate.value">
      <summary>
        <para>
 The Rotate value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleRotate.#ctor(UnityEngine.UIElements.Rotate)">
      <summary>
        <para>
 Creates a StyleRotate from either a Rotate or a StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleRotate.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates a StyleRotate from either a Rotate or a StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.StyleScale">
      <summary>
        <para>
 Style value that can be either a Scale or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleScale.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleScale.value">
      <summary>
        <para>
 The Scale value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleScale.#ctor(UnityEngine.UIElements.Scale)">
      <summary>
        <para>
 Creates a new StyleScale from either a Scale or a StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleScale.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates a new StyleScale from either a Scale or a StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.StyleSheet">
      <summary>
        <para>
 Style sheets are applied to visual elements in order to control the layout and visual appearance of the user interface.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleSheet.contentHash">
      <summary>
        <para>
 A hash value computed from the stylesheet content.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleSheet.importedWithErrors">
      <summary>
        <para>
 Whether there were errors encountered while importing the StyleSheet
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleSheet.importedWithWarnings">
      <summary>
        <para>
 Whether there were warnings encountered while importing the StyleSheet
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.StyleTextShadow">
      <summary>
        <para>
 Style value that can be either a TextShadow or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleTextShadow.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleTextShadow.value">
      <summary>
        <para>
 The TextShadow value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleTextShadow.#ctor(UnityEngine.UIElements.TextShadow)">
      <summary>
        <para>
 Creates from either a TextShadow or StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleTextShadow.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates from either a TextShadow or StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.StyleTransformOrigin">
      <summary>
        <para>
 Represents a style value that can be either a TransformOrigin or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleTransformOrigin.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleTransformOrigin.value">
      <summary>
        <para>
 The TransformOrigin value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleTransformOrigin.#ctor(UnityEngine.UIElements.TransformOrigin)">
      <summary>
        <para>
 Creates a new StyleTransformOrigin from either a TransformOrigin or a StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleTransformOrigin.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates  a new StyleTransformOrigin from either a TransformOrigin or a StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.StyleTranslate">
      <summary>
        <para>
 Style value that can be either a Translate or a StyleKeyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleTranslate.keyword">
      <summary>
        <para>
 The style keyword.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.StyleTranslate.value">
      <summary>
        <para>
 The Translate value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.StyleTranslate.#ctor(UnityEngine.UIElements.Translate)">
      <summary>
        <para>
 Creates from either a Translate or a StyleKeyword.
 </para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UIElements.StyleTranslate.#ctor(UnityEngine.UIElements.StyleKeyword)">
      <summary>
        <para>
 Creates from either a Translate or a StyleKeyword.
 </para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="T:UnityEngine.UIElements.TemplateContainer">
      <summary>
        <para>
 Represents the root VisualElement of UXML file.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TemplateContainer.templateId">
      <summary>
        <para>
 The local ID of the template in the parent UXML file (Read Only).
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TemplateContainer.templateSource">
      <summary>
        <para>
 Stores the template asset reference, if the generated element is cloned from a VisualTreeAsset as a
 Template declaration inside another VisualTreeAsset.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TemplateContainer.UxmlFactory">
      <summary>
        <para>
 Instantiates and clones a TemplateContainer using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TemplateContainer.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the TemplateContainer.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TemplateContainer.UxmlTraits.uxmlChildElementsDescription">
      <summary>
        <para>
 Returns an empty enumerable, as template instances do not have children.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TemplateContainer.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initialize TemplateContainer properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The object to initialize.</param>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.TextElement">
      <summary>
        <para>
 Use this as the super class if you are declaring a custom VisualElement that displays text. For example, Button or Label use this as their base class.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextElement.displayTooltipWhenElided">
      <summary>
        <para>
 When true, a tooltip displays the full version of elided text, and also if a tooltip had been previously
 provided, it will be overwritten.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextElement.enableRichText">
      <summary>
        <para>
 When false, rich text tags will not be parsed.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextElement.isElided">
      <summary>
        <para>
 Returns true if text is elided, false otherwise.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextElement.text">
      <summary>
        <para>
 The text to be displayed.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextElement.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TextElement.#ctor">
      <summary>
        <para>
 Initializes and returns an instance of TextElement.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TextElement.MeasureTextSize(System.String,System.Single,UnityEngine.UIElements.VisualElement/MeasureMode,System.Single,UnityEngine.UIElements.VisualElement/MeasureMode)">
      <summary>
        <para>
 Computes the size needed to display a text string based on element style values such as font, font-size, word-wrap, and so on.
 </para>
      </summary>
      <param name="textToMeasure">The text to measure.</param>
      <param name="width">Suggested width. Can be zero.</param>
      <param name="widthMode">Width restrictions.</param>
      <param name="height">Suggested height.</param>
      <param name="heightMode">Height restrictions.</param>
      <returns>
        <para>The horizontal and vertical size needed to display the text string.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.TextElement.UxmlFactory">
      <summary>
        <para>
 Instantiates a TextElement using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TextElement.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the TextElement.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextElement.UxmlTraits.uxmlChildElementsDescription">
      <summary>
        <para>
 Enumerator to get the child elements of the UxmlTraits of TextElement.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TextElement.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initializer for the UxmlTraits for the TextElement.
 </para>
      </summary>
      <param name="ve">&lt;see cref="VisualElement" /&gt; to initialize.</param>
      <param name="bag">Bag of attributes where to get the value from.</param>
      <param name="cc">Creation Context, not used.</param>
    </member>
    <member name="T:UnityEngine.UIElements.TextField">
      <summary>
        <para>
 A textfield is a rectangular area where the user can edit a string.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextField.inputUssClassName">
      <summary>
        <para>
 USS class name of input elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextField.labelUssClassName">
      <summary>
        <para>
 USS class name of labels in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextField.multiline">
      <summary>
        <para>
 Set this to true to allow multiple lines in the textfield and false if otherwise.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextField.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextField.value">
      <summary>
        <para>
 The string currently being exposed by the field.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TextField.#ctor">
      <summary>
        <para>
 Creates a new textfield.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TextField.#ctor(System.Int32,System.Boolean,System.Boolean,System.Char)">
      <summary>
        <para>
 Creates a new textfield.
 </para>
      </summary>
      <param name="maxLength">The maximum number of characters this textfield can hold. If 0, there is no limit.</param>
      <param name="multiline">Set this to true to allow multiple lines in the textfield and false if otherwise.</param>
      <param name="isPasswordField">Set this to true to mask the characters and false if otherwise.</param>
      <param name="maskChar">The character used for masking in a password field.</param>
    </member>
    <member name="M:UnityEngine.UIElements.TextField.#ctor(System.String)">
      <summary>
        <para>
 Creates a new textfield.
 </para>
      </summary>
      <param name="label"></param>
    </member>
    <member name="M:UnityEngine.UIElements.TextField.#ctor(System.String,System.Int32,System.Boolean,System.Boolean,System.Char)">
      <summary>
        <para>
 Creates a new textfield.
 </para>
      </summary>
      <param name="maxLength">The maximum number of characters this textfield can hold. If 0, there is no limit.</param>
      <param name="multiline">Set this to true to allow multiple lines in the textfield and false if otherwise.</param>
      <param name="isPasswordField">Set this to true to mask the characters and false if otherwise.</param>
      <param name="maskChar">The character used for masking in a password field.</param>
      <param name="label"></param>
    </member>
    <member name="M:UnityEngine.UIElements.TextField.SelectRange(System.Int32,System.Int32)">
      <summary>
        <para>
 Selects text in the textfield between cursorIndex and selectionIndex.
 </para>
      </summary>
      <param name="selectionIndex">The selection end position.</param>
      <param name="rangeCursorIndex"></param>
    </member>
    <member name="T:UnityEngine.UIElements.TextField.UxmlFactory">
      <summary>
        <para>
 Instantiates a TextField using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TextField.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the TextField.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TextField.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initialize TextField properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The object to initialize.</param>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.TextInputBaseField`1">
      <summary>
        <para>
 Abstract base class used for all text-based fields.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextInputBaseField_1.cursorColor">
      <summary>
        <para>
 Color of the cursor.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextInputBaseField_1.cursorIndex">
      <summary>
        <para>
 The current cursor position index in the text input field.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextInputBaseField_1.doubleClickSelectsWord">
      <summary>
        <para>
 Controls whether double clicking selects the word under the mouse pointer or not.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextInputBaseField_1.inputUssClassName">
      <summary>
        <para>
 USS class name of input elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextInputBaseField_1.isDelayed">
      <summary>
        <para>
 If set to true, the value property isn't updated until either the user presses Enter or the text field loses focus.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextInputBaseField_1.isPasswordField">
      <summary>
        <para>
 Returns true if the field is used to edit a password.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextInputBaseField_1.isReadOnly">
      <summary>
        <para>
 Returns true if the field is read only.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextInputBaseField_1.labelUssClassName">
      <summary>
        <para>
 USS class name of labels in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextInputBaseField_1.maskChar">
      <summary>
        <para>
 The character used for masking in a password field.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextInputBaseField_1.maxLength">
      <summary>
        <para>
 Maximum number of characters for the field.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextInputBaseField_1.multilineInputUssClassName">
      <summary>
        <para>
 USS class name of multiline input elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="?:UnityEngine.UIElements.TextInputBaseField_1.onIsReadOnlyChanged(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>
 Calls the methods in its invocation list when isReadOnly changes.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.UIElements.TextInputBaseField_1.selectIndex">
      <summary>
        <para>
 The current selection position index in the text input field.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextInputBaseField_1.selectionColor">
      <summary>
        <para>
 Background color of selected text.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextInputBaseField_1.singleLineInputUssClassName">
      <summary>
        <para>
 USS class name of single line input elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextInputBaseField_1.text">
      <summary>
        <para>
 The value of the input field.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextInputBaseField_1.textInputUssName">
      <summary>
        <para>
 USS class name of input elements in elements of this type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TextInputBaseField_1.tripleClickSelectsLine">
      <summary>
        <para>
 Controls whether triple clicking selects the entire line under the mouse pointer or not.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextInputBaseField_1.ussClassName">
      <summary>
        <para>
 USS class name of elements of this type.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TextInputBaseField_1.MeasureTextSize(System.String,System.Single,UnityEngine.UIElements.VisualElement/MeasureMode,System.Single,UnityEngine.UIElements.VisualElement/MeasureMode)">
      <summary>
        <para>
 Computes the size needed to display a text string based on element style values such as font, font-size, and word-wrap.
 </para>
      </summary>
      <param name="textToMeasure">The text to measure.</param>
      <param name="width">Suggested width. Can be zero.</param>
      <param name="widthMode">Width restrictions.</param>
      <param name="height">Suggested height.</param>
      <param name="heightMode">Height restrictions.</param>
      <returns>
        <para>The horizontal and vertical size needed to display the text string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.TextInputBaseField_1.SelectAll">
      <summary>
        <para>
 Selects all the text.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TextInputBaseField_1.StringToValue(System.String)">
      <summary>
        <para>
 Converts a string to the value of the specified generic type from the subclass.
 </para>
      </summary>
      <param name="str">The string to convert.</param>
      <returns>
        <para>A value converted from the string.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.TextInputBaseField`1.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for TextInputFieldBase.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TextInputBaseField_1.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initialize the traits for this field.
 </para>
      </summary>
      <param name="ve">VisualElement to which to apply the attributes.</param>
      <param name="bag">Bag of attributes where to get the attributes.</param>
      <param name="cc">Creation context.</param>
    </member>
    <member name="M:UnityEngine.UIElements.TextInputBaseField_1.ValueToString(TValueType)">
      <summary>
        <para>
 Converts a value of the specified generic type from the subclass to a string representation.
 </para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representing the value.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.TextOverflow">
      <summary>
        <para>
 Specifies how the text Element treats hidden overflow content.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextOverflow.Clip">
      <summary>
        <para>
 The Element clips overflow content and hides it. This is the default value.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextOverflow.Ellipsis">
      <summary>
        <para>
 The Element clips overflow content and hides it, but displays an ellipsis ("...") to indicate that clipped content exists.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TextOverflowPosition">
      <summary>
        <para>
 Specifies which part of the text the Element replaces with an ellipsis when textOverflow is set to TextOverflow.Ellipsis.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextOverflowPosition.End">
      <summary>
        <para>
 The ellipsis replaces content at the end of the text. This is the default value.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextOverflowPosition.Middle">
      <summary>
        <para>
 The ellipsis replaces content in the middle of the text.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextOverflowPosition.Start">
      <summary>
        <para>
 The ellipsis replaces content at the beginning of the text.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TextShadow">
      <summary>
        <para>
 Script interface for VisualElement text-shadow style property IStyle.textShadow.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextShadow.blurRadius">
      <summary>
        <para>
 The blur radius of the shadow.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextShadow.color">
      <summary>
        <para>
 The color of the shadow.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TextShadow.offset">
      <summary>
        <para>
 The offset of the shadow.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.ThemeStyleSheet">
      <summary>
        <para>
 Represents a style sheet that's assembled from other style sheets.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TimerState">
      <summary>
        <para>
 Contains timing information of scheduler events.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TimerState.deltaTime">
      <summary>
        <para>
 Time difference in milliseconds between now and the previous callback.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TimerState.now">
      <summary>
        <para>
 Current time in milliseconds.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TimerState.start">
      <summary>
        <para>
 Start time in milliseconds, or last callback time for repeatable IScheduledItem.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TimerState.Equals(System.Object)">
      <summary>
        <para>
 Compare this object with another object and return true if they are equal.
 </para>
      </summary>
      <param name="obj">The object to compare with.</param>
      <returns>
        <para>True if the objects are equal.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.TimerState.Equals(UnityEngine.UIElements.TimerState)">
      <summary>
        <para>
 Compare this object with another object and return true if they are equal.
 </para>
      </summary>
      <param name="other">The object to compare with.</param>
      <returns>
        <para>True if the objects are equal.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.TimeUnit">
      <summary>
        <para>
 Describes how to interpret a TimeValue.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TimeUnit.Millisecond">
      <summary>
        <para>
 Interprets the time value as milliseconds.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TimeUnit.Second">
      <summary>
        <para>
 Interprets the time value as seconds.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TimeValue">
      <summary>
        <para>
 Represents a time value.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TimeValue.unit">
      <summary>
        <para>
 The unit of the value property.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TimeValue.value">
      <summary>
        <para>
 The time value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TimeValue.#ctor(System.Single)">
      <summary>
        <para>
 Creates from a float and an optional TimeUnit.
 </para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.UIElements.TimeValue.#ctor(System.Single,UnityEngine.UIElements.TimeUnit)">
      <summary>
        <para>
 Creates from a float and an optional TimeUnit.
 </para>
      </summary>
      <param name="value"></param>
      <param name="unit"></param>
    </member>
    <member name="T:UnityEngine.UIElements.Toggle">
      <summary>
        <para>
 A Toggle is a clickable element that represents a boolean value.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Toggle.checkmarkUssClassName">
      <summary>
        <para>
 USS class name of Images in Toggle elements.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Toggle.inputUssClassName">
      <summary>
        <para>
 USS class name of input elements in Toggle elements.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Toggle.labelUssClassName">
      <summary>
        <para>
 USS class name for Labels in Toggle elements.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Toggle.noTextVariantUssClassName">
      <summary>
        <para>
 USS class name of Toggle elements that have no text.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Toggle.textUssClassName">
      <summary>
        <para>
 USS class name of Text elements in Toggle elements.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Toggle.ussClassName">
      <summary>
        <para>
 USS class name for Toggle elements.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Toggle.#ctor">
      <summary>
        <para>
 Creates a Toggle with no label.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Toggle.#ctor(System.String)">
      <summary>
        <para>
 Creates a Toggle with a Label and a default manipulator.
 </para>
      </summary>
      <param name="label">The Label text.</param>
    </member>
    <member name="T:UnityEngine.UIElements.Toggle.UxmlFactory">
      <summary>
        <para>
 Instantiates a Toggle using data from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Toggle.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the Toggle.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Toggle.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initializes Toggle properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The object to initialize.</param>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.TooltipEvent">
      <summary>
        <para>
 Event sent to find the first VisualElement that displays a tooltip.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TooltipEvent.rect">
      <summary>
        <para>
 Rectangle of the hovered VisualElement in the panel coordinate system.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TooltipEvent.tooltip">
      <summary>
        <para>
 Text to display inside the tooltip box.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TooltipEvent.#ctor">
      <summary>
        <para>
 Initializes and returns an instance of TooltipEvent.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TooltipEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TransformOrigin">
      <summary>
        <para>
 Represents the point of origin where the (Scale, Translate, Rotate) transformations are applied.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TransformOrigin.#ctor(UnityEngine.UIElements.Length,UnityEngine.UIElements.Length,System.Single)">
      <summary>
        <para></para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
    </member>
    <member name="M:UnityEngine.UIElements.TransformOrigin.#ctor(UnityEngine.UIElements.Length,UnityEngine.UIElements.Length)">
      <summary>
        <para>
 Create a TransformOrigin data with two Lengths for the x and y axis.
 </para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.UIElements.TransformOrigin.Initial">
      <summary>
        <para>
 Returns the initial value for the TransformOrigin property.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TransformOriginOffset">
      <summary>
        <para>
 Specifies the alignment keywords for TransformOrigin.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TransformOriginOffset.Bottom">
      <summary>
        <para>
 The origin of the transform operation set to the bottom of the element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TransformOriginOffset.Center">
      <summary>
        <para>
 The origin of the transform operation is set to the center of the element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TransformOriginOffset.Left">
      <summary>
        <para>
 The origin of the transform operation is set to the left of the element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TransformOriginOffset.Right">
      <summary>
        <para>
 The origin of the transform operation is set to the right of the element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TransformOriginOffset.Top">
      <summary>
        <para>
 The origin of the transform operation is set to the top of the element.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TransitionCancelEvent">
      <summary>
        <para>
 Event sent when a transition is canceled.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TransitionEndEvent">
      <summary>
        <para>
 Event sent at the completion of the transition. In the case where a transition is removed before completion then the event will not fire.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TransitionEventBase`1">
      <summary>
        <para>
 Transition events abstract base class.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TransitionEventBase_1.elapsedTime">
      <summary>
        <para>
 The number of seconds the transition has been running, excluding delay phase time.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TransitionEventBase_1.stylePropertyNames">
      <summary>
        <para>
 The names of the properties associated with the transition.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TransitionEventBase_1.AffectsProperty(UnityEngine.UIElements.StylePropertyName)">
      <summary>
        <para>
  Determines whether the ITransitionEvent affects the specified property.
 </para>
      </summary>
      <param name="stylePropertyName">The property to check against.</param>
      <returns>
        <para>true if the ITransitionEvent affects the specified property; otherwise, false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.TransitionEventBase_1.GetPooled(UnityEngine.UIElements.StylePropertyName,System.Double)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values.
 Use this function instead of creating new events.
 Events obtained from this method should be released back to the pool using Dispose().
 </para>
      </summary>
      <param name="stylePropertyName">The name of the style property.</param>
      <param name="elapsedTime">The elapsed time.</param>
      <returns>
        <para>An initialized transition event.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.TransitionRunEvent">
      <summary>
        <para>
 Event sent when a transition is created (i.e. added to the set of running transitions).
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TransitionStartEvent">
      <summary>
        <para>
 Event sent when a transition's delay phase ends.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Translate">
      <summary>
        <para>
 Represents a translation of the object. Percentage values in X and Y are relative to the width and height of the visual element where the style value is applied.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.Translate.#ctor(UnityEngine.UIElements.Length,UnityEngine.UIElements.Length,System.Single)">
      <summary>
        <para></para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Translate.#ctor(UnityEngine.UIElements.Length,UnityEngine.UIElements.Length)">
      <summary>
        <para>
 Create a Translate data with two Lengths for the x and y axis.
 </para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.UIElements.Translate.None">
      <summary>
        <para>
 Returns the value of a Translate object with no translation applied.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TreeViewItemData`1">
      <summary>
        <para>
 Item structure provided to a TreeView using the default implementation.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TreeViewItemData_1.children">
      <summary>
        <para>
 Children of this tree item.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TreeViewItemData_1.data">
      <summary>
        <para>
 Data for this item.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TreeViewItemData_1.hasChildren">
      <summary>
        <para>
 Whether this item has children or not.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TreeViewItemData_1.id">
      <summary>
        <para>
 Id of the item.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TreeViewItemData_1.#ctor(System.Int32,T,System.Collections.Generic.List`1&lt;UnityEngine.UIElements.TreeViewItemData`1&lt;T&gt;&gt;)">
      <summary>
        <para>
 Creates a TreeViewItemData_1 with all required parameters.
 </para>
      </summary>
      <param name="id">The item id.</param>
      <param name="data">The item data.</param>
      <param name="children">The item's children.</param>
    </member>
    <member name="T:UnityEngine.UIElements.TrickleDown">
      <summary>
        <para>
 Use this enum to specify during which phases the event handler is executed.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TrickleDown.NoTrickleDown">
      <summary>
        <para>
 The event handler should be executed during the AtTarget and BubbleUp phases.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TrickleDown.TrickleDown">
      <summary>
        <para>
 The event handler should be executed during the AtTarget and TrickleDown phases.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TwoPaneSplitView">
      <summary>
        <para>
 A SplitView that contains two resizable panes. One pane is fixed-size while the other pane has flex-grow style set to 1 to take all remaining space. The border between he panes is draggable to resize both panes. Both horizontal and vertical modes are supported. Requires _exactly_ two child elements to operate.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TwoPaneSplitView.fixedPane">
      <summary>
        <para>
 The child element that is set as the fixed size pane.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TwoPaneSplitView.fixedPaneIndex">
      <summary>
        <para>
 0 for setting first child as the fixed pane, 1 for the second child element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TwoPaneSplitView.fixedPaneInitialDimension">
      <summary>
        <para>
 The initial width or height for the fixed pane.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TwoPaneSplitView.flexedPane">
      <summary>
        <para>
 The child element that is set as the flexable size pane.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TwoPaneSplitView.orientation">
      <summary>
        <para>
 Orientation of the split view.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TwoPaneSplitView.CollapseChild(System.Int32)">
      <summary>
        <para>
 Collapse one of the panes of the split view. This will hide the resizer and make the other child take up all available space.
 </para>
      </summary>
      <param name="index">Index of child to collapse.</param>
    </member>
    <member name="M:UnityEngine.UIElements.TwoPaneSplitView.#ctor(System.Int32,System.Single,UnityEngine.UIElements.TwoPaneSplitViewOrientation)">
      <summary>
        <para>
 Parameterized constructor.
 </para>
      </summary>
      <param name="fixedPaneIndex">0 for setting first child as the fixed pane, 1 for the second child element.</param>
      <param name="fixedPaneStartDimension">Set an inital width or height for the fixed pane.</param>
      <param name="orientation">Orientation of the split view.</param>
    </member>
    <member name="M:UnityEngine.UIElements.TwoPaneSplitView.UnCollapse">
      <summary>
        <para>
 Un-collapse the split view. This will restore the split view to the state it was before the previous collapse.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TwoPaneSplitView.UxmlFactory">
      <summary>
        <para>
 Instantiates a TwoPaneSplitView using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TwoPaneSplitView.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the TwoPaneSplitView.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TwoPaneSplitViewOrientation">
      <summary>
        <para>
 Determines the orientation of the two resizable panes.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TwoPaneSplitViewOrientation.Horizontal">
      <summary>
        <para>
 Split view panes layout is left/right with vertical resizable split.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.TwoPaneSplitViewOrientation.Vertical">
      <summary>
        <para>
 Split view panes layout is top/bottom with horizontal resizable split.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.TypedUxmlAttributeDescription`1">
      <summary>
        <para>
 Base class for all the uxml specific attributes.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TypedUxmlAttributeDescription_1.defaultValue">
      <summary>
        <para>
 The default value to be used for that specific attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.TypedUxmlAttributeDescription_1.defaultValueAsString">
      <summary>
        <para>
 The string representation of the default value of the uxml attribute.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.TypedUxmlAttributeDescription_1.GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Use this method to obtain the actual value of the attribute.
 </para>
      </summary>
      <param name="bag">The bag of attributes where to get the actual value.</param>
      <param name="cc">The creation context.</param>
      <returns>
        <para>The value of type T.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UIDocument">
      <summary>
        <para>
 Defines a Component that connects VisualElements to GameObjects. This makes it
 possible to render UI defined in UXML documents in the Game view.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UIDocument.panelSettings">
      <summary>
        <para>
 Specifies the PanelSettings instance to connect this UIDocument component to.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UIDocument.parentUI">
      <summary>
        <para>
 If the GameObject that this UIDocument component is attached to has a parent GameObject, and
 that parent GameObject also has a UIDocument component attached to it, this value is set to
 the parent GameObject's UIDocument component automatically.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UIDocument.rootVisualElement">
      <summary>
        <para>
 The root visual element where the UI hierarchy starts.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UIDocument.sortingOrder">
      <summary>
        <para>
 The order in which this UIDocument will show up on the hierarchy in relation to other UIDocuments either
 attached to the same PanelSettings, or with the same UIDocument parent.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UIDocument.visualTreeAsset">
      <summary>
        <para>
 The VisualTreeAsset loaded into the root visual element automatically.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.UQuery">
      <summary>
        <para>
 UQuery is a set of extension methods allowing you to select individual or collection of visualElements inside a complex hierarchy.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.UQueryBuilder`1">
      <summary>
        <para>
 Utility Object that contructs a set of selection rules to be ran on a root visual element.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Active">
      <summary>
        <para>
 Selects all elements that are active.
 </para>
      </summary>
      <returns>
        <para>A QueryBuilder with the selection rules.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.AtIndex(System.Int32)">
      <summary>
        <para>
 Convenience overload, shorthand for Build().AtIndex().
 </para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Build">
      <summary>
        <para>
 Compiles the selection rules into a QueryState object.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Checked">
      <summary>
        <para>
 Selects all elements that are checked.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Children(System.String,System.String[])">
      <summary>
        <para>
 Selects all direct child elements of elements matching the previous rules.
 </para>
      </summary>
      <param name="name"></param>
      <param name="classes"></param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Children(System.String,System.String)">
      <summary>
        <para>
 Selects all direct child elements of elements matching the previous rules.
 </para>
      </summary>
      <param name="name"></param>
      <param name="className"></param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Class(System.String)">
      <summary>
        <para>
 Selects all elements with the specified class in the class list, as specified with the class attribute in a UXML file or added with VisualElement.AddToClassList(string) method.
 </para>
      </summary>
      <param name="classname">The class to use in the query.</param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.#ctor(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Initializes a QueryBuilder.
 </para>
      </summary>
      <param name="visualElement">The root element on which to conduct the search query.</param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Descendents(System.String,System.String[])">
      <summary>
        <para>
 Selects all elements that are descendants of currently matching ancestors.
 </para>
      </summary>
      <param name="name"></param>
      <param name="classNames"></param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Descendents(System.String,System.String)">
      <summary>
        <para>
 Selects all elements that are descendants of currently matching ancestors.
 </para>
      </summary>
      <param name="name"></param>
      <param name="classname"></param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Enabled">
      <summary>
        <para>
 Selects all elements that are enabled.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.First">
      <summary>
        <para>
 Convenience overload, shorthand for Build().First().
 </para>
      </summary>
      <returns>
        <para>The first element matching all the criteria, or null if none was found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Focused">
      <summary>
        <para>
 Selects all elements that are focused.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.ForEach(System.Collections.Generic.List`1&lt;T2&gt;,System.Func`2&lt;T,T2&gt;)">
      <summary>
        <para>
 Convenience overload, shorthand for Build().ForEach().
 </para>
      </summary>
      <param name="result">Each return value will be added to this list.</param>
      <param name="funcCall">The function to be invoked with each matching element.</param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.ForEach(System.Func`2&lt;T,T2&gt;)">
      <summary>
        <para>
 Convenience overload, shorthand for Build().ForEach().
 </para>
      </summary>
      <param name="funcCall">The function to be invoked with each matching element.</param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.ForEach(System.Action`1&lt;T&gt;)">
      <summary>
        <para>
 Convenience overload, shorthand for Build().ForEach().
 </para>
      </summary>
      <param name="funcCall">The function to be invoked with each matching element.</param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Hovered">
      <summary>
        <para>
 Selects all elements that are hovered.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Last">
      <summary>
        <para>
 Convenience overload, shorthand for Build().Last().
 </para>
      </summary>
      <returns>
        <para>The last element matching all the criteria, or null if none was found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Name(System.String)">
      <summary>
        <para>
 Selects element with this name.
 </para>
      </summary>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.NotActive">
      <summary>
        <para>
 Selects all elements that are not active.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.NotChecked">
      <summary>
        <para>
 Selects all elements that not checked.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.NotEnabled">
      <summary>
        <para>
 Selects all elements that are not enabled.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.NotFocused">
      <summary>
        <para>
 Selects all elements that don't currently own the focus.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.NotHovered">
      <summary>
        <para>
 Selects all elements that are not hovered.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.NotSelected">
      <summary>
        <para>
 Selects all elements that are not selected.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.NotVisible">
      <summary>
        <para>
 Selects all elements that are not visible.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.OfType(System.String,System.String[])">
      <summary>
        <para>
 Selects all elements of the specified Type (eg: Label, Button, ScrollView, etc).
 </para>
      </summary>
      <param name="name">If specified, will select elements with this name.</param>
      <param name="classes">If specified, will select elements with the given class (not to be confused with Type).</param>
      <returns>
        <para>QueryBuilder configured with the associated selection rules.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.OfType(System.String,System.String)">
      <summary>
        <para>
 Selects all elements of the specified Type (eg: Label, Button, ScrollView, etc).
 </para>
      </summary>
      <param name="name">If specified, will select elements with this name.</param>
      <param name="className">If specified, will select elements with the given class (not to be confused with Type).</param>
      <returns>
        <para>QueryBuilder configured with the associated selection rules.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Selected">
      <summary>
        <para>
 Selects all elements that are not selected.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.ToList">
      <summary>
        <para>
 Convenience method. shorthand for Build().ToList.
 </para>
      </summary>
      <returns>
        <para>A list containing elements satisfying selection rules.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.ToList(System.Collections.Generic.List`1&lt;T&gt;)">
      <summary>
        <para>
 Convenience method. Shorthand gor Build().ToList().
 </para>
      </summary>
      <param name="results">Adds all elements satisfying selection rules to the list.</param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Visible">
      <summary>
        <para>
 Selects all elements that are visible.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryBuilder_1.Where(System.Func`2&lt;T,System.Boolean&gt;)">
      <summary>
        <para>
 Selects all elements satifying the predicate.
 </para>
      </summary>
      <param name="selectorPredicate">Predicate that must return true for selected elements.</param>
      <returns>
        <para>QueryBuilder configured with the associated selection rules.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UQueryExtensions">
      <summary>
        <para>
 UQuery is a set of extension methods allowing you to select individual or collection of visualElements inside a complex hierarchy.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryExtensions.Q(UnityEngine.UIElements.VisualElement,System.String,System.String[])">
      <summary>
        <para>
 Convenience overload, shorthand for Query&amp;lt;T&amp;gt;.Build().First().
 </para>
      </summary>
      <param name="e">Root VisualElement on which the selector will be applied.</param>
      <param name="name">If specified, will select elements with this name.</param>
      <param name="classes">If specified, will select elements with the given class (not to be confused with Type).</param>
      <returns>
        <para>The first element matching all the criteria, or null if none was found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryExtensions.Q(UnityEngine.UIElements.VisualElement,System.String,System.String)">
      <summary>
        <para>
 Convenience overload, shorthand for Query&amp;lt;T&amp;gt;.Build().First().
 </para>
      </summary>
      <param name="e">Root VisualElement on which the selector will be applied.</param>
      <param name="name">If specified, will select elements with this name.</param>
      <param name="className">If specified, will select elements with the given class (not to be confused with Type).</param>
      <returns>
        <para>The first element matching all the criteria, or null if none was found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryExtensions.Query(UnityEngine.UIElements.VisualElement,System.String,System.String[])">
      <summary>
        <para>
 Initializes a QueryBuilder with the specified selection rules.
 </para>
      </summary>
      <param name="e">Root VisualElement on which the selector will be applied.</param>
      <param name="name">If specified, will select elements with this name.</param>
      <param name="classes">If specified, will select elements with the given class (not to be confused with Type).</param>
      <returns>
        <para>QueryBuilder configured with the associated selection rules.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryExtensions.Query(UnityEngine.UIElements.VisualElement,System.String,System.String)">
      <summary>
        <para>
 Initializes a QueryBuilder with the specified selection rules.
 </para>
      </summary>
      <param name="e">Root VisualElement on which the selector will be applied.</param>
      <param name="name">If specified, will select elements with this name.</param>
      <param name="className">If specified, will select elements with the given class (not to be confused with Type).</param>
      <returns>
        <para>QueryBuilder configured with the associated selection rules.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryExtensions.Query(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Initializes a QueryBuilder with the specified selection rules.
 </para>
      </summary>
      <param name="e">Root VisualElement on which the selector will be applied.</param>
      <returns>
        <para>QueryBuilder configured with the associated selection rules.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UQueryState`1">
      <summary>
        <para>
 Query object containing all the selection rules. The object can be saved and rerun later without re-allocating memory.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryState_1.AtIndex(System.Int32)">
      <summary>
        <para>
 Selects the nth element matching all the criteria, or null if not enough elements were found.
 </para>
      </summary>
      <param name="index">The index of the matched element.</param>
      <returns>
        <para>The match element at the specified index.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryState_1.First">
      <summary>
        <para>
 The first element matching all the criteria, or null if none was found.
 </para>
      </summary>
      <returns>
        <para>The first element matching all the criteria, or null if none was found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryState_1.ForEach(System.Action`1&lt;T&gt;)">
      <summary>
        <para>
 Invokes function on all elements matching the query.
 </para>
      </summary>
      <param name="funcCall">The action to be invoked with each matching element.</param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryState_1.ForEach(System.Collections.Generic.List`1&lt;T2&gt;,System.Func`2&lt;T,T2&gt;)">
      <summary>
        <para>
 Invokes function on all elements matching the query.
 </para>
      </summary>
      <param name="result">Each return value will be added to this list.</param>
      <param name="funcCall">The function to be invoked with each matching element.</param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryState_1.ForEach(System.Func`2&lt;T,T2&gt;)">
      <summary>
        <para>
 Invokes function on all elements matching the query.
 </para>
      </summary>
      <param name="funcCall">The action to be invoked with each matching element.</param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryState_1.GetEnumerator">
      <summary>
        <para>
 Allows traversing the results of the query with foreach without creating GC allocations.
 </para>
      </summary>
      <returns>
        <para>A UQueryState{T}.Enumerator instance configured to traverse the results.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryState_1.Last">
      <summary>
        <para>
 The last element matching all the criteria, or null if none was found.
 </para>
      </summary>
      <returns>
        <para>The last element matching all the criteria, or null if none was found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryState_1.RebuildOn(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Creates a new QueryState with the same selection rules, applied on another VisualElement.
 </para>
      </summary>
      <param name="element">The element on which to apply the selection rules.</param>
      <returns>
        <para>A new QueryState with the same selection rules, applied on this element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryState_1.ToList(System.Collections.Generic.List`1&lt;T&gt;)">
      <summary>
        <para>
 Adds all elements satisfying selection rules to the list.
 </para>
      </summary>
      <param name="results">Adds all elements satisfying selection rules to the list.</param>
    </member>
    <member name="M:UnityEngine.UIElements.UQueryState_1.ToList">
      <summary>
        <para>
 Returns a list containing elements satisfying selection rules.
 </para>
      </summary>
      <returns>
        <para>A list containing elements satisfying selection rules.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UsageHints">
      <summary>
        <para>
 Offers a set of values that describe the intended usage patterns of a specific VisualElement.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.UsageHints.DynamicColor">
      <summary>
        <para>
 Marks a VisualElement that changes its color often (background-color, border-color, etc.).
 This will store the element's colors in an optimized storage suitable for frequent changes, such as animation.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.UsageHints.DynamicTransform">
      <summary>
        <para>
 Marks a VisualElement that changes its transformation often (i.e. position, rotation or scale).
 When specified, this flag hints the system to optimize rendering of the VisualElement for recurring transformation changes. The VisualElement's vertex transformation will be done by the GPU when possible on the target platform.
 Please note that the number of VisualElements to which this hint effectively applies can be limited by target platform capabilities. For such platforms, it is recommended to prioritize use of this hint to only the VisualElements with the highest frequency of transformation changes.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.UsageHints.GroupTransform">
      <summary>
        <para>
 Marks a VisualElement that hosts many children with DynamicTransform applied on them.
 A common use-case of this hint is a VisualElement that represents a "viewport" within which there are many DynamicTransform VisualElements that can move individually in addition to the "viewport" element also often changing its transformation. However, if the contents of the aforementioned "viewport" element are mostly static (not moving) then it is enough to use the DynamicTransform hint on that element instead of GroupTransform.
 Internally, an element hinted with GroupTransform will force a separate draw batch with its world transformation value, but in the same time it will avoid changing the transforms of all its descendants whenever a transformation change occurs on the GroupTransform element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.UsageHints.MaskContainer">
      <summary>
        <para>
 Marks a VisualElement that hosts non-rectangular descendants using the "overflow: hidden;"
 style. Non-rectangular masks are implemented with the stencil. If applicable, the renderer breaks the batch
 to preemptively set the stencil state, before and after drawing the descendants, so that the descendants
 won't have to set them at the next masking level. When using this flag, consecutive stencil pushpop
 operations are cheap and don't require modifying the stencil reference. As a result, the batch doesn't need
 to be broken for each pushpop operation. Consecutive pushpush or poppop operations are still expensive.
 Avoid cases that involve many subtrees, where each subtree uses 2 or more levels of masking, to avoid
 consecutive pushpush or poppop operations.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.UsageHints.None">
      <summary>
        <para>
 No particular hints applicable.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlAttributeDescription">
      <summary>
        <para>
 Base class for describing an XML attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlAttributeDescription.defaultValueAsString">
      <summary>
        <para>
 The default value for the attribute, as a string.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlAttributeDescription.name">
      <summary>
        <para>
 The attribute name.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlAttributeDescription.obsoleteNames">
      <summary>
        <para>
 A list of obsolete names for this attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlAttributeDescription.restriction">
      <summary>
        <para>
 Restrictions on the possible values of the attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlAttributeDescription.type">
      <summary>
        <para>
 Attribute type.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlAttributeDescription.typeNamespace">
      <summary>
        <para>
 Attribute namespace.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlAttributeDescription.use">
      <summary>
        <para>
 Whether the attribute is optional, required or prohibited.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlAttributeDescription.GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext,System.Func`3&lt;System.String,T,T&gt;,T)">
      <summary>
        <para>
 Get the attribute value from the attribute bag.
 </para>
      </summary>
      <param name="bag">A bag containg attributes and their values as strings.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <param name="converterFunc">A function to convert a string value to type T.</param>
      <param name="defaultValue">The value to return if the attribute is not found in the bag.</param>
      <returns>
        <para>The attribute value from the bag, or defaultValue if the attribute is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlAttributeDescription.TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext,System.Func`3&lt;System.String,T,T&gt;,T,T&amp;)">
      <summary>
        <para>
 Tries to get the attribute value from the attribute bag.
 </para>
      </summary>
      <param name="bag">A bag containg attributes and their values as strings.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <param name="converterFunc">A function to convert a string value to type T.</param>
      <param name="defaultValue">The value to return if the attribute is not found in the bag.</param>
      <param name="value">If the attribute could be retrieved, the retrieved value converted by the conversion function or the default value if the retrieved value could not de converted.</param>
      <returns>
        <para>True if the value could be retrieved, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlAttributeDescription.Use">
      <summary>
        <para>
 An enum to describe attribute use.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.UxmlAttributeDescription.Use.None">
      <summary>
        <para>
 There is no restriction on the use of this attribute with the element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.UxmlAttributeDescription.Use.Optional">
      <summary>
        <para>
 The attribute is optional for the element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.UxmlAttributeDescription.Use.Prohibited">
      <summary>
        <para>
 The attribute should not appear for the element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.UxmlAttributeDescription.Use.Required">
      <summary>
        <para>
 The attribute must appear in the element tag.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlAttributeOverridesFactory">
      <summary>
        <para>
 Factory for the root AttributeOverrides element.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlAttributeOverridesTraits">
      <summary>
        <para>
 Defines UxmlTraits for the AttributeOverrides tag.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlBoolAttributeDescription">
      <summary>
        <para>
 Describes a XML bool attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlBoolAttributeDescription.defaultValueAsString">
      <summary>
        <para>
 The default value for the attribute, as a string.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlBoolAttributeDescription.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlBoolAttributeDescription.GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Retrieves the value of this attribute from the attribute bag. Returns it if it is found, otherwise return defaultValue.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <returns>
        <para>The value of the attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlBoolAttributeDescription.TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext,System.Boolean&amp;)">
      <summary>
        <para>
 Tries to retrieve the value of this attribute from the attribute bag. Returns true if it is found, otherwise returns false.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <param name="value">The value of the attribute.</param>
      <returns>
        <para>True if the value could be retrieved, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlChildElementDescription">
      <summary>
        <para>
 Describe an allowed child element for an element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlChildElementDescription.elementName">
      <summary>
        <para>
 The name of the allowed child element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlChildElementDescription.elementNamespace">
      <summary>
        <para>
 The namespace name of the allowed child element.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlChildElementDescription.#ctor(System.Type)">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="t"></param>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlColorAttributeDescription">
      <summary>
        <para>
 Describes a XML attribute representing a Color as a string.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlColorAttributeDescription.defaultValueAsString">
      <summary>
        <para>
 The default value for the attribute, as a string.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlColorAttributeDescription.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlColorAttributeDescription.GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Retrieves the value of this attribute from the attribute bag. Returns it if it is found, otherwise return defaultValue.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <returns>
        <para>The value of the attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlColorAttributeDescription.TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext,UnityEngine.Color&amp;)">
      <summary>
        <para>
 Tries to retrieve the value of this attribute from the attribute bag. Returns true if it is found, otherwise returns false.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <param name="value">The value of the attribute.</param>
      <returns>
        <para>True if the value could be retrieved, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlDoubleAttributeDescription">
      <summary>
        <para>
 Describes a XML double attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlDoubleAttributeDescription.defaultValueAsString">
      <summary>
        <para>
 The default value for the attribute, as a string.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlDoubleAttributeDescription.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlDoubleAttributeDescription.GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Retrieves the value of this attribute from the attribute bag. Returns it if it is found, otherwise return defaultValue.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <returns>
        <para>The value of the attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlDoubleAttributeDescription.TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext,System.Double&amp;)">
      <summary>
        <para>
 Tries to retrieve the value of this attribute from the attribute bag. Returns true if it is found, otherwise returns false.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <param name="value">The value of the attribute.</param>
      <returns>
        <para>True if the value could be retrieved, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlEnumAttributeDescription`1">
      <summary>
        <para>
 Describes a XML attribute representing an enum as a string.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlEnumAttributeDescription_1.defaultValueAsString">
      <summary>
        <para>
 The default value for the attribute, as a string.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlEnumAttributeDescription_1.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlEnumAttributeDescription_1.GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Retrieves the value of this attribute from the attribute bag. Returns it if it is found, otherwise return defaultValue.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <returns>
        <para>The value of the attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlEnumAttributeDescription_1.TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext,T&amp;)">
      <summary>
        <para>
 Tries to retrieve the value of this attribute from the attribute bag. Returns true if it is found, otherwise returns false.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <param name="value">The value of the attribute.</param>
      <returns>
        <para>True if the value could be retrieved, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlEnumeration">
      <summary>
        <para>
 Restricts the value of an attribute to be taken from a list of values.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlEnumeration.values">
      <summary>
        <para>
 The list of values the attribute can take.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlEnumeration.Equals(UnityEngine.UIElements.UxmlTypeRestriction)">
      <summary>
        <para>
 Indicates whether the current UxmlEnumeration object is equal to another object of the same type.
 </para>
      </summary>
      <param name="other">The object to compare with.</param>
      <returns>
        <para>True if the otheer object is equal to this one.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlFactory`1">
      <summary>
        <para>
 UxmlFactory specialization for classes that derive from VisualElement and that shares its traits, VisualElementTraits.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlFactory`2">
      <summary>
        <para>
 Generic base class for UXML factories, which instantiate a VisualElement using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlFactory_2.canHaveAnyAttribute">
      <summary>
        <para>
 Returns UxmlTraitscanHaveAnyAttribute (where UxmlTraits is the argument for T1).
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlFactory_2.substituteForTypeName">
      <summary>
        <para>
 Returns an empty string if T0 is not VisualElement; otherwise, returns "VisualElement".
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlFactory_2.substituteForTypeNamespace">
      <summary>
        <para>
 Returns the namespace for substituteForTypeName.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlFactory_2.substituteForTypeQualifiedName">
      <summary>
        <para>
 Returns the fully qualified name for substituteForTypeName.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlFactory_2.uxmlAttributesDescription">
      <summary>
        <para>
 Returns an empty enumerable.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlFactory_2.uxmlChildElementsDescription">
      <summary>
        <para>
 Returns an empty enumerable.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlFactory_2.uxmlName">
      <summary>
        <para>
 Returns the type name of T0.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlFactory_2.uxmlNamespace">
      <summary>
        <para>
 Returns the namespace name of T0.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlFactory_2.uxmlQualifiedName">
      <summary>
        <para>
 Returns the typefully qualified name of T0.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlFactory_2.AcceptsAttributeBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Returns true.
 </para>
      </summary>
      <param name="bag">The attribute bag.</param>
      <param name="cc"></param>
      <returns>
        <para>Always true.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlFactory_2.Create(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Instantiate an object of type T0 and initialize it by calling T1 UxmlTraitsInit method.
 </para>
      </summary>
      <param name="bag">A bag of name-value pairs, one for each attribute of the UXML element. This can be used to initialize the properties of the created object.</param>
      <param name="cc">When the element is created as part of a template instance inserted in another document, this contains information about the insertion point.</param>
      <returns>
        <para>The created element.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlFloatAttributeDescription">
      <summary>
        <para>
 Describes a XML float attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlFloatAttributeDescription.defaultValueAsString">
      <summary>
        <para>
 The default value for the attribute, as a string.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlFloatAttributeDescription.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlFloatAttributeDescription.GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Retrieves the value of this attribute from the attribute bag. Returns it if it is found, otherwise return defaultValue.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <returns>
        <para>The value of the attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlFloatAttributeDescription.TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext,System.Single&amp;)">
      <summary>
        <para>
 Tries to retrieve the value of this attribute from the attribute bag. Returns true if it is found, otherwise returns false.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <param name="value">The value of the attribute.</param>
      <returns>
        <para>True if the value could be retrieved, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlHash128AttributeDescription">
      <summary>
        <para>
 Describes a XML Hash128 attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlHash128AttributeDescription.defaultValueAsString">
      <summary>
        <para>
 The default value for the attribute, as a string.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlHash128AttributeDescription.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlHash128AttributeDescription.GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Retrieves the value of this attribute from the attribute bag. Returns it if it is found, otherwise return defaultValue.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <returns>
        <para>The value of the attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlHash128AttributeDescription.TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext,UnityEngine.Hash128&amp;)">
      <summary>
        <para>
 Tries to retrieve the value of this attribute from the attribute bag. Returns true if it is found, otherwise returns false.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <param name="value">The value of the attribute.</param>
      <returns>
        <para>True if the value could be retrieved, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlIntAttributeDescription">
      <summary>
        <para>
 Describes a XML int attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlIntAttributeDescription.defaultValueAsString">
      <summary>
        <para>
 The default value for the attribute, as a string.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlIntAttributeDescription.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlIntAttributeDescription.GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Retrieves the value of this attribute from the attribute bag. Returns it if it is found, otherwise return defaultValue.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <returns>
        <para>The value of the attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlIntAttributeDescription.TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext,System.Int32&amp;)">
      <summary>
        <para>
 Tries to retrieve the value of this attribute from the attribute bag. Returns true if it is found, otherwise returns false.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <param name="value">The value of the attribute.</param>
      <returns>
        <para>True if the value could be retrieved, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlLongAttributeDescription">
      <summary>
        <para>
 Describes a XML long attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlLongAttributeDescription.defaultValueAsString">
      <summary>
        <para>
 The default value for the attribute, as a string.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlLongAttributeDescription.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlLongAttributeDescription.GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Retrieves the value of this attribute from the attribute bag. Returns it if it is found, otherwise return defaultValue.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <returns>
        <para>The value of the attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlLongAttributeDescription.TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext,System.Int64&amp;)">
      <summary>
        <para>
 Tries to retrieve the value of this attribute from the attribute bag. Returns true if it is found, otherwise returns false.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <param name="value">The value of the attribute.</param>
      <returns>
        <para>True if the value could be retrieved, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlRootElementFactory">
      <summary>
        <para>
 Factory for the root UXML element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlRootElementFactory.substituteForTypeName">
      <summary>
        <para>
 Returns the empty string, as the root element can not appear anywhere else bit at the root of the document.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlRootElementFactory.substituteForTypeNamespace">
      <summary>
        <para>
 Returns the empty string, as the root element can not appear anywhere else bit at the root of the document.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlRootElementFactory.substituteForTypeQualifiedName">
      <summary>
        <para>
 Returns the empty string, as the root element can not appear anywhere else bit at the root of the document.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlRootElementFactory.uxmlName">
      <summary>
        <para>
 Returns "UXML".
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlRootElementFactory.uxmlQualifiedName">
      <summary>
        <para>
 Returns the qualified name for this element.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlRootElementFactory.Create(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Returns null.
 </para>
      </summary>
      <param name="bag"></param>
      <param name="cc"></param>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlRootElementTraits">
      <summary>
        <para>
 Defines UxmlTraits for the UXML root element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlRootElementTraits.uxmlChildElementsDescription">
      <summary>
        <para>
 Returns an enumerable containing UxmlChildElementDescription(typeof(VisualElement)), since the root element can contain VisualElements.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlStringAttributeDescription">
      <summary>
        <para>
 Describes a XML string attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlStringAttributeDescription.defaultValueAsString">
      <summary>
        <para>
 The default value for the attribute, as a string.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlStringAttributeDescription.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlStringAttributeDescription.GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Retrieves the value of this attribute from the attribute bag. Returns it if it is found, otherwise return defaultValue.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <returns>
        <para>The value of the attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlStringAttributeDescription.TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext,System.String&amp;)">
      <summary>
        <para>
 Tries to retrieve the value of this attribute from the attribute bag. Returns true if it is found, otherwise returns false.
 </para>
      </summary>
      <param name="bag">The bag of attributes.</param>
      <param name="cc">The context in which the values are retrieved.</param>
      <param name="value">The value of the attribute.</param>
      <returns>
        <para>True if the value could be retrieved, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlStyleFactory">
      <summary>
        <para>
 Factory for the root Style element.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlStyleTraits">
      <summary>
        <para>
 Defines UxmlTraits for the Style tag.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlTemplateFactory">
      <summary>
        <para>
 Factory for the root Template element.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlTemplateTraits">
      <summary>
        <para>
 Defines UxmlTraits for the Template tag.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlTraits">
      <summary>
        <para>
 Describes a VisualElement derived class for the parsing of UXML files and the generation of UXML schema definition.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlTraits.canHaveAnyAttribute">
      <summary>
        <para>
 Must return true if the UXML element attributes are not restricted to the values enumerated by uxmlAttributesDescription.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlTraits.uxmlAttributesDescription">
      <summary>
        <para>
 Describes the UXML attributes expected by the element. The attributes enumerated here will appear in the UXML schema.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlTraits.uxmlChildElementsDescription">
      <summary>
        <para>
 Describes the types of element that can appear as children of this element in a UXML file.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initialize a VisualElement instance with values from the UXML element attributes.
 </para>
      </summary>
      <param name="ve">The VisualElement to initialize.</param>
      <param name="bag">A bag of name-value pairs, one for each attribute of the UXML element.</param>
      <param name="cc">When the element is created as part of a template instance inserted in another document, this contains information about the insertion point.</param>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlTypeAttributeDescription`1">
      <summary>
        <para>
 Describes an XML System.Type attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlTypeAttributeDescription_1.defaultValueAsString">
      <summary>
        <para>
 The default value for the attribute, as a string.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlTypeAttributeDescription_1.#ctor">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlTypeAttributeDescription_1.GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Method that retrieves an attribute's value from an attribute bag. Returns it if it is found, otherwise return defaultValue.
 </para>
      </summary>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The context in which the method retrieves attribute values.</param>
      <returns>
        <para>The attribute's value. If the method cannot find the value, returns defaultValue.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlTypeAttributeDescription_1.TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext,System.Type&amp;)">
      <summary>
        <para>
 Method that tries to retrieve an attribute's value from an attribute bag.. Returns true if it is found, otherwise returns false.
 </para>
      </summary>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The context in which the method retrieves attribute values.</param>
      <param name="value">The attribute's value.</param>
      <returns>
        <para>True if the method can retrieve the attribute's value. False otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlTypeRestriction">
      <summary>
        <para>
 Base class to restricts the value of an attribute.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlTypeRestriction.Equals(UnityEngine.UIElements.UxmlTypeRestriction)">
      <summary>
        <para>
 Indicates whether the current UxmlTypeRestriction object is equal to another object of the same type.
 </para>
      </summary>
      <param name="other">The object to compare with.</param>
      <returns>
        <para>True if the otheer object is equal to this one.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlValueBounds">
      <summary>
        <para>
 Restricts the value of an attribute to be within the specified bounds.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlValueBounds.excludeMax">
      <summary>
        <para>
 True if the bounds exclude max.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlValueBounds.excludeMin">
      <summary>
        <para>
 True if the bounds exclude min.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlValueBounds.max">
      <summary>
        <para>
 The maximum value for the attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlValueBounds.min">
      <summary>
        <para>
 The minimum value for the attribute.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlValueBounds.Equals(UnityEngine.UIElements.UxmlTypeRestriction)">
      <summary>
        <para>
 Indicates whether the current UxmlValueBounds object is equal to another object of the same type.
 </para>
      </summary>
      <param name="other">The object to compare with.</param>
      <returns>
        <para>True if the otheer object is equal to this one.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.UxmlValueMatches">
      <summary>
        <para>
 Restricts the value of an attribute to match a regular expression.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.UxmlValueMatches.regex">
      <summary>
        <para>
 The regular expression that should be matched by the value.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.UxmlValueMatches.Equals(UnityEngine.UIElements.UxmlTypeRestriction)">
      <summary>
        <para>
 Indicates whether the current UxmlValueMatches object is equal to another object of the same type.
 </para>
      </summary>
      <param name="other">The object to compare with.</param>
      <returns>
        <para>True if the otheer object is equal to this one.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.ValidateCommandEvent">
      <summary>
        <para>
 This event is sent by the Editor while it determines whether the command will be handled by an element in the panel.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.VectorImage">
      <summary>
        <para>
 An asset that represents a vector image.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Vertex">
      <summary>
        <para>
 Represents a vertex of geometry for drawing content of VisualElement.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Vertex.nearZ">
      <summary>
        <para>
 A special value representing the near clipping plane. Always use this value as the vertex position's z component when building 2D (flat) UI geometry.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Vertex.position">
      <summary>
        <para>
 Describes the vertex's position.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Vertex.tint">
      <summary>
        <para>
 A color value for the vertex.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Vertex.uv">
      <summary>
        <para>
 The UV coordinate of the vertex.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Visibility">
      <summary>
        <para>
 Style value that specifies whether or not a VisualElement is visible.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Visibility.Hidden">
      <summary>
        <para>
 The VisualElement is hidden. Hidden VisualElements will take up space in their parent layout if their positionType is set to PositionType.Relative. Use the DisplayStyle style property to both hide and remove a VisualElement from the parent VisualElement layout. Note, this is the enum value used when setting styles via VisualElement.style.visibility. In C#, you can just use VisualElement.visible = false.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Visibility.Visible">
      <summary>
        <para>
 The VisualElement is visible. Default Value.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.VisualElement">
      <summary>
        <para>
 Base class for objects that are part of the UIElements visual tree.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.childCount">
      <summary>
        <para>
  Number of child elements in this object's contentContainer.

 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.contentContainer">
      <summary>
        <para>
 Child elements are added to it, usually this is the same as the element itself. 
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.contentRect">
      <summary>
        <para>
 The rectangle of the content area of the element, in the local space of the element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.customStyle">
      <summary>
        <para>
 Returns the custom style properties accessor for this element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.VisualElement.disabledUssClassName">
      <summary>
        <para>
 USS class name of local disabled elements.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.enabledInHierarchy">
      <summary>
        <para>
 Returns true if the VisualElement is enabled in its own hierarchy.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.enabledSelf">
      <summary>
        <para>
 Returns true if the VisualElement is enabled locally.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.experimental">
      <summary>
        <para>
 Returns the UIElements experimental interfaces.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.generateVisualContent">
      <summary>
        <para>
 Called when the VisualElement visual contents need to be (re)generated.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.hierarchy">
      <summary>
        <para>
  Access to this element physical hierarchy

 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.layout">
      <summary>
        <para>
 The position and size of the VisualElement relative to its parent, as computed by the layout system.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.localBound">
      <summary>
        <para>
 AABB after applying the transform to the rect, but before applying the layout translation.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.name">
      <summary>
        <para>
 The name of this VisualElement.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.paddingRect">
      <summary>
        <para>
 The rectangle of the padding area of the element, in the local space of the element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.panel">
      <summary>
        <para>
 The panel onto which this VisualElement is attached.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.parent">
      <summary>
        <para>
 The parent of this VisualElement.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.pickingMode">
      <summary>
        <para>
 Determines if this element can be pick during mouseEvents or IPanel.Pick queries.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.resolvedStyle">
      <summary>
        <para>
 Returns the VisualElement resolved style values.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.schedule">
      <summary>
        <para>
 Retrieves this VisualElement's IVisualElementScheduler
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.style">
      <summary>
        <para>
 Reference to the style object of this element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.styleSheets">
      <summary>
        <para>
 Returns a VisualElementStyleSheetSet that manipulates style sheets attached to this element.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.tooltip">
      <summary>
        <para>
 Text to display inside an information box after the user hovers the element for a small amount of time. This is only supported in the Editor UI.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.transform">
      <summary>
        <para>
 Returns a transform object for this VisualElement.
 ITransform
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.usageHints">
      <summary>
        <para>
 A combination of hint values that specify high-level intended usage patterns for the VisualElement.
 This property can only be set when the VisualElement is not yet part of a Panel. Once part of a Panel, this property becomes effectively read-only, and attempts to change it will throw an exception.
 The specification of proper UsageHints drives the system to make better decisions on how to process or accelerate certain operations based on the anticipated usage pattern.
 Note that those hints do not affect behavioral or visual results, but only affect the overall performance of the panel and the elements within.
 It's advised to always consider specifying the proper UsageHints, but keep in mind that some UsageHints might be internally ignored under certain conditions (e.g. due to hardware limitations on the target platform).
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.userData">
      <summary>
        <para>
 This property can be used to associate application-specific user data with this VisualElement.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.viewDataKey">
      <summary>
        <para>
 Used for view data persistence (ie. tree expanded states, scroll position, zoom level).
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.visible">
      <summary>
        <para>
 Indicates whether or not this element should be rendered.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.visualTreeAssetSource">
      <summary>
        <para>
 Stores the asset reference, if the generated element is cloned from a VisualTreeAsset.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.worldBound">
      <summary>
        <para>
 AABB after applying the world transform to rect.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.worldTransform">
      <summary>
        <para>
 Returns a matrix that cumulates the following operations (in order):
 -Local Scaling
 -Local Rotation
 -Local Translation
 -Layout Translation
 -Parent worldTransform (recursive definition - consider identity when there is no parent)
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Add(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Add an element to this element's contentContainer
 </para>
      </summary>
      <param name="child"></param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.AddToClassList(System.String)">
      <summary>
        <para>
 Adds a class to the class list of the element in order to assign styles from USS.
 </para>
      </summary>
      <param name="className">The name of the class to add to the list.</param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.BringToFront">
      <summary>
        <para>
 Brings this element to the end of its parent children list. The element will be visually in front of any overlapping sibling elements.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Children">
      <summary>
        <para>
 Returns the elements from its contentContainer.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.ClassListContains(System.String)">
      <summary>
        <para>
 Searches for a class in the class list of this element.
 </para>
      </summary>
      <param name="cls">The name of the class for the search query.</param>
      <returns>
        <para>Returns true if the class is part of the list. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Clear">
      <summary>
        <para>
 Remove all child elements from this element's contentContainer
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.ClearClassList">
      <summary>
        <para>
 Removes all classes from the class list of this element.
 AddToClassList
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Contains(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Checks if this element is an ancestor of the specified child element.
 </para>
      </summary>
      <param name="child">The child element to test against.</param>
      <returns>
        <para>Returns true if this element is a ancestor of the child element, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.ContainsPoint(UnityEngine.Vector2)">
      <summary>
        <para>
 Checks if the specified point intersects with this VisualElement's layout.
 </para>
      </summary>
      <param name="localPoint">The point in the local space of the element.</param>
      <returns>
        <para>Returns true if the point is contained within the element's layout. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.#ctor">
      <summary>
        <para>
  Initializes and returns an instance of VisualElement.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.ElementAt(System.Int32)">
      <summary>
        <para>
 Retrieves the child element at a specific index.
 </para>
      </summary>
      <param name="index">The index of the element.</param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.EnableInClassList(System.String,System.Boolean)">
      <summary>
        <para>
 Enables or disables the class with the given name.
 </para>
      </summary>
      <param name="className">The name of the class to enable or disable.</param>
      <param name="enable">A boolean flag that adds or removes the class name from the class list. If true, EnableInClassList adds the class name to the class list. If false, EnableInClassList removes the class name from the class list.</param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.FindAncestorUserData">
      <summary>
        <para>
 Searches up the hierarchy of this VisualElement and retrieves stored userData, if any is found.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.FindCommonAncestor(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Finds the lowest common ancestor between two VisualElements inside the VisualTree hierarchy.
 </para>
      </summary>
      <param name="other"></param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.GetClasses">
      <summary>
        <para>
 Retrieve the classes for this element.
 </para>
      </summary>
      <returns>
        <para>A class list.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.GetFirstAncestorOfType">
      <summary>
        <para>
 Walks up the hierarchy, starting from this element's parent, and returns the first VisualElement of this type
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.GetFirstOfType">
      <summary>
        <para>
 Walks up the hierarchy, starting from this element, and returns the first VisualElement of this type
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.VisualElement.Hierarchy">
      <summary>
        <para>
 Hierarchy is a struct allowing access to the hierarchy of visual elements
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.Hierarchy.childCount">
      <summary>
        <para>
  Number of child elements in this object's contentContainer

 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.Hierarchy.parent">
      <summary>
        <para>
 The physical parent of this element in the hierarchy.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Hierarchy.Add(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Add an element to this element's contentContainer
 </para>
      </summary>
      <param name="child"></param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Hierarchy.Children">
      <summary>
        <para>
 Returns the elements from its contentContainer
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Hierarchy.Clear">
      <summary>
        <para>
 Remove all child elements from this element's contentContainer
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Hierarchy.ElementAt(System.Int32)">
      <summary>
        <para>
 Retrieves the child element at position
 </para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Hierarchy.Equals(UnityEngine.UIElements.VisualElement/Hierarchy)">
      <summary>
        <para>
 Compares instances of the Hierarchy struct for equality.
 </para>
      </summary>
      <param name="other">The structure to compare with.</param>
      <returns>
        <para>Returns true if the two instances refer to the same element, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Hierarchy.Equals(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Hierarchy.IndexOf(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Retrieves the index of the specified VisualElement in the Hierarchy.
 </para>
      </summary>
      <param name="element">The element to return the index for.</param>
      <returns>
        <para>The index of the element, or -1 if the element is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Hierarchy.Insert(System.Int32,UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Insert an element into this element's contentContainer
 </para>
      </summary>
      <param name="index"></param>
      <param name="child"></param>
    </member>
    <member name="?:UnityEngine.UIElements.VisualElement.Hierarchy.op_Equal(UnityEngine.UIElements.VisualElement/Hierarchy,UnityEngine.UIElements.VisualElement/Hierarchy)">
      <summary>
        <para>
 Compares instances of the Hierarchy struct for equality.
 </para>
      </summary>
      <param name="x">The left operand of the comparison.</param>
      <param name="y">The right operand of the comparison.</param>
      <returns>
        <para>Returns true if the two instances refer to the same element, false otherwise.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.UIElements.VisualElement.Hierarchy.op_NotEqual(UnityEngine.UIElements.VisualElement/Hierarchy,UnityEngine.UIElements.VisualElement/Hierarchy)">
      <summary>
        <para>
 Compares instances of the Hierarchy struct for inequality.
 </para>
      </summary>
      <param name="x">The left operand of the comparison.</param>
      <param name="y">The right operand of the comparison.</param>
      <returns>
        <para>Returns false if the two instances refer to the same element, true otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Hierarchy.Remove(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Removes this child from the hierarchy
 </para>
      </summary>
      <param name="child"></param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Hierarchy.RemoveAt(System.Int32)">
      <summary>
        <para>
 Remove the child element located at this position from this element's contentContainer
 </para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Hierarchy.Sort(System.Comparison`1&lt;UnityEngine.UIElements.VisualElement&gt;)">
      <summary>
        <para>
 Reorders child elements from this VisualElement contentContainer.
 </para>
      </summary>
      <param name="comp">Sorting criteria.</param>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.Hierarchy.this">
      <summary>
        <para>
 Returns the element at the specified index in the hierarchy
 </para>
      </summary>
      <param name="key">The index of the child</param>
      <returns>
        <para>The VisualElement at this index</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.IndexOf(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Retrieves the child index of the specified VisualElement.
 </para>
      </summary>
      <param name="element">The child element to retrieve.</param>
      <returns>
        <para>The index of the child, or -1 if the child is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Insert(System.Int32,UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Insert an element into this element's contentContainer
 </para>
      </summary>
      <param name="index"></param>
      <param name="element"></param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.MarkDirtyRepaint">
      <summary>
        <para>
 Triggers a repaint of the VisualElement on the next frame.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.VisualElement.MeasureMode">
      <summary>
        <para>
 The modes available to measure VisualElement sizes.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.VisualElement.MeasureMode.AtMost">
      <summary>
        <para>
 At Most. The element should give its preferred width/height but no more than the value passed.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.VisualElement.MeasureMode.Exactly">
      <summary>
        <para>
 The element should give the width/height that is passed in and derive the opposite site from this value (for example, calculate text size from a fixed width).
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.VisualElement.MeasureMode.Undefined">
      <summary>
        <para>
 The element should give its preferred width/height without any constraint.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.PlaceBehind(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Places this element right before the sibling element in their parent children list. If the element and the sibling position overlap, the element will be visually behind of its sibling.
 </para>
      </summary>
      <param name="sibling">The sibling element.</param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.PlaceInFront(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Places this element right after the sibling element in their parent children list. If the element and the sibling position overlap, the element will be visually in front of its sibling.
 </para>
      </summary>
      <param name="sibling">The sibling element.</param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Remove(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Removes this child from the hierarchy
 </para>
      </summary>
      <param name="element"></param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.RemoveAt(System.Int32)">
      <summary>
        <para>
 Remove the child element located at this position from this element's contentContainer
 </para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.RemoveFromClassList(System.String)">
      <summary>
        <para>
 Removes a class from the class list of the element.
 </para>
      </summary>
      <param name="className">The name of the class to remove to the list.</param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.RemoveFromHierarchy">
      <summary>
        <para>
 Removes this element from its parent hierarchy.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.SendEvent(UnityEngine.UIElements.EventBase)">
      <summary>
        <para>
 Sends an event to the event handler.
 </para>
      </summary>
      <param name="e">The event to send.</param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.SendToBack">
      <summary>
        <para>
 Sends this element to the beginning of its parent children list. The element will be visually behind any overlapping sibling elements.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.SetEnabled(System.Boolean)">
      <summary>
        <para>
 Changes the VisualElement enabled state. A disabled VisualElement does not receive most events.
 </para>
      </summary>
      <param name="value">New enabled state</param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.Sort(System.Comparison`1&lt;UnityEngine.UIElements.VisualElement&gt;)">
      <summary>
        <para>
 Reorders child elements from this VisualElement contentContainer.
 </para>
      </summary>
      <param name="comp">The sorting criteria.</param>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.this">
      <summary>
        <para>
 Retrieves the child element at a specific index.
 </para>
      </summary>
      <param name="key">The index of the element.</param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.ToggleInClassList(System.String)">
      <summary>
        <para>
 Toggles between adding and removing the given class name from the class list.
 </para>
      </summary>
      <param name="className">The class name to add or remove from the class list.</param>
    </member>
    <member name="T:UnityEngine.UIElements.VisualElement.UxmlFactory">
      <summary>
        <para>
 Instantiates a VisualElement using the data read from a UXML file.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.VisualElement.UxmlTraits">
      <summary>
        <para>
 Defines UxmlTraits for the VisualElement.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.UxmlTraits.focusable">
      <summary>
        <para>
 The focusable attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.UxmlTraits.focusIndex">
      <summary>
        <para>
 The focus index attribute.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElement.UxmlTraits.uxmlChildElementsDescription">
      <summary>
        <para>
 Returns an enumerable containing UxmlChildElementDescription(typeof(VisualElement)), since VisualElements can contain other VisualElements.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElement.UxmlTraits.Init(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IUxmlAttributes,UnityEngine.UIElements.CreationContext)">
      <summary>
        <para>
 Initialize VisualElement properties using values from the attribute bag.
 </para>
      </summary>
      <param name="ve">The object to initialize.</param>
      <param name="bag">The attribute bag.</param>
      <param name="cc">The creation context; unused.</param>
    </member>
    <member name="T:UnityEngine.UIElements.VisualElementExtensions">
      <summary>
        <para>
 VisualElementExtensions is a set of extension methods useful for VisualElement.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementExtensions.AddManipulator(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IManipulator)">
      <summary>
        <para>
 Add a manipulator associated to a VisualElement.
 </para>
      </summary>
      <param name="ele">VisualElement associated to the manipulator.</param>
      <param name="manipulator">Manipulator to be added to the VisualElement.</param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementExtensions.ChangeCoordinatesTo(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.VisualElement,UnityEngine.Vector2)">
      <summary>
        <para>
 Transforms a point from the local space of an element to the local space of another element.
 </para>
      </summary>
      <param name="src">The element to use as a reference as the source local space.</param>
      <param name="dest">The element to use as a reference as the destination local space.</param>
      <param name="point">The point to transform, in the local space of the source element.</param>
      <returns>
        <para>A point in the local space of destination element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementExtensions.ChangeCoordinatesTo(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.VisualElement,UnityEngine.Rect)">
      <summary>
        <para>
 Transforms a rectangle from the local space of an element to the local space of another element.
 </para>
      </summary>
      <param name="src">The element to use as a reference as the source local space.</param>
      <param name="dest">The element to use as a reference as the destination local space.</param>
      <param name="rect">The rectangle to transform, in the local space of the source element.</param>
      <returns>
        <para>A rectangle in the local space of destination element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementExtensions.LocalToWorld(UnityEngine.UIElements.VisualElement,UnityEngine.Vector2)">
      <summary>
        <para>
 Transforms a point from the local space of the element to the world space.
 </para>
      </summary>
      <param name="ele">The element to use as a reference for the local space.</param>
      <param name="p">The point to transform, in local space.</param>
      <returns>
        <para>A point in the world space.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementExtensions.LocalToWorld(UnityEngine.UIElements.VisualElement,UnityEngine.Rect)">
      <summary>
        <para>
 Transforms a rectangle from the local space of the element to the world space.
 </para>
      </summary>
      <param name="ele">The element to use as a reference for the local space.</param>
      <param name="r">The rectangle to transform, in local space.</param>
      <returns>
        <para>A rectangle in the world space.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementExtensions.RemoveManipulator(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.IManipulator)">
      <summary>
        <para>
 Remove a manipulator associated to a VisualElement.
 </para>
      </summary>
      <param name="ele">VisualElement associated to the manipulator.</param>
      <param name="manipulator">Manipulator to be removed from the VisualElement.</param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementExtensions.StretchToParentSize(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Aligns a VisualElement's left, top, right and bottom edges with the corresponding edges of its parent.
 </para>
      </summary>
      <param name="elem">The element to be aligned with its parent</param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementExtensions.StretchToParentWidth(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Aligns a VisualElement's left and right edges with the corresponding edges of its parent.
 </para>
      </summary>
      <param name="elem">The element to be aligned with its parent</param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementExtensions.WorldToLocal(UnityEngine.UIElements.VisualElement,UnityEngine.Vector2)">
      <summary>
        <para>
 Transforms a point from the world space to the local space of the element.
 </para>
      </summary>
      <param name="ele">The element to use as a reference for the local space.</param>
      <param name="p">The point to transform, in world space.</param>
      <returns>
        <para>A point in the local space of the element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementExtensions.WorldToLocal(UnityEngine.UIElements.VisualElement,UnityEngine.Rect)">
      <summary>
        <para>
 Transforms a rectangle from the world space to the local space of the element.
 </para>
      </summary>
      <param name="ele">The element to use as a reference for the local space.</param>
      <param name="r">The rectangle to transform, in world space.</param>
      <returns>
        <para>A rectangle in the local space of the element.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.VisualElementFocusChangeDirection">
      <summary>
        <para>
 Define focus change directions for the VisualElementFocusRing.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElementFocusChangeDirection.lastValue">
      <summary>
        <para>
 Last value for the direction defined by this class.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElementFocusChangeDirection.left">
      <summary>
        <para>
 The focus is moving to the left.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElementFocusChangeDirection.right">
      <summary>
        <para>
 The focus is moving to the right.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.VisualElementFocusRing">
      <summary>
        <para>
 Implementation of a linear focus ring. Elements are sorted according to their focusIndex.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElementFocusRing.defaultFocusOrder">
      <summary>
        <para>
 The focus order for elements having 0 has a focusIndex.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementFocusRing.#ctor(UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.VisualElementFocusRing/DefaultFocusOrder)">
      <summary>
        <para>
 Constructor.
 </para>
      </summary>
      <param name="root">The root of the element tree for which we want to build a focus ring.</param>
      <param name="dfo">Default ordering of the elements in the ring.</param>
    </member>
    <member name="T:UnityEngine.UIElements.VisualElementFocusRing.DefaultFocusOrder">
      <summary>
        <para>
 Ordering of elements in the focus ring.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.VisualElementFocusRing.DefaultFocusOrder.ChildOrder">
      <summary>
        <para>
 Order elements using a depth-first pre-order traversal of the element tree.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.VisualElementFocusRing.DefaultFocusOrder.PositionXY">
      <summary>
        <para>
 Order elements according to their position, first by X, then by Y.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.VisualElementFocusRing.DefaultFocusOrder.PositionYX">
      <summary>
        <para>
 Order elements according to their position, first by Y, then by X.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementFocusRing.GetFocusChangeDirection(UnityEngine.UIElements.Focusable,UnityEngine.UIElements.EventBase)">
      <summary>
        <para>
 Get the direction of the focus change for the given event. For example, when the Tab key is pressed, focus should be given to the element to the right in the focus ring.
 </para>
      </summary>
      <param name="currentFocusable"></param>
      <param name="e"></param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementFocusRing.GetNextFocusable(UnityEngine.UIElements.Focusable,UnityEngine.UIElements.FocusChangeDirection)">
      <summary>
        <para>
 Get the next element in the given direction.
 </para>
      </summary>
      <param name="currentFocusable"></param>
      <param name="direction"></param>
    </member>
    <member name="T:UnityEngine.UIElements.VisualElementStyleSheetSet">
      <summary>
        <para>
 This structure manipulates the set of StyleSheet objects attached to the owner VisualElement.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElementStyleSheetSet.count">
      <summary>
        <para>
 Number of style sheets attached to the owner element.

 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementStyleSheetSet.Add(UnityEngine.UIElements.StyleSheet)">
      <summary>
        <para>
 Adds a style sheet for the owner element.
 </para>
      </summary>
      <param name="styleSheet"></param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementStyleSheetSet.Clear">
      <summary>
        <para>
 Removes all style sheets for the owner element.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementStyleSheetSet.Contains(UnityEngine.UIElements.StyleSheet)">
      <summary>
        <para>
 Looks for the specified StyleSheet
 </para>
      </summary>
      <param name="styleSheet"></param>
      <returns>
        <para>Returns true if the style sheet is attached to the owner element, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementStyleSheetSet.Equals(UnityEngine.UIElements.VisualElementStyleSheetSet)">
      <summary>
        <para>
 Compares instances of the VisualElementStyleSheetSet struct for equality.
 </para>
      </summary>
      <param name="other">The structure to compare with.</param>
      <returns>
        <para>Returns true if the two instances refer to the same element, false otherwise.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.UIElements.VisualElementStyleSheetSet.op_Equal(UnityEngine.UIElements.VisualElementStyleSheetSet,UnityEngine.UIElements.VisualElementStyleSheetSet)">
      <summary>
        <para>
 Compares instances of the VisualElementStyleSheetSet struct for equality.
 </para>
      </summary>
      <param name="left">The left operand of the comparison</param>
      <param name="right">The right operand of the comparison</param>
      <returns>
        <para>True if the two instances refer to the same element, false otherwise.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.UIElements.VisualElementStyleSheetSet.op_NotEqual(UnityEngine.UIElements.VisualElementStyleSheetSet,UnityEngine.UIElements.VisualElementStyleSheetSet)">
      <summary>
        <para>
 Compares instances of the VisualElementStyleSheetSet struct for inequality.
 </para>
      </summary>
      <param name="left">The left operand of the comparison</param>
      <param name="right">The right operand of the comparison</param>
      <returns>
        <para>Returns false if the two instances refer to the same element, true otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualElementStyleSheetSet.Remove(UnityEngine.UIElements.StyleSheet)">
      <summary>
        <para>
 Removes a style sheet for the owner element.
 </para>
      </summary>
      <param name="styleSheet"></param>
    </member>
    <member name="P:UnityEngine.UIElements.VisualElementStyleSheetSet.this">
      <summary>
        <para>
 Reads the value at the specified index in the list of StyleSheet objects attached of the element
 </para>
      </summary>
      <param name="index">The index of the StyleSheet</param>
    </member>
    <member name="T:UnityEngine.UIElements.VisualTreeAsset">
      <summary>
        <para>
 An instance of this class holds a tree of VisualElementAssets, created from a UXML file. Each node in the file corresponds to a VisualElementAsset. You can clone a VisualTreeAsset to create a tree of VisualElements.

 Note: You can't generate a VisualTreeAsset from raw UXML at runtime.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualTreeAsset.contentHash">
      <summary>
        <para>
 A hash value computed from the template content.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualTreeAsset.importedWithErrors">
      <summary>
        <para>
 Whether there were errors encountered while importing the UXML File
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualTreeAsset.importedWithWarnings">
      <summary>
        <para>
 Whether there were warnings encountered while importing the UXML File
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualTreeAsset.stylesheets">
      <summary>
        <para>
 The stylesheets used by this VisualTreeAsset.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.VisualTreeAsset.templateDependencies">
      <summary>
        <para>
 The UXML templates used by this VisualTreeAsset.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.VisualTreeAsset.CloneTree">
      <summary>
        <para>
 Build a tree of VisualElements from the asset.
 </para>
      </summary>
      <returns>
        <para>The root of the tree of VisualElements that was just cloned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualTreeAsset.CloneTree(System.String)">
      <summary>
        <para>
 Build a tree of VisualElements from the asset.
 </para>
      </summary>
      <param name="bindingPath">The path to the property that you want to bind to the root of the cloned tree.</param>
      <returns>
        <para>The root of the tree of VisualElements that was just cloned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualTreeAsset.CloneTree(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>
 Builds a tree of VisualElements from the asset.
 </para>
      </summary>
      <param name="target">A VisualElement that will act as the root of the cloned tree.</param>
    </member>
    <member name="M:UnityEngine.UIElements.VisualTreeAsset.Instantiate">
      <summary>
        <para>
 Build a tree of VisualElements from the asset.
 </para>
      </summary>
      <returns>
        <para>The root of the tree of VisualElements that was just cloned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.VisualTreeAsset.Instantiate(System.String)">
      <summary>
        <para>
 Build a tree of VisualElements from the asset.
 </para>
      </summary>
      <param name="bindingPath">The path to the property that you want to bind to the root of the cloned tree.</param>
      <returns>
        <para>The root of the tree of VisualElements that was just cloned.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UIElements.WheelEvent">
      <summary>
        <para>
 This event is sent when the mouse wheel moves.
 </para>
      </summary>
    </member>
    <member name="P:UnityEngine.UIElements.WheelEvent.delta">
      <summary>
        <para>
 The amount of scrolling applied with the mouse wheel.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.WheelEvent.#ctor">
      <summary>
        <para>
 Constructor. Use GetPooled() to get an event from a pool of reusable events.
 </para>
      </summary>
    </member>
    <member name="M:UnityEngine.UIElements.WheelEvent.GetPooled(UnityEngine.Event)">
      <summary>
        <para>
 Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use Dispose() to release them.
 </para>
      </summary>
      <param name="systemEvent">A wheel IMGUI event.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UIElements.WheelEvent.Init">
      <summary>
        <para>
 Resets the event members to their initial values.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.WhiteSpace">
      <summary>
        <para>
 Word wrapping over multiple lines if not enough space is available to draw the text of an element.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.WhiteSpace.Normal">
      <summary>
        <para>
 Text will wrap when necessary.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.WhiteSpace.NoWrap">
      <summary>
        <para>
 Text will never wrap to the next line.
 </para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIElements.Wrap">
      <summary>
        <para>
 By default, items will all try to fit onto one line. You can change that and allow the items to wrap as needed with this property.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Wrap.NoWrap">
      <summary>
        <para>
 All items will be on one line. Default Value.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Wrap.Wrap">
      <summary>
        <para>
 All items will be on one line. Default Value.
 </para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIElements.Wrap.WrapReverse">
      <summary>
        <para>
 Items will wrap onto multiple lines from bottom to top.
 </para>
      </summary>
    </member>
    <member name="A:UnityEngine.UIElementsModule">
      <summary>
        <para>The UIElements module implements the UIElements retained mode UI framework.</para>
      </summary>
    </member>
  </members>
</doc>
