<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.TerrainModule</name>
    </assembly>
    <member name="T:UnityEngine.DetailInstanceTransform">
      <summary>
        <para>Describes the transform of a Terrain detail object.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DetailInstanceTransform.posX">
      <summary>
        <para>The X coordinate of the detail object in the Terrain's local space. To get the X in world space, add this value to position X of the Terrain.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DetailInstanceTransform.posY">
      <summary>
        <para>The Y coordinate of the detail object in the Terrain's local space. To get the Y in world space, add this value to position Y of the Terrain.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DetailInstanceTransform.posZ">
      <summary>
        <para>The Z coordinate of the detail object in the Terrain's local space. To get the Z in world space, add this value to position Z of the Terrain.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DetailInstanceTransform.rotationY">
      <summary>
        <para>The angle, in radians, at which the detail object rotates around the Y-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DetailInstanceTransform.scaleXZ">
      <summary>
        <para>The X and Z scale values of the detail object. These two values are always the same.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DetailInstanceTransform.scaleY">
      <summary>
        <para>The Y scale value of the detail object.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.DetailPrototype">
      <summary>
        <para>Detail prototype used by the Terrain GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.bendFactor">
      <summary>
        <para>Bend factor of the detailPrototype.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.dryColor">
      <summary>
        <para>Color when the DetailPrototypes are "dry".</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.healthyColor">
      <summary>
        <para>Color when the DetailPrototypes are "healthy".</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.holeEdgePadding">
      <summary>
        <para>Controls how far away detail objects are from the edge of the hole area.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.maxHeight">
      <summary>
        <para>Maximum height of the grass billboards (if render mode is GrassBillboard).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.maxWidth">
      <summary>
        <para>Maximum width of the grass billboards (if render mode is GrassBillboard).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.minHeight">
      <summary>
        <para>Minimum height of the grass billboards (if render mode is GrassBillboard).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.minWidth">
      <summary>
        <para>Minimum width of the grass billboards (if render mode is GrassBillboard).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.noiseSeed">
      <summary>
        <para>Specifies the random seed value for detail object placement.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.noiseSpread">
      <summary>
        <para>Controls the spatial frequency of the noise pattern used to vary the scale and color of the detail objects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.prototype">
      <summary>
        <para>GameObject used by the DetailPrototype.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.prototypeTexture">
      <summary>
        <para>Texture used by the DetailPrototype.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.renderMode">
      <summary>
        <para>Render mode for the DetailPrototype.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.useInstancing">
      <summary>
        <para>Indicates whether this detail prototype uses for rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.usePrototypeMesh">
      <summary>
        <para>Indicates whether this detail prototype uses the Mesh object from the GameObject specified by prototype.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.DetailPrototype.Validate">
      <summary>
        <para>Returns true if the detail prototype is valid and the Terrain can accept it.</para>
      </summary>
      <param name="errorMessage">Returns a message that indicates the cause of failed validation.</param>
    </member>
    <member name="M:UnityEngine.DetailPrototype.Validate(System.String&amp;)">
      <summary>
        <para>Returns true if the detail prototype is valid and the Terrain can accept it.</para>
      </summary>
      <param name="errorMessage">Returns a message that indicates the cause of failed validation.</param>
    </member>
    <member name="T:UnityEngine.DetailRenderMode">
      <summary>
        <para>Render mode for detail prototypes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DetailRenderMode.Grass">
      <summary>
        <para>The detail prototype will use the grass shader.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DetailRenderMode.GrassBillboard">
      <summary>
        <para>The detail prototype will be rendered as billboards that are always facing the camera.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DetailRenderMode.VertexLit">
      <summary>
        <para>Will show the prototype using diffuse shading.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PatchExtents">
      <summary>
        <para>Structure containing minimum and maximum terrain patch height values.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PatchExtents.max">
      <summary>
        <para>Maximum height of a terrain patch.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PatchExtents.min">
      <summary>
        <para>Minimum height of a terrain patch.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SplatPrototype">
      <summary>
        <para>A Splat prototype is just a texture that is used by the TerrainData.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SplatPrototype.metallic">
      <summary>
        <para>The metallic value of the splat layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SplatPrototype.normalMap">
      <summary>
        <para>Normal map of the splat applied to the Terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SplatPrototype.smoothness">
      <summary>
        <para>The smoothness value of the splat layer when the main texture has no alpha channel.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SplatPrototype.texture">
      <summary>
        <para>Texture of the splat applied to the Terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SplatPrototype.tileOffset">
      <summary>
        <para>Offset of the tile texture of the SplatPrototype.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SplatPrototype.tileSize">
      <summary>
        <para>Size of the tile used in the texture of the SplatPrototype.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Terrain">
      <summary>
        <para>The Terrain component renders the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.activeTerrain">
      <summary>
        <para>The active Terrain. This is a convenient function to get to the main Terrain in the Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.activeTerrains">
      <summary>
        <para>The active terrains in the Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.allowAutoConnect">
      <summary>
        <para>Specifies if the terrain tile will be automatically connected to adjacent tiles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.bakeLightProbesForTrees">
      <summary>
        <para>Specifies if an array of internal light probes should be baked for terrain trees. Available only in editor.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.basemapDistance">
      <summary>
        <para>Heightmap patches beyond basemap distance will use a precomputed low res basemap.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.bottomNeighbor">
      <summary>
        <para>Terrain bottom neighbor.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.castShadows">
      <summary>
        <para>Should terrain cast shadows?.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.collectDetailPatches">
      <summary>
        <para>Collect detail patches from memory.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.compressedHolesFormat">
      <summary>
        <para>Graphics format of the Terrain holes Texture when it is compressed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.compressedHolesTextureFormat">
      <summary>
        <para>Texture format of the Terrain holes Texture when it is compressed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.deringLightProbesForTrees">
      <summary>
        <para>Removes ringing from probes on trees if enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.detailObjectDensity">
      <summary>
        <para>Density of detail objects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.detailObjectDistance">
      <summary>
        <para>Detail objects will be displayed up to this distance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.drawHeightmap">
      <summary>
        <para>Indicates whether Unity draws the Terrain geometry itself.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.drawInstanced">
      <summary>
        <para>Set to true to enable the terrain instance renderer. The default value is false.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.drawTreesAndFoliage">
      <summary>
        <para>Specify if terrain trees and details should be drawn.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.editorRenderFlags">
      <summary>
        <para>Controls what part of the terrain should be rendered.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.groupingID">
      <summary>
        <para>Grouping ID for auto connect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.heightmapFormat">
      <summary>
        <para>Graphics format of the Terrain heightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.heightmapMaximumLOD">
      <summary>
        <para>Lets you essentially lower the heightmap resolution used for rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.heightmapPixelError">
      <summary>
        <para>An approximation of how many pixels the terrain will pop in the worst case when switching lod.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.heightmapRenderTextureFormat">
      <summary>
        <para>RenderTextureFormat of the terrain heightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.holesFormat">
      <summary>
        <para>Graphics format of the Terrain holes Texture when it is not compressed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.holesRenderTextureFormat">
      <summary>
        <para>Render texture format of the Terrain holes Texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.keepUnusedRenderingResources">
      <summary>
        <para>Defines whether Unity frees per-Camera rendering resources for the Terrain when those resources aren't in use after a certain number of frames.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.leftNeighbor">
      <summary>
        <para>The Terrain tile to the left, which is in the negative X direction.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.legacyShininess">
      <summary>
        <para>The shininess value of the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.legacySpecular">
      <summary>
        <para>The specular color of the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.lightmapIndex">
      <summary>
        <para>The index of the baked lightmap applied to this terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.lightmapScaleOffset">
      <summary>
        <para>The UV scale &amp; offset used for a baked lightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.materialTemplate">
      <summary>
        <para>The custom material Unity uses to render the Terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.materialType">
      <summary>
        <para>The type of the material used to render the terrain. Could be one of the built-in types or custom. See Terrain.MaterialType.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.normalmapFormat">
      <summary>
        <para>Graphics format of the Terrain normal map texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.normalmapRenderTextureFormat">
      <summary>
        <para>Render texture format of the Terrain normal map texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.normalmapTexture">
      <summary>
        <para>Returns the normal map texture computed from sampling the heightmap. It is only used when terrain is rendered using instancing.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.normalmapTextureFormat">
      <summary>
        <para>Texture format of the Terrain normal map texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.patchBoundsMultiplier">
      <summary>
        <para>Set the terrain bounding box scale.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.preserveTreePrototypeLayers">
      <summary>
        <para>Allows you to specify how Unity chooses the for tree instances.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.realtimeLightmapIndex">
      <summary>
        <para>The index of the realtime lightmap applied to this terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.realtimeLightmapScaleOffset">
      <summary>
        <para>The UV scale &amp; offset used for a realtime lightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.reflectionProbeUsage">
      <summary>
        <para>How reflection probes are used for terrain. See Rendering.ReflectionProbeUsage.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.renderingLayerMask">
      <summary>
        <para>Determines which rendering layers the Terrain renderer lives on.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.rightNeighbor">
      <summary>
        <para>The Terrain tile to the left, which is in the positive X direction.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.shadowCastingMode">
      <summary>
        <para>Allows you to set the shadow casting mode for the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.terrainData">
      <summary>
        <para>The Terrain Data that stores heightmaps, terrain textures, detail meshes and trees.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.topNeighbor">
      <summary>
        <para>Terrain top neighbor.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.treeBillboardDistance">
      <summary>
        <para>Distance from the camera where trees will be rendered as billboards only.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.treeCrossFadeLength">
      <summary>
        <para>Total distance delta that trees will use to transition from billboard orientation to mesh orientation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.treeDistance">
      <summary>
        <para>The maximum distance at which trees are rendered.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.treeLODBiasMultiplier">
      <summary>
        <para>The multiplier to the current LOD bias used for rendering LOD trees (i.e. SpeedTree trees).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.treeMaximumFullLODCount">
      <summary>
        <para>Maximum number of trees rendered at full LOD.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Terrain.AddTreeInstance(UnityEngine.TreeInstance)">
      <summary>
        <para>Adds a tree instance to the terrain.</para>
      </summary>
      <param name="instance"></param>
    </member>
    <member name="M:UnityEngine.Terrain.ApplyDelayedHeightmapModification">
      <summary>
        <para>Update the terrain's LOD and vegetation information after making changes with TerrainData.SetHeightsDelayLOD.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Terrain.CreateTerrainGameObject(UnityEngine.TerrainData)">
      <summary>
        <para>Creates a Terrain including collider from TerrainData.</para>
      </summary>
      <param name="assignTerrain"></param>
    </member>
    <member name="M:UnityEngine.Terrain.Flush">
      <summary>
        <para>Flushes any change done in the terrain so it takes effect.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Terrain.GetActiveTerrains(System.Collections.Generic.List`1&lt;UnityEngine.Terrain&gt;)">
      <summary>
        <para>Populates a List of Terrains with the active Terrains in the Scene.</para>
      </summary>
      <param name="activeTerrainsList"> A List of Terrains this function populates with the active Terrains in the Scene.</param>
      <param name="terrainList"></param>
    </member>
    <member name="M:UnityEngine.Terrain.GetClosestReflectionProbes(System.Collections.Generic.List`1&lt;UnityEngine.Rendering.ReflectionProbeBlendInfo&gt;)">
      <summary>
        <para>Fills the list with reflection probes whose AABB intersects with terrain's AABB. Their weights are also provided. Weight shows how much influence the probe has on the terrain, and is used when the blending between multiple reflection probes occurs.</para>
      </summary>
      <param name="result">[in / out] A list to hold the returned reflection probes and their weights. See ReflectionProbeBlendInfo.</param>
    </member>
    <member name="M:UnityEngine.Terrain.GetKeepUnusedCameraRenderingResources(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="cameraInstanceID">The InstanceID of the camera being queried. See Object.GetInstanceID.</param>
      <returns>
        <para>Returns true if all rendering resources for the given camera are saved regardless of usage. Returns false if garbage collection is allowed to free unused resources.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Terrain.GetPosition">
      <summary>
        <para>Get the position of the terrain.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Terrain.GetSplatMaterialPropertyBlock(UnityEngine.MaterialPropertyBlock)">
      <summary>
        <para>Get the previously set splat material properties by copying to the dest MaterialPropertyBlock object.</para>
      </summary>
      <param name="dest"></param>
    </member>
    <member name="T:UnityEngine.Terrain.MaterialType">
      <summary>
        <para>The type of the material used to render a terrain object. Could be one of the built-in types or custom.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Terrain.MaterialType.BuiltInLegacyDiffuse">
      <summary>
        <para>A built-in material that uses the legacy Lambert (diffuse) lighting model and has optional normal map support.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Terrain.MaterialType.BuiltInLegacySpecular">
      <summary>
        <para>A built-in material that uses the legacy BlinnPhong (specular) lighting model and has optional normal map support.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Terrain.MaterialType.BuiltInStandard">
      <summary>
        <para>A built-in material that uses the standard physically-based lighting model. Inputs supported: smoothness, metallic / specular, normal.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Terrain.MaterialType.Custom">
      <summary>
        <para>Use a custom material given by Terrain.materialTemplate.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Terrain.SampleHeight(UnityEngine.Vector3)">
      <summary>
        <para>Samples the height at the given position defined in world space, relative to the Terrain space.</para>
      </summary>
      <param name="worldPosition"></param>
    </member>
    <member name="M:UnityEngine.Terrain.SetConnectivityDirty">
      <summary>
        <para>Marks the current connectivity status as invalid.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Terrain.SetKeepUnusedCameraRenderingResources(System.Int32,System.Boolean)">
      <summary>
        <para>Defines whether Unity cleans up rendering resources for a given Camera during garbage collection.</para>
      </summary>
      <param name="cameraInstanceID">The InstanceID of the camera for which freeUnusedRenderingResources is being set. See Object.GetInstanceID.</param>
      <param name="freeUnusedRenderingResources">The value to set to this camera's freeUnusedRenderingResources flag.</param>
      <param name="keepUnused"></param>
    </member>
    <member name="M:UnityEngine.Terrain.SetNeighbors(UnityEngine.Terrain,UnityEngine.Terrain,UnityEngine.Terrain,UnityEngine.Terrain)">
      <summary>
        <para>Lets you set up the connection between neighboring Terrain tiles. This ensures LOD matches up on neighboring Terrain tiles.</para>
      </summary>
      <param name="left">The Terrain tile to the left is in the negative X direction.</param>
      <param name="top">The Terrain tile to the top is in the positive Z direction.</param>
      <param name="right">The Terrain tile to the right is in the positive X direction.</param>
      <param name="bottom">The Terrain tile to the bottom is in the negative Z direction.</param>
    </member>
    <member name="M:UnityEngine.Terrain.SetSplatMaterialPropertyBlock(UnityEngine.MaterialPropertyBlock)">
      <summary>
        <para>Set the additional material properties when rendering the terrain heightmap using the splat material.</para>
      </summary>
      <param name="properties"></param>
    </member>
    <member name="T:UnityEngine.TerrainCallbacks">
      <summary>
        <para>This static class provides events that Unity triggers when Terrain data changes.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.TerrainCallbacks.heightmapChanged(UnityEngine.TerrainCallbacks/HeightmapChangedCallback)">
      <summary>
        <para>This event is triggered after there are changes to Terrain height data.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.TerrainCallbacks.textureChanged(UnityEngine.TerrainCallbacks/TextureChangedCallback)">
      <summary>
        <para>This event is triggered after there are changes to Terrain textures.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="T:UnityEngine.TerrainCallbacks.HeightmapChangedCallback">
      <summary>
        <para>Use this delegate type with heightmapChanged to monitor all changes to the Terrain heightmap.</para>
      </summary>
      <param name="terrain">The Terrain object that references a changed TerrainData asset.</param>
      <param name="heightRegion">The heightmap region that changed, in samples.</param>
      <param name="synched">Indicates whether the changes were fully synchronized back to CPU memory.</param>
    </member>
    <member name="T:UnityEngine.TerrainCallbacks.TextureChangedCallback">
      <summary>
        <para>Use this delegate type with textureChanged to monitor all the changes to Terrain textures.</para>
      </summary>
      <param name="terrain">The Terrain object that references a changed TerrainData asset.</param>
      <param name="textureName">The name of the texture that changed.</param>
      <param name="texelRegion">The region of the Terrain texture that changed, in texel coordinates.</param>
      <param name="synched">Indicates whether the changes were fully synchronized back to CPU memory.</param>
    </member>
    <member name="T:UnityEngine.TerrainChangedFlags">
      <summary>
        <para>Indicate the types of changes to the terrain in OnTerrainChanged callback.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.DelayedHeightmapUpdate">
      <summary>
        <para>Indicates a change to the heightmap data without computing LOD.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.DelayedHolesUpdate">
      <summary>
        <para>Indicates a change to the Terrain holes data, which doesn't include LOD calculations and tree/vegetation updates.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.FlushEverythingImmediately">
      <summary>
        <para>Indicates that a change was made to the terrain that was so significant that the internal rendering data need to be flushed and recreated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.Heightmap">
      <summary>
        <para>Indicates a change to the heightmap data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.HeightmapResolution">
      <summary>
        <para>Indicates a change to the heightmap resolution.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.Holes">
      <summary>
        <para>Indicates a change to the Terrain holes data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.RemoveDirtyDetailsImmediately">
      <summary>
        <para>Indicates a change to the detail data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.TreeInstances">
      <summary>
        <para>Indicates a change to the tree data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.WillBeDestroyed">
      <summary>
        <para>Indicates that the TerrainData object is about to be destroyed.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TerrainData">
      <summary>
        <para>The TerrainData class stores heightmaps, detail mesh positions, tree instances, and terrain texture alpha maps.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapHeight">
      <summary>
        <para>Height of the alpha map. (Read only.)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapLayers">
      <summary>
        <para>Number of alpha map layers.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapResolution">
      <summary>
        <para>The size of the alpha map in texels for either the width or the height.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapTextureCount">
      <summary>
        <para>Returns the number of alphamap textures.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapTextures">
      <summary>
        <para>Alpha map textures used by the Terrain. Used by Terrain Inspector for undo.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapWidth">
      <summary>
        <para>Width of the alpha map.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.baseMapResolution">
      <summary>
        <para>Resolution of the base map used for rendering far patches on the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.bounds">
      <summary>
        <para>The local bounding box of the TerrainData object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.detailHeight">
      <summary>
        <para>The resolution of the detail data stored in TerrainData.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.detailPatchCount">
      <summary>
        <para>The number of patches along a terrain tile edge. This is squared to make a grid of patches.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.detailPrototypes">
      <summary>
        <para>Contains the detail texture/meshes that the Terrain has.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.detailResolution">
      <summary>
        <para>Detail Resolution of the TerrainData.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.detailResolutionPerPatch">
      <summary>
        <para>Detail Resolution of each patch. A larger value will decrease the number of batches used by detail objects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.detailWidth">
      <summary>
        <para>The resolution of the detail data stored in TerrainData.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.enableHolesTextureCompression">
      <summary>
        <para>Enable the Terrain holes Texture compression.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.heightmapHeight">
      <summary>
        <para>Height of the terrain in samples (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.heightmapResolution">
      <summary>
        <para>The size of the heightmap in texels for either the width or the height.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.heightmapScale">
      <summary>
        <para>Returns a Vector3 where the x and z components are the size of each heightmap sample (i.e. the space between two neighboring heightmap samples), and the y component is the entire Terrain's height range in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.heightmapTexture">
      <summary>
        <para>Returns the heightmap texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.heightmapWidth">
      <summary>
        <para>Width of the terrain in samples (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.holesResolution">
      <summary>
        <para>Returns the Terrain holes resolution for both the data and the Texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.holesTexture">
      <summary>
        <para>Returns the Terrain holes Texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.size">
      <summary>
        <para>The total size in world units of the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.splatPrototypes">
      <summary>
        <para>Splat texture used by the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.terrainLayers">
      <summary>
        <para>Retrieves the terrain layers used by the current terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.thickness">
      <summary>
        <para>The thickness of the terrain used for collision detection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.treeInstanceCount">
      <summary>
        <para>Returns the number of tree instances.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.treeInstances">
      <summary>
        <para>Contains the current trees placed in the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.treePrototypes">
      <summary>
        <para>The list of tree prototypes available in the inspector.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.wavingGrassAmount">
      <summary>
        <para>Amount of waving grass in the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.wavingGrassSpeed">
      <summary>
        <para>Speed of the waving grass.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.wavingGrassStrength">
      <summary>
        <para>Strength of the waving grass in the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.wavingGrassTint">
      <summary>
        <para>Color of the waving grass that the terrain has.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.AlphamapTextureName">
      <summary>
        <para>The name for the Terrain alpha map textures.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainData.ComputeDetailInstanceTransforms(System.Int32,System.Int32,System.Int32,System.Single,UnityEngine.Bounds&amp;)">
      <summary>
        <para>This function computes and returns an array of detail object transforms for the specified patch and the specified prototype. You can use this function to retrieve the exact same transform data the Unity engine uses for detail rendering.</para>
      </summary>
      <param name="patchX">The x index of the patch.</param>
      <param name="patchY">The y index of the patch.</param>
      <param name="layer">The prototype index.</param>
      <param name="density">The density setting of the detail.</param>
      <param name="bounds">Returns the bounds of the detail objects.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.CopyActiveRenderTextureToHeightmap(UnityEngine.RectInt,UnityEngine.Vector2Int,UnityEngine.TerrainHeightmapSyncControl)">
      <summary>
        <para>Copies the specified part of the active RenderTexture to the Terrain heightmap texture.</para>
      </summary>
      <param name="sourceRect">The part of the active Render Texture to copy.</param>
      <param name="dest">The X and Y coordinates of the heightmap texture to copy into.</param>
      <param name="syncControl">Controls how CPU synchronization is performed.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.CopyActiveRenderTextureToTexture(System.String,System.Int32,UnityEngine.RectInt,UnityEngine.Vector2Int,System.Boolean)">
      <summary>
        <para>Copies the specified part of the active RenderTexture to the Terrain texture.</para>
      </summary>
      <param name="textureName">The name of the Terrain texture to copy into.</param>
      <param name="textureIndex">The index of the Terrain texture to copy into.</param>
      <param name="sourceRect">The part of the active Render Texture to copy.</param>
      <param name="dest">The X and Y coordinates of the Terrain texture to copy into.</param>
      <param name="allowDelayedCPUSync">Specifies whether to allow delayed CPU synchronization of the texture.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.DirtyHeightmapRegion(UnityEngine.RectInt,UnityEngine.TerrainHeightmapSyncControl)">
      <summary>
        <para>Marks the specified part of the heightmap as dirty.</para>
      </summary>
      <param name="region">The rectangular region to mark as dirty.</param>
      <param name="syncControl">Controls how CPU synchronization is performed.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.DirtyTextureRegion(System.String,UnityEngine.RectInt,System.Boolean)">
      <summary>
        <para>Marks the specified part of the Terrain texture as dirty.</para>
      </summary>
      <param name="textureName">The name of the Terrain texture.</param>
      <param name="region">The rectangular region to mark as dirty.</param>
      <param name="allowDelayedCPUSync">Specifies whether to allow delayed CPU synchronization of the texture.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetAlphamaps(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Returns the alpha map at a position x, y given a width and height.</para>
      </summary>
      <param name="x">The x offset to read from.</param>
      <param name="y">The y offset to read from.</param>
      <param name="width">The width of the alpha map area to read.</param>
      <param name="height">The height of the alpha map area to read.</param>
      <returns>
        <para>A 3D array of floats, where the 3rd dimension represents the mixing weight of each splatmap at each x,y coordinate.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainData.GetAlphamapTexture(System.Int32)">
      <summary>
        <para>Returns the alphamap texture at the specified index.</para>
      </summary>
      <param name="index">Index of the alphamap.</param>
      <returns>
        <para>Alphamap texture at the specified index.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainData.GetClampedDetailPatches(System.Single)">
      <summary>
        <para>Returns an array of detail patches, which are each identified by X-Z coordinates. Detail objects in the patches are clamped to the maximum count.</para>
      </summary>
      <param name="density">The detail density value. See Terrain.detailObjectDensity.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetDetailLayer(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Returns a 2D array of the detail object density (i.e. the number of detail objects for this layer) in the specific location.</para>
      </summary>
      <param name="xBase">First x index of detail object density data to retrieve.</param>
      <param name="yBase">First y index of detail object density data to retrieve.</param>
      <param name="width">The amount of detail object density data to retrieve along the Terrain's x axis.</param>
      <param name="height">The amount of detail object density data to retrieve along the Terrain's z axis.</param>
      <param name="layer">The index of the detail in the TerrainData.detailPrototypes array.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetHeight(System.Int32,System.Int32)">
      <summary>
        <para>Gets the world space height of the Terrain at a certain point x,y without adding the Terrain's world position y.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetHeights(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Gets an array of heightmap samples.</para>
      </summary>
      <param name="xBase">First index of heightmap samples to retrieve along the Terrain's x axis.</param>
      <param name="yBase">First index of heightmap samples to retrieve along the Terrain's z axis.</param>
      <param name="width">Number of samples to retrieve along the Terrain's x axis.</param>
      <param name="height">Number of samples to retrieve along the Terrain's z axis.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetHoles(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Gets an array of Terrain holes samples.</para>
      </summary>
      <param name="xBase">First x index of Terrain holes samples to retrieve.</param>
      <param name="yBase">First y index of Terrain holes samples to retrieve.</param>
      <param name="width">Number of samples to retrieve along the Terrain holes x axis.</param>
      <param name="height">Number of samples to retrieve along the Terrain holes y axis.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetInterpolatedHeight(System.Single,System.Single)">
      <summary>
        <para>Gets an interpolated height at a point x,y. The x and y coordinates are clamped to [0, 1].</para>
      </summary>
      <param name="x">X coordinate of the point in the range of [0, 1].</param>
      <param name="y">Y coordinate of the point in the range of [0, 1].</param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetInterpolatedHeights(System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Gets an array of terrain height values using the normalized x,y coordinates.</para>
      </summary>
      <param name="xBase">The base x coordinate.</param>
      <param name="yBase">The base y coordinate.</param>
      <param name="xCount">The number of queries along the X axis.</param>
      <param name="yCount">The number of queries along the Y axis.</param>
      <param name="xInterval">The interval between each query along the X axis.</param>
      <param name="yInterval">The interval between each query along the Y axis.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetInterpolatedHeights(System.Single[,],System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Fills the array with Terrain height values using normalized x,y coordinates.</para>
      </summary>
      <param name="results">The array to fill with height values.</param>
      <param name="resultXOffset">The offset from the beginning of the array, along the X axis, at which to start filling in height values.</param>
      <param name="resultYOffset">The offset from the beginning of the array, along the Y axis, at which to start filling in height values.</param>
      <param name="xBase">The base x coordinate.</param>
      <param name="yBase">The base y coordinate.</param>
      <param name="xCount">The number of queries along the X axis.</param>
      <param name="yCount">The number of queries along the Y axis.</param>
      <param name="xInterval">The interval between each query along the X axis.</param>
      <param name="yInterval">The interval between each query along the Y axis.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetInterpolatedNormal(System.Single,System.Single)">
      <summary>
        <para>Get an interpolated normal at a given location.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetMaximumHeightError">
      <summary>
        <para>Returns an array of tesselation maximum height error values per renderable terrain patch.  The returned array can be modified and passed to OverrideMaximumHeightError.</para>
      </summary>
      <returns>
        <para>Float array of maximum height error values.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainData.GetPatchMinMaxHeights">
      <summary>
        <para>Returns an array of min max height values for all the renderable patches in a terrain.  The returned array can be modified and then passed to OverrideMinMaxPatchHeights.</para>
      </summary>
      <returns>
        <para>Minimum and maximum height values for each patch.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainData.GetSteepness(System.Single,System.Single)">
      <summary>
        <para>Gets the gradient of the terrain at point (x,y).</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetSupportedLayers(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Returns an array of all supported detail layer indices in the area.</para>
      </summary>
      <param name="xBase"></param>
      <param name="yBase"></param>
      <param name="totalWidth"></param>
      <param name="totalHeight"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetTreeInstance(System.Int32)">
      <summary>
        <para>Gets the tree instance at the specified index. It is used as a faster version of treeInstances[index] as this function doesn't create the entire tree instances array.</para>
      </summary>
      <param name="index">The index of the tree instance.</param>
    </member>
    <member name="P:UnityEngine.TerrainData.HolesTextureName">
      <summary>
        <para>The name for the Terrain holes Texture.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainData.IsHole(System.Int32,System.Int32)">
      <summary>
        <para>Gets whether a certain point at x,y is a hole.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.OverrideMaximumHeightError(System.Single[])">
      <summary>
        <para>Override the maximum tessellation height error with user provided values.  Note that the overriden values get reset when the terrain resolution is changed and stays unchanged when the terrain heightmap is painted or changed via script.</para>
      </summary>
      <param name="maxError">Provided maximum height error values.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.OverrideMinMaxPatchHeights(UnityEngine.PatchExtents[])">
      <summary>
        <para>Override the minimum and maximum patch heights for every renderable terrain patch.  Note that the overriden values get reset when the terrain resolution is changed and stays unchanged when the terrain heightmap is painted or changed via script.</para>
      </summary>
      <param name="minMaxHeights">Array of minimum and maximum terrain patch height values.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.RefreshPrototypes">
      <summary>
        <para>Reloads all the values of the available prototypes (ie, detail mesh assets) in the TerrainData Object.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainData.SetAlphamaps(System.Int32,System.Int32,System.Single[,,])">
      <summary>
        <para>Assign all splat values in the given map area.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="map"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetBaseMapDirty">
      <summary>
        <para>Marks the terrain data as dirty to trigger an update of the terrain basemap texture.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainData.SetDetailLayer(System.Int32,System.Int32,System.Int32,System.Int32[,])">
      <summary>
        <para>Sets the detail layer density map.</para>
      </summary>
      <param name="xBase"></param>
      <param name="yBase"></param>
      <param name="layer"></param>
      <param name="details"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetDetailResolution(System.Int32,System.Int32)">
      <summary>
        <para>Sets the resolution of the detail map.</para>
      </summary>
      <param name="detailResolution">Specifies the number of pixels in the detail resolution map. A larger detailResolution, leads to more accurate detail object painting.</param>
      <param name="resolutionPerPatch">Specifies the size in pixels of each individually rendered detail patch. A larger number reduces draw calls, but might increase triangle count since detail patches are culled on a per batch basis. A recommended value is 16. If you use a very large detail object distance and your grass is very sparse, it makes sense to increase the value.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetHeights(System.Int32,System.Int32,System.Single[,])">
      <summary>
        <para>Sets an array of heightmap samples.</para>
      </summary>
      <param name="xBase">First x index of heightmap samples to set.</param>
      <param name="yBase">First y index of heightmap samples to set.</param>
      <param name="heights">Array of heightmap samples to set (values range from 0 to 1, array indexed as [y,x]).</param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetHeightsDelayLOD(System.Int32,System.Int32,System.Single[,])">
      <summary>
        <para>Sets an array of heightmap samples.</para>
      </summary>
      <param name="xBase">First x index of heightmap samples to set.</param>
      <param name="yBase">First y index of heightmap samples to set.</param>
      <param name="heights">Array of heightmap samples to set (values range from 0 to 1, array indexed as [y,x]).</param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetHoles(System.Int32,System.Int32,System.Boolean[,])">
      <summary>
        <para>Sets an array of Terrain holes samples.</para>
      </summary>
      <param name="xBase">First x index of Terrain holes samples to set.</param>
      <param name="yBase">First y index of Terrain holes samples to set.</param>
      <param name="holes">Array of Terrain holes samples to set (array indexed as [y,x]).</param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetHolesDelayLOD(System.Int32,System.Int32,System.Boolean[,])">
      <summary>
        <para>Sets an array of Terrain holes samples.</para>
      </summary>
      <param name="xBase">First x index of Terrain holes samples to set.</param>
      <param name="yBase">First y index of Terrain holes samples to set.</param>
      <param name="holes">Array of Terrain holes samples to set (array indexed as [y,x]).</param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetTerrainLayersRegisterUndo(UnityEngine.TerrainLayer[],System.String)">
      <summary>
        <para>This function sets the terrainLayers property, and in addition, registers the action to the Editor's undo stack.</para>
      </summary>
      <param name="terrainLayers">The Terrain Layer assets to set.</param>
      <param name="undoName">The name of the Editor's undo action.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetTreeInstance(System.Int32,UnityEngine.TreeInstance)">
      <summary>
        <para>Sets the tree instance with new parameters at the specified index. However, you cannot change TreeInstance.prototypeIndex and TreeInstance.position. If you change them, the method throws an ArgumentException.</para>
      </summary>
      <param name="index">The index of the tree instance.</param>
      <param name="instance">The new TreeInstance value.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetTreeInstances(UnityEngine.TreeInstance[],System.Boolean)">
      <summary>
        <para>Sets the Tree Instance array, and optionally snaps Trees onto the surface of the Terrain heightmap.</para>
      </summary>
      <param name="instances">The array of TreeInstance objects.</param>
      <param name="snapToHeightmap">Specifies whether to snap Trees to the Terrain heightmap.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.SyncHeightmap">
      <summary>
        <para>Performs synchronization queued by previous calls to CopyActiveRenderTextureToHeightmap and DirtyHeightmapRegion, which makes the height data and LOD data used for tessellation up to date.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainData.SyncTexture(System.String)">
      <summary>
        <para>Performs synchronization queued by previous calls to CopyActiveRenderTextureToTexture and DirtyTextureRegion, which makes CPU data of the Terrain textures up to date.</para>
      </summary>
      <param name="textureName">The name of the Terrain texture to synchronize.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.UpdateDirtyRegion(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Triggers an update to integrate modifications done to the heightmap outside of unity.</para>
      </summary>
      <param name="x">Start X position of the dirty heightmap region.</param>
      <param name="y">Start Y position of the dirty heightmap region.</param>
      <param name="width">Width of the dirty heightmap region.</param>
      <param name="height">Width of the dirty heightmap region.</param>
      <param name="syncHeightmapTextureImmediately">Update immediately, instead of deferring the update.</param>
    </member>
    <member name="T:UnityEngine.TerrainExtensions">
      <summary>
        <para>Extension methods to the Terrain class, used only for the UpdateGIMaterials method used by the Global Illumination System.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainExtensions.UpdateGIMaterials(UnityEngine.Terrain)">
      <summary>
        <para>Schedules an update of the albedo and emissive Textures of a system that contains the Terrain.</para>
      </summary>
      <param name="terrain"></param>
      <param name="x"></param>
      <param name="y"></param>
      <param name="width"></param>
      <param name="height"></param>
    </member>
    <member name="M:UnityEngine.TerrainExtensions.UpdateGIMaterials(UnityEngine.Terrain,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Schedules an update of the albedo and emissive Textures of a system that contains the Terrain.</para>
      </summary>
      <param name="terrain"></param>
      <param name="x"></param>
      <param name="y"></param>
      <param name="width"></param>
      <param name="height"></param>
    </member>
    <member name="T:UnityEngine.TerrainHeightmapSyncControl">
      <summary>
        <para>Controls what Terrain heightmap data to synchronize when there are changes to the heightmap texture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainHeightmapSyncControl.HeightAndLod">
      <summary>
        <para>Synchronizes height data of the heightmap texture from the GPU back to CPU memory. Then computes LOD data, used for determining the tessellation level, from the height data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainHeightmapSyncControl.HeightOnly">
      <summary>
        <para>Synchronizes only height data of the heightmap texture from the GPU back to CPU memory.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainHeightmapSyncControl.None">
      <summary>
        <para>Does not synchronize the height data nor the LOD data.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TerrainLayer">
      <summary>
        <para>Description of a terrain layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainLayer.diffuseRemapMax">
      <summary>
        <para>A Vector4 value specifying the maximum RGBA value that the diffuse texture maps to when the value of the channel is 1.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainLayer.diffuseRemapMin">
      <summary>
        <para>A Vector4 value specifying the minimum RGBA value that the diffuse texture maps to when the value of the channel is 0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainLayer.diffuseTexture">
      <summary>
        <para>The diffuse texture used by the terrain layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainLayer.maskMapRemapMax">
      <summary>
        <para>A Vector4 value specifying the maximum RGBA value that the mask map texture maps to when the value of the channel is 1.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainLayer.maskMapRemapMin">
      <summary>
        <para>A Vector4 value specifying the minimum RGBA value that the mask map texture maps to when the value of the channel is 0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainLayer.maskMapTexture">
      <summary>
        <para>The mask map texture used by the terrain layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainLayer.metallic">
      <summary>
        <para>Metallic factor used by the terrain layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainLayer.normalMapTexture">
      <summary>
        <para>Normal map texture used by the terrain layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainLayer.normalScale">
      <summary>
        <para>A float value that scales the normal vector. The minimum value is 0, the maximum value is 1.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainLayer.smoothness">
      <summary>
        <para>Smoothness of the specular reflection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainLayer.specular">
      <summary>
        <para>Specular color.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainLayer.tileOffset">
      <summary>
        <para>UV tiling offset.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainLayer.tileSize">
      <summary>
        <para>UV Tiling size.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TerrainRenderFlags">
      <summary>
        <para>Enum provding terrain rendering options.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainRenderFlags.All">
      <summary>
        <para>Render all options.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainRenderFlags.Details">
      <summary>
        <para>Render terrain details.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainRenderFlags.Heightmap">
      <summary>
        <para>Render heightmap.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainRenderFlags.Trees">
      <summary>
        <para>Render trees.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TerrainTools.BrushTransform">
      <summary>
        <para>Represents a linear 2D transformation between brush UV space and a target XY space (typically this is a Terrain-local object space.)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.BrushTransform.brushOrigin">
      <summary>
        <para>(Read Only) Brush UV origin, in XY space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.BrushTransform.brushU">
      <summary>
        <para>(Read Only) Brush U vector, in XY space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.BrushTransform.brushV">
      <summary>
        <para>(Read Only) Brush V vector, in XY space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.BrushTransform.targetOrigin">
      <summary>
        <para>(Read Only) Target XY origin, in Brush UV space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.BrushTransform.targetX">
      <summary>
        <para>(Read Only) Target X vector, in Brush UV space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.BrushTransform.targetY">
      <summary>
        <para>(Read Only) Target Y vector, in Brush UV space.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainTools.BrushTransform.#ctor(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Creates a BrushTransform.</para>
      </summary>
      <param name="brushOrigin">Origin of the brush, in target XY space.</param>
      <param name="brushU">Brush U vector, in target XY space.</param>
      <param name="brushV">Brush V vector, in target XY space.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.BrushTransform.FromBrushUV(UnityEngine.Vector2)">
      <summary>
        <para>Applies the transform to convert a Brush UV coordinate to the target XY space.</para>
      </summary>
      <param name="brushUV">Brush UV coordinate to transform.</param>
      <returns>
        <para>Target XY coordinate.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.BrushTransform.FromRect(UnityEngine.Rect)">
      <summary>
        <para>Creates an axis-aligned BrushTransform from a rectangle.</para>
      </summary>
      <param name="brushRect">Brush rectangle, in target XY coordinates.</param>
      <returns>
        <para>BrushTransform describing the brush.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.BrushTransform.GetBrushXYBounds">
      <summary>
        <para>Get the axis-aligned bounding rectangle of the brush, in target XY space.</para>
      </summary>
      <returns>
        <para>Bounding rectangle in target XY space.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.BrushTransform.ToBrushUV(UnityEngine.Vector2)">
      <summary>
        <para>Applies the transform to convert a target XY coordinate to Brush UV space.</para>
      </summary>
      <param name="targetXY">Point in target XY space.</param>
      <returns>
        <para>Point transformed to Brush UV space.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.TerrainTools.PaintContext">
      <summary>
        <para>The context for a paint operation that may span multiple connected Terrain tiles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.destinationRenderTexture">
      <summary>
        <para>(Read Only) RenderTexture that an edit operation writes to modify the data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.heightWorldSpaceMin">
      <summary>
        <para>The minimum height of all Terrain tiles that this PaintContext touches in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.heightWorldSpaceSize">
      <summary>
        <para>The height range (from Min to Max) of all Terrain tiles that this PaintContext touches in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.kNormalizedHeightScale">
      <summary>
        <para>Unity uses this value internally to transform a [0, 1] height value to a texel value, which is stored in TerrainData.heightmapTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.oldRenderTexture">
      <summary>
        <para>(Read Only) The value of RenderTexture.active at the time CreateRenderTargets is called.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.originTerrain">
      <summary>
        <para>(Read Only) The Terrain used to build the PaintContext.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.pixelRect">
      <summary>
        <para>(Read Only) The pixel rectangle that this PaintContext represents.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.pixelSize">
      <summary>
        <para>(Read Only) The size of a PaintContext pixel in terrain units (as defined by originTerrain.)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.sourceRenderTexture">
      <summary>
        <para>(Read Only) Render target that stores the original data from the Terrain tiles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.targetTextureHeight">
      <summary>
        <para>(Read Only) The height of the target terrain texture.  This is the resolution for a single Terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.targetTextureWidth">
      <summary>
        <para>(Read Only) The width of the target terrain texture.  This is the resolution for a single Terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.terrainCount">
      <summary>
        <para>(Read Only) The number of Terrain tiles in this PaintContext.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.ApplyDelayedActions">
      <summary>
        <para>Flushes the delayed actions created by PaintContext heightmap and alphamap modifications.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.Cleanup(System.Boolean)">
      <summary>
        <para>Releases the allocated resources of this PaintContext.</para>
      </summary>
      <param name="restoreRenderTexture">When true, indicates that this function restores RenderTexture.active</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.CreateFromBounds(UnityEngine.Terrain,UnityEngine.Rect,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <para>Constructs a PaintContext that you can use to edit a texture on a Terrain, in the region defined by boundsInTerrainSpace and extraBorderPixels.</para>
      </summary>
      <param name="terrain">Terrain that defines terrain space for this PaintContext.</param>
      <param name="boundsInTerrainSpace">Terrain space bounds to edit in the target terrain texture.</param>
      <param name="inputTextureWidth">Width of the input Terrain Texture for all connected Terrains.</param>
      <param name="inputTextureHeight">Height of the input Terrain Texture for all connected Terrains.</param>
      <param name="extraBorderPixels">Number of extra border pixels required. The default value is 0.</param>
      <param name="sharedBoundaryTexel">Whether to stretch the Textures so that edge texels lie on the Terrain boundary, and are shared with connected Terrains.</param>
      <param name="fillOutsideTerrain">Whether to fill empty space outside of the Terrain tiles with data from the nearest tile.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.CreateRenderTargets(UnityEngine.RenderTextureFormat)">
      <summary>
        <para>Creates the sourceRenderTexture and destinationRenderTexture.</para>
      </summary>
      <param name="colorFormat">Render Texture format.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.#ctor(UnityEngine.Terrain,UnityEngine.RectInt,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <para>Creates a new PaintContext, to edit a target texture on a Terrain, in a region defined by pixelRect.</para>
      </summary>
      <param name="terrain">Terrain that defines terrain space for this PaintContext.</param>
      <param name="pixelRect">Pixel rectangle to edit in the target terrain texture.</param>
      <param name="targetTextureWidth">Width of the target terrain texture (per Terrain).</param>
      <param name="targetTextureHeight">Height of the target terrain texture (per Terrain).</param>
      <param name="sharedBoundaryTexel">Whether to stretch the Textures so that edge texels lie on the Terrain boundary, and are shared with connected Terrains.</param>
      <param name="fillOutsideTerrain">Whether to fill empty space outside of the Terrain tiles with data from the nearest tile.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.Gather(System.Func`2&lt;UnityEngine.TerrainTools.PaintContext/ITerrainInfo,UnityEngine.Texture&gt;,UnityEngine.Color,UnityEngine.Material,System.Int32,System.Action`1&lt;UnityEngine.TerrainTools.PaintContext/ITerrainInfo&gt;,System.Action`1&lt;UnityEngine.TerrainTools.PaintContext/ITerrainInfo&gt;)">
      <summary>
        <para>Gathers user-specified Texture data into sourceRenderTexture.</para>
      </summary>
      <param name="terrainSource">A function that returns the Texture data to collect from each Terrain.</param>
      <param name="defaultColor">The default color for sourceRenderTexture.</param>
      <param name="blitMaterial">The material used to copy the data.  If null, the default blit material is used.</param>
      <param name="blitPass">The material pass used to copy the data.</param>
      <param name="beforeBlit">An optional action to call before copying from each Terrain. The default is null.</param>
      <param name="afterBlit">An optional action to call after copying from each Terrain. The default is null.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.GatherAlphamap(UnityEngine.TerrainLayer,System.Boolean)">
      <summary>
        <para>Gathers the alphamap information into sourceRenderTexture.</para>
      </summary>
      <param name="inputLayer">TerrainLayer used for painting.</param>
      <param name="addLayerIfDoesntExist">Set to true to specify that the inputLayer is added to the terrain if it does not already exist. Set to false to specify that terrain layers are not added to the terrain.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.GatherHeightmap">
      <summary>
        <para>Gathers the heightmap information into sourceRenderTexture.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.GatherHoles">
      <summary>
        <para>Gathers the Terrain holes information into sourceRenderTexture.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.GatherNormals">
      <summary>
        <para>Gathers the normal information into sourceRenderTexture.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.GetClippedPixelRectInRenderTexturePixels(System.Int32)">
      <summary>
        <para>Retrieves the clipped pixel rectangle for a Terrain, relative to the PaintContext render textures.</para>
      </summary>
      <param name="terrainIndex">Index of the Terrain.</param>
      <returns>
        <para>Returns the clipped pixel rectangle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.GetClippedPixelRectInTerrainPixels(System.Int32)">
      <summary>
        <para>Retrieves the clipped pixel rectangle for a Terrain.</para>
      </summary>
      <param name="terrainIndex">Index of the Terrain.</param>
      <returns>
        <para>Returns the clipped pixel rectangle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.GetTerrain(System.Int32)">
      <summary>
        <para>Retrieves a Terrain from the PaintContext.</para>
      </summary>
      <param name="terrainIndex">Index of the terrain.</param>
      <returns>
        <para>Returns the Terrain object.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.TerrainTools.PaintContext.ITerrainInfo">
      <summary>
        <para>Interface that conveys information about a Terrain within the PaintContext area.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.ITerrainInfo.clippedPCPixels">
      <summary>
        <para>PaintContext.pixelRect, clipped to this Terrain, in PaintContext pixel coordinates. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.ITerrainInfo.clippedTerrainPixels">
      <summary>
        <para>PaintContext.pixelRect, clipped to this Terrain, in Terrain pixel coordinates. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.ITerrainInfo.gatherEnable">
      <summary>
        <para>Controls gathering from this Terrain within the PaintContext. The default is true.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.ITerrainInfo.paddedPCPixels">
      <summary>
        <para>Use this property to fill empty regions in PaintContext. It is the same as clippedPCPixels with padding around unconnected Terrain edges. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.ITerrainInfo.paddedTerrainPixels">
      <summary>
        <para>Use this property to fill empty regions in PaintContext. It is the same as clippedTerrainPixels with padding around unconnected Terrain edges. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.ITerrainInfo.scatterEnable">
      <summary>
        <para>Controls scattering to this Terrain within the PaintContext. The default is true.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.ITerrainInfo.terrain">
      <summary>
        <para>The Terrain represented by this context. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainTools.PaintContext.ITerrainInfo.userData">
      <summary>
        <para>Modify this value, if required, to store and retrieve values relevant to the PaintContext operation.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.Scatter(System.Func`2&lt;UnityEngine.TerrainTools.PaintContext/ITerrainInfo,UnityEngine.RenderTexture&gt;,UnityEngine.Material,System.Int32,System.Action`1&lt;UnityEngine.TerrainTools.PaintContext/ITerrainInfo&gt;,System.Action`1&lt;UnityEngine.TerrainTools.PaintContext/ITerrainInfo&gt;)">
      <summary>
        <para>Applies an edited PaintContext by copying modifications back to user-specified RenderTextures for the source Terrain tiles.</para>
      </summary>
      <param name="terrainDest">Function returning the RenderTexture to be written for each Terrain.</param>
      <param name="blitMaterial">The material used to copy the data.  If null, the default blit material is used.</param>
      <param name="blitPass">The material pass used to copy the data.  Its default value is 0.</param>
      <param name="beforeBlit">An optional action to call before copying to each Terrain.</param>
      <param name="afterBlit">An optional action to call after copying to each Terrain.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.ScatterAlphamap(System.String)">
      <summary>
        <para>Applies an edited alphamap PaintContext by copying modifications back to the source Terrain tiles.</para>
      </summary>
      <param name="editorUndoName">Unique name used for the undo stack.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.ScatterHeightmap(System.String)">
      <summary>
        <para>Applies an edited heightmap PaintContext by copying modifications back to the source Terrain tiles.</para>
      </summary>
      <param name="editorUndoName">Unique name used for the undo stack.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.PaintContext.ScatterHoles(System.String)">
      <summary>
        <para>Applies an edited Terrain holes PaintContext by copying modifications back to the source Terrain tiles.</para>
      </summary>
      <param name="editorUndoName">Unique name used for the undo stack.</param>
    </member>
    <member name="T:UnityEngine.TerrainTools.TerrainBuiltinPaintMaterialPasses">
      <summary>
        <para>Built-in render passes for paint material.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainTools.TerrainBuiltinPaintMaterialPasses.PaintHoles">
      <summary>
        <para>Built-in render pass for painting Terrain holes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainTools.TerrainBuiltinPaintMaterialPasses.PaintTexture">
      <summary>
        <para>Built-in render pass for painting the splatmap texture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainTools.TerrainBuiltinPaintMaterialPasses.RaiseLowerHeight">
      <summary>
        <para>Built-in render pass for raising and lowering Terrain height.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainTools.TerrainBuiltinPaintMaterialPasses.SetHeights">
      <summary>
        <para>Built-in render pass for setting Terrain height.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainTools.TerrainBuiltinPaintMaterialPasses.SmoothHeights">
      <summary>
        <para>Built-in render pass for smoothing the Terrain height.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainTools.TerrainBuiltinPaintMaterialPasses.StampHeight">
      <summary>
        <para>Built-in render pass for stamping heights on the Terrain.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TerrainTools.TerrainPaintUtility">
      <summary>
        <para>A set of utility functions for custom terrain paint tools.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.BeginPaintHeightmap(UnityEngine.Terrain,UnityEngine.Rect,System.Int32,System.Boolean)">
      <summary>
        <para>Helper function to set up a PaintContext for modifying the heightmap of one or more Terrain tiles.</para>
      </summary>
      <param name="terrain">Reference Terrain tile.</param>
      <param name="boundsInTerrainSpace">The region in terrain space to edit.</param>
      <param name="extraBorderPixels">Number of extra border pixels required.</param>
      <param name="fillOutsideTerrain">Whether to fill empty space outside of Terrain tiles with data from the nearest tile.</param>
      <returns>
        <para>PaintContext containing the combined heightmap data for the specified region.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.BeginPaintHoles(UnityEngine.Terrain,UnityEngine.Rect,System.Int32,System.Boolean)">
      <summary>
        <para>Helper function to set up a PaintContext for modifying the Terrain holes of one or more Terrain tiles.</para>
      </summary>
      <param name="terrain">Reference Terrain tile.</param>
      <param name="boundsInTerrainSpace">The region in Terrain space to edit.</param>
      <param name="extraBorderPixels">Number of extra border pixels required.</param>
      <param name="fillOutsideTerrain">Whether to fill empty space outside of Terrain tiles with data from the nearest tile.</param>
      <returns>
        <para>PaintContext that contains the combined Terrain holes data for the specified region.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.BeginPaintTexture(UnityEngine.Terrain,UnityEngine.Rect,UnityEngine.TerrainLayer,System.Int32,System.Boolean)">
      <summary>
        <para>Helper function to set up a PaintContext for modifying the alphamap of one or more Terrain tiles.</para>
      </summary>
      <param name="terrain">Reference Terrain tile.</param>
      <param name="inputLayer">Selects the alphamap to paint.</param>
      <param name="boundsInTerrainSpace">The region in terrain space to edit.</param>
      <param name="extraBorderPixels">Number of extra border pixels required.</param>
      <param name="fillOutsideTerrain">Whether to fill empty space outside of Terrain tiles with data from the nearest tile.</param>
      <returns>
        <para>PaintContext containing the combined alphamap data for the specified region.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.BuildTransformPaintContextUVToPaintContextUV(UnityEngine.TerrainTools.PaintContext,UnityEngine.TerrainTools.PaintContext,UnityEngine.Vector4&amp;)">
      <summary>
        <para>Builds a Scale &amp; Offset transform to convert between one PaintContext's UV space and another PaintContext's UV space.</para>
      </summary>
      <param name="src">Source PaintContext.</param>
      <param name="dst">Destination PaintContext.</param>
      <param name="scaleOffset">ScaleOffset transform.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.CalculateBrushTransform(UnityEngine.Terrain,UnityEngine.Vector2,System.Single,System.Single)">
      <summary>
        <para>Creates a BrushTransform from the input parameters.</para>
      </summary>
      <param name="terrain">Reference terrain, defines terrain UV and object space.</param>
      <param name="brushCenterTerrainUV">Center point of the brush, in terrain UV space (0-1 across the terrain tile).</param>
      <param name="brushSize">Size of the brush, in terrain space.</param>
      <param name="brushRotationDegrees">Brush rotation in degrees (clockwise).</param>
      <returns>
        <para>Transform from terrain space to Brush UVs.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.CollectNormals(UnityEngine.Terrain,UnityEngine.Rect,System.Int32,System.Boolean)">
      <summary>
        <para>Helper function to set up a PaintContext that collects mesh normal data from one or more Terrain tiles.</para>
      </summary>
      <param name="terrain">Reference Terrain tile.</param>
      <param name="boundsInTerrainSpace">The region in terrain space from which to collect normals.</param>
      <param name="extraBorderPixels">Number of extra border pixels required.</param>
      <param name="fillOutsideTerrain">Whether to fill empty space outside of Terrain tiles with data from the nearest tile.</param>
      <returns>
        <para>PaintContext containing the combined normalmap data for the specified region.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.EndPaintHeightmap(UnityEngine.TerrainTools.PaintContext,System.String)">
      <summary>
        <para>Helper function to complete a heightmap modification.</para>
      </summary>
      <param name="ctx">The heightmap paint context to complete.</param>
      <param name="editorUndoName">Unique name used for the undo stack.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.EndPaintHoles(UnityEngine.TerrainTools.PaintContext,System.String)">
      <summary>
        <para>Helper function to complete a Terrain holes modification.</para>
      </summary>
      <param name="ctx">The Terrain holes PaintContext to complete.</param>
      <param name="editorUndoName">Unique name used for the undo stack.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.EndPaintTexture(UnityEngine.TerrainTools.PaintContext,System.String)">
      <summary>
        <para>Helper function to complete a texture alphamap modification.</para>
      </summary>
      <param name="ctx">The texture paint context to complete.</param>
      <param name="editorUndoName">Unique name used for the undo stack.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.FindTerrainLayerIndex(UnityEngine.Terrain,UnityEngine.TerrainLayer)">
      <summary>
        <para>Finds the index of a TerrainLayer in a Terrain tile.</para>
      </summary>
      <param name="terrain">Terrain tile.</param>
      <param name="inputLayer">Terrain layer to search for.</param>
      <returns>
        <para>Returns the index of the terrain layer if it exists or -1 if it doesn't exist.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.GetBlitMaterial">
      <summary>
        <para>Returns the default material for blitting operations.</para>
      </summary>
      <returns>
        <para>Built in "Hidden/BlitCopy" material.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.GetBrushWorldSizeLimits(System.Single&amp;,System.Single&amp;,System.Single,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Calculates the minimum and maximum Brush size limits, in world space.</para>
      </summary>
      <param name="minBrushWorldSize">Returns the minimum Brush size, in world space units.</param>
      <param name="maxBrushWorldSize">Returns the maximum Brush size, in world space units.</param>
      <param name="terrainTileWorldSize">The size of a Terrain tile, in world space units.</param>
      <param name="terrainTileTextureResolutionPixels">The resolution of the Terrain tile texture the Brush edits, in pixels.</param>
      <param name="minBrushResolutionPixels">The minimum Brush resolution, in pixels.  Default is 1 pixel.</param>
      <param name="maxBrushResolutionPixels">The maximum Brush resolution, in pixels.  Default is 8192 pixels.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.GetBuiltinPaintMaterial">
      <summary>
        <para>Returns the built-in in paint material used by the built-in tools.</para>
      </summary>
      <returns>
        <para>Built-in terrain paint material.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.GetCopyTerrainLayerMaterial">
      <summary>
        <para>Returns the default copy terrain layer material.</para>
      </summary>
      <returns>
        <para>Built in "HiddenTerrainTerrainLayerUtils" material.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.GetHeightBlitMaterial">
      <summary>
        <para>Returns the Material to use when copying the Terrain heightmap.</para>
      </summary>
      <returns>
        <para>Built in "HiddenTerrainEngineHeightBlitCopy" material.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.GetTerrainAlphaMapChecked(UnityEngine.Terrain,System.Int32)">
      <summary>
        <para>Returns the alphamap texture at mapIndex.</para>
      </summary>
      <param name="terrain">Terrain tile.</param>
      <param name="mapIndex">Index to retrieve.</param>
      <returns>
        <para>Alphamap texture at mapIndex.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.ReleaseContextResources(UnityEngine.TerrainTools.PaintContext)">
      <summary>
        <para>Releases the allocated resources of the specified PaintContext.</para>
      </summary>
      <param name="ctx">The PaintContext containing the resources to release.</param>
    </member>
    <member name="M:UnityEngine.TerrainTools.TerrainPaintUtility.SetupTerrainToolMaterialProperties(UnityEngine.TerrainTools.PaintContext,UnityEngine.TerrainTools.BrushTransform&amp;,UnityEngine.Material)">
      <summary>
        <para>Sets up all of the material properties used by functions in TerrainTool.cginc.</para>
      </summary>
      <param name="paintContext">PaintContext describing the area we are editing, and the terrain space.</param>
      <param name="brushXform">BrushTransform from terrain space to Brush UVs.</param>
      <param name="material">Material to populate with transform properties.</param>
    </member>
    <member name="T:UnityEngine.TerrainUtils.TerrainMap">
      <summary>
        <para>Type for mapping 2D (X,Z) tile coordinates to a Terrain object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainUtils.TerrainMap.terrainTiles">
      <summary>
        <para>Mapping from TileCoord to Terrain.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainUtils.TerrainMap.CreateFromConnectedNeighbors">
      <summary>
        <para>Creates a TerrainMap from the neighbors connected to the origin Terrain.</para>
      </summary>
      <param name="originTerrain">Terrain that is given tile coordinate (0,0).</param>
      <param name="filter">Filter to apply when populating the map. If null, no filter is applied.</param>
      <param name="fullValidation">Validate the Terrain map. Default is true.</param>
      <returns>
        <para>The resulting Terrain map. Can return null when no Terrain objects pass the filter.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainUtils.TerrainMap.CreateFromPlacement">
      <summary>
        <para>Creates a TerrainMap from the positions of all active Terrains.</para>
      </summary>
      <param name="originTerrain">Defines the grid origin and size, as well as group id if no filter is specified.</param>
      <param name="gridOrigin">Origin of the grid.</param>
      <param name="gridSize">Size of the grid. Typically takes the terrain size.x and size.z.</param>
      <param name="filter">Filter to be applied when populating the map. If null, the filter will fall back to matching terrains in the same group as the origin.</param>
      <param name="fullValidation">Validate the Terrain map. Default is true.</param>
      <returns>
        <para>The resulting Terrain map. Can return null when no Terrain objects pass the filter.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainUtils.TerrainMap.CreateFromPlacement">
      <summary>
        <para>Creates a TerrainMap from the positions of all active Terrains.</para>
      </summary>
      <param name="originTerrain">Defines the grid origin and size, as well as group id if no filter is specified.</param>
      <param name="gridOrigin">Origin of the grid.</param>
      <param name="gridSize">Size of the grid. Typically takes the terrain size.x and size.z.</param>
      <param name="filter">Filter to be applied when populating the map. If null, the filter will fall back to matching terrains in the same group as the origin.</param>
      <param name="fullValidation">Validate the Terrain map. Default is true.</param>
      <returns>
        <para>The resulting Terrain map. Can return null when no Terrain objects pass the filter.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainUtils.TerrainMap.GetTerrain(System.Int32,System.Int32)">
      <summary>
        <para>Retrieves the Terrain object corresponding to the tile coordinates (tileX,tileZ).</para>
      </summary>
      <param name="tileX">Tile X coordinate.</param>
      <param name="tileZ">Tile Z coordinate.</param>
      <returns>
        <para>Returns a valid Terrain object if successful, null otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.TerrainUtils.TerrainTileCoord">
      <summary>
        <para>Specifies a set of 2D tile coordinates.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainUtils.TerrainTileCoord.tileX">
      <summary>
        <para>Tile X coordinate.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainUtils.TerrainTileCoord.tileZ">
      <summary>
        <para>Tile Z coordinate.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TerrainUtils.TerrainUtility">
      <summary>
        <para>Provides a set of utility functions that are used by the terrain tools.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainUtils.TerrainUtility.AutoConnect">
      <summary>
        <para>Automatically connects neighboring terrains.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Tree">
      <summary>
        <para>Tree Component for the tree creator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Tree.data">
      <summary>
        <para>Data asociated to the Tree.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Tree.hasSpeedTreeWind">
      <summary>
        <para>Tells if there is wind data exported from SpeedTree are saved on this component.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TreeInstance">
      <summary>
        <para>Contains information about a tree placed in the Terrain game object.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TreeInstance.color">
      <summary>
        <para>Color of this instance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TreeInstance.heightScale">
      <summary>
        <para>Height scale of this instance (compared to the prototype's size).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TreeInstance.lightmapColor">
      <summary>
        <para>Lightmap color calculated for this instance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TreeInstance.position">
      <summary>
        <para>Position of the tree.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TreeInstance.prototypeIndex">
      <summary>
        <para>Index of this instance in the TerrainData.treePrototypes array.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TreeInstance.rotation">
      <summary>
        <para>Read-only.

Rotation of the tree on X-Z plane (in radians).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TreeInstance.widthScale">
      <summary>
        <para>Width scale of this instance (compared to the prototype's size).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TreePrototype">
      <summary>
        <para>Simple class that contains a pointer to a tree prototype.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TreePrototype.bendFactor">
      <summary>
        <para>Bend factor of the tree prototype.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TreePrototype.navMeshLod">
      <summary>
        <para>The LOD index of a Tree LODGroup that Unity uses to generate a NavMesh. It uses this value only for Trees with a LODGroup, and ignores this value for regular Trees.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TreePrototype.prefab">
      <summary>
        <para>Retrieves the actual GameObject used by the tree.</para>
      </summary>
    </member>
    <member name="A:UnityEngine.TerrainModule">
      <summary>
        <para>The Terrain module implements Unity's Terrain rendering engine available through the Terrain component.</para>
      </summary>
    </member>
  </members>
</doc>
